var Clappr = function () {
    "use strict"; function t(t, e) { var r = Object.keys(t); if (Object.getOwnPropertySymbols) { var n = Object.getOwnPropertySymbols(t); e && (n = n.filter((function (e) { return Object.getOwnPropertyDescriptor(t, e).enumerable }))), r.push.apply(r, n) } return r } function e(e) { for (var n = 1; n < arguments.length; n++) { var i = null != arguments[n] ? arguments[n] : {}; n % 2 ? t(Object(i), !0).forEach((function (t) { r(e, t, i[t]) })) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(i)) : t(Object(i)).forEach((function (t) { Object.defineProperty(e, t, Object.getOwnPropertyDescriptor(i, t)) })) } return e } function r(t, e, r) { return e in t ? Object.defineProperty(t, e, { value: r, enumerable: !0, configurable: !0, writable: !0 }) : t[e] = r, t } function n(t, e) { var r = Object.keys(t); if (Object.getOwnPropertySymbols) { var n = Object.getOwnPropertySymbols(t); e && (n = n.filter((function (e) { return Object.getOwnPropertyDescriptor(t, e).enumerable }))), r.push.apply(r, n) } return r } function i(t) { for (var e = 1; e < arguments.length; e++) { var r = null != arguments[e] ? arguments[e] : {}; e % 2 ? n(Object(r), !0).forEach((function (e) { u(t, e, r[e]) })) : Object.getOwnPropertyDescriptors ? Object.defineProperties(t, Object.getOwnPropertyDescriptors(r)) : n(Object(r)).forEach((function (e) { Object.defineProperty(t, e, Object.getOwnPropertyDescriptor(r, e)) })) } return t } function a(t) { return a = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (t) { return typeof t } : function (t) { return t && "function" == typeof Symbol && t.constructor === Symbol && t !== Symbol.prototype ? "symbol" : typeof t }, a(t) } function s(t, e) { if (!(t instanceof e)) throw new TypeError("Cannot call a class as a function") } function o(t, e) { for (var r = 0; r < e.length; r++) { var n = e[r]; n.enumerable = n.enumerable || !1, n.configurable = !0, "value" in n && (n.writable = !0), Object.defineProperty(t, n.key, n) } } function l(t, e, r) { return e && o(t.prototype, e), r && o(t, r), Object.defineProperty(t, "prototype", { writable: !1 }), t } function u(t, e, r) { return e in t ? Object.defineProperty(t, e, { value: r, enumerable: !0, configurable: !0, writable: !0 }) : t[e] = r, t } function c(t, e) { if ("function" != typeof e && null !== e) throw new TypeError("Super expression must either be null or a function"); t.prototype = Object.create(e && e.prototype, { constructor: { value: t, writable: !0, configurable: !0 } }), Object.defineProperty(t, "prototype", { writable: !1 }), e && h(t, e) } function d(t) { return d = Object.setPrototypeOf ? Object.getPrototypeOf : function (t) { return t.__proto__ || Object.getPrototypeOf(t) }, d(t) } function h(t, e) { return h = Object.setPrototypeOf || function (t, e) { return t.__proto__ = e, t }, h(t, e) } function f(t) { if (void 0 === t) throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); return t } function p(t, e) { if (e && ("object" == typeof e || "function" == typeof e)) return e; if (void 0 !== e) throw new TypeError("Derived constructors may only return object or undefined"); return f(t) } function g(t) { var e = function () { if ("undefined" == typeof Reflect || !Reflect.construct) return !1; if (Reflect.construct.sham) return !1; if ("function" == typeof Proxy) return !0; try { return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], (function () { }))), !0 } catch (t) { return !1 } }(); return function () { var r, n = d(t); if (e) { var i = d(this).constructor; r = Reflect.construct(n, arguments, i) } else r = n.apply(this, arguments); return p(this, r) } } function v(t, e) { for (; !Object.prototype.hasOwnProperty.call(t, e) && null !== (t = d(t));); return t } function m() { return m = "undefined" != typeof Reflect && Reflect.get ? Reflect.get : function (t, e, r) { var n = v(t, e); if (n) { var i = Object.getOwnPropertyDescriptor(n, e); return i.get ? i.get.call(arguments.length < 3 ? t : r) : i.value } }, m.apply(this, arguments) } function y(t, e) { return function (t) { if (Array.isArray(t)) return t }(t) || function (t, e) { var r = null == t ? null : "undefined" != typeof Symbol && t[Symbol.iterator] || t["@@iterator"]; if (null == r) return; var n, i, a = [], s = !0, o = !1; try { for (r = r.call(t); !(s = (n = r.next()).done) && (a.push(n.value), !e || a.length !== e); s = !0); } catch (t) { o = !0, i = t } finally { try { s || null == r.return || r.return() } finally { if (o) throw i } } return a }(t, e) || E(t, e) || function () { throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.") }() } function A(t) { return function (t) { if (Array.isArray(t)) return T(t) }(t) || function (t) { if ("undefined" != typeof Symbol && null != t[Symbol.iterator] || null != t["@@iterator"]) return Array.from(t) }(t) || E(t) || function () { throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.") }() } function E(t, e) { if (t) { if ("string" == typeof t) return T(t, e); var r = Object.prototype.toString.call(t).slice(8, -1); return "Object" === r && t.constructor && (r = t.constructor.name), "Map" === r || "Set" === r ? Array.from(t) : "Arguments" === r || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r) ? T(t, e) : void 0 } } function T(t, e) { (null == e || e > t.length) && (e = t.length); for (var r = 0, n = new Array(e); r < e; r++)n[r] = t[r]; return n } function b(t, e) { var r = "undefined" != typeof Symbol && t[Symbol.iterator] || t["@@iterator"]; if (!r) { if (Array.isArray(t) || (r = E(t)) || e && t && "number" == typeof t.length) { r && (t = r); var n = 0, i = function () { }; return { s: i, n: function () { return n >= t.length ? { done: !0 } : { done: !1, value: t[n++] } }, e: function (t) { throw t }, f: i } } throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.") } var a, s = !0, o = !1; return { s: function () { r = r.call(t) }, n: function () { var t = r.next(); return s = t.done, t }, e: function (t) { o = !0, a = t }, f: function () { try { s || null == r.return || r.return() } finally { if (o) throw a } } } } Array.prototype.find || Object.defineProperty(Array.prototype, "find", { value: function (t) { if (null == this) throw new TypeError('"this" is null or not defined'); var e = Object(this), r = e.length >>> 0; if ("function" != typeof t) throw new TypeError("predicate must be a function"); for (var n = arguments[1], i = 0; i < r;) { var a = e[i]; if (t.call(n, a, i, e)) return a; i++ } } }), Object.entries || (Object.entries = function (t) { for (var e = Object.keys(t), r = e.length, n = new Array(r); r--;)n[r] = [e[r], t[e[r]]]; return n }), Object.values || (Object.values = function (t) { for (var e = Object.keys(t), r = e.length, n = new Array(r); r--;)n[r] = t[e[r]]; return n }), "function" != typeof Object.assign && Object.defineProperty(Object, "assign", { value: function (t, e) { if (null == t) throw new TypeError("Cannot convert undefined or null to object"); for (var r = Object(t), n = 1; n < arguments.length; n++) { var i = arguments[n]; if (null != i) for (var a in i) Object.prototype.hasOwnProperty.call(i, a) && (r[a] = i[a]) } return r }, writable: !0, configurable: !0 }), Array.prototype.findIndex || Object.defineProperty(Array.prototype, "findIndex", { value: function (t) { if (null == this) throw new TypeError('"this" is null or not defined'); var e = Object(this), r = e.length >>> 0; if ("function" != typeof t) throw new TypeError("predicate must be a function"); for (var n = arguments[1], i = 0; i < r;) { var a = e[i]; if (t.call(n, a, i, e)) return i; i++ } return -1 }, configurable: !0, writable: !0 }); var k, S = { mp4: "data:video/mp4;base64,AAAAHGZ0eXBpc29tAAACAGlzb21pc28ybXA0MQAAAAhmcmVlAAAC721kYXQhEAUgpBv/wAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA3pwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAcCEQBSCkG//AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADengAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAcAAAAsJtb292AAAAbG12aGQAAAAAAAAAAAAAAAAAAAPoAAAALwABAAABAAAAAAAAAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAEAAAAAAAAAAAAAAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADAAAB7HRyYWsAAABcdGtoZAAAAAMAAAAAAAAAAAAAAAIAAAAAAAAALwAAAAAAAAAAAAAAAQEAAAAAAQAAAAAAAAAAAAAAAAAAAAEAAAAAAAAAAAAAAAAAAEAAAAAAAAAAAAAAAAAAACRlZHRzAAAAHGVsc3QAAAAAAAAAAQAAAC8AAAAAAAEAAAAAAWRtZGlhAAAAIG1kaGQAAAAAAAAAAAAAAAAAAKxEAAAIAFXEAAAAAAAtaGRscgAAAAAAAAAAc291bgAAAAAAAAAAAAAAAFNvdW5kSGFuZGxlcgAAAAEPbWluZgAAABBzbWhkAAAAAAAAAAAAAAAkZGluZgAAABxkcmVmAAAAAAAAAAEAAAAMdXJsIAAAAAEAAADTc3RibAAAAGdzdHNkAAAAAAAAAAEAAABXbXA0YQAAAAAAAAABAAAAAAAAAAAAAgAQAAAAAKxEAAAAAAAzZXNkcwAAAAADgICAIgACAASAgIAUQBUAAAAAAfQAAAHz+QWAgIACEhAGgICAAQIAAAAYc3R0cwAAAAAAAAABAAAAAgAABAAAAAAcc3RzYwAAAAAAAAABAAAAAQAAAAIAAAABAAAAHHN0c3oAAAAAAAAAAAAAAAIAAAFzAAABdAAAABRzdGNvAAAAAAAAAAEAAAAsAAAAYnVkdGEAAABabWV0YQAAAAAAAAAhaGRscgAAAAAAAAAAbWRpcmFwcGwAAAAAAAAAAAAAAAAtaWxzdAAAACWpdG9vAAAAHWRhdGEAAAABAAAAAExhdmY1Ni40MC4xMDE=" }, _ = function () { var t, e, r, n, i, a, s = [], o = s.concat, l = s.filter, u = s.slice, c = window.document, d = {}, h = {}, f = { "column-count": 1, columns: 1, "font-weight": 1, "line-height": 1, opacity: 1, "z-index": 1, zoom: 1 }, p = /^\s*<(\w+|!)[^>]*>/, g = /^<(\w+)\s*\/?>(?:<\/\1>|)$/, v = /<(?!area|br|col|embed|hr|img|input|link|meta|param)(([\w:]+)[^>]*)\/>/gi, m = /^(?:body|html)$/i, y = /([A-Z])/g, A = ["val", "css", "html", "text", "data", "width", "height", "offset"], E = c.createElement("table"), T = c.createElement("tr"), b = { tr: c.createElement("tbody"), tbody: E, thead: E, tfoot: E, td: T, th: T, "*": c.createElement("div") }, k = /complete|loaded|interactive/, S = /^[\w-]*$/, _ = {}, C = _.toString, L = {}, R = c.createElement("div"), D = { tabindex: "tabIndex", readonly: "readOnly", for: "htmlFor", class: "className", maxlength: "maxLength", cellspacing: "cellSpacing", cellpadding: "cellPadding", rowspan: "rowSpan", colspan: "colSpan", usemap: "useMap", frameborder: "frameBorder", contenteditable: "contentEditable" }, I = Array.isArray || function (t) { return t instanceof Array }; function O(t) { return null == t ? String(t) : _[C.call(t)] || "object" } function w(t) { return "function" == O(t) } function P(t) { return null != t && t == t.window } function x(t) { return null != t && t.nodeType == t.DOCUMENT_NODE } function N(t) { return "object" == O(t) } function M(t) { return N(t) && !P(t) && Object.getPrototypeOf(t) == Object.prototype } function F(t) { var e = !!t && "length" in t && t.length, n = r.type(t); return "function" != n && !P(t) && ("array" == n || 0 === e || "number" == typeof e && e > 0 && e - 1 in t) } function B(t) { return t.replace(/::/g, "/").replace(/([A-Z]+)([A-Z][a-z])/g, "$1_$2").replace(/([a-z\d])([A-Z])/g, "$1_$2").replace(/_/g, "-").toLowerCase() } function U(t) { return t in h ? h[t] : h[t] = new RegExp("(^|\\s)" + t + "(\\s|$)") } function j(t, e) { return "number" != typeof e || f[B(t)] ? e : e + "px" } function G(t) { return "children" in t ? u.call(t.children) : r.map(t.childNodes, (function (t) { if (1 == t.nodeType) return t })) } function V(t, e) { var r, n = t ? t.length : 0; for (r = 0; r < n; r++)this[r] = t[r]; this.length = n, this.selector = e || "" } function K(r, n, i) { for (e in n) i && (M(n[e]) || I(n[e])) ? (M(n[e]) && !M(r[e]) && (r[e] = {}), I(n[e]) && !I(r[e]) && (r[e] = []), K(r[e], n[e], i)) : n[e] !== t && (r[e] = n[e]) } function H(t, e) { return null == e ? r(t) : r(t).filter(e) } function Y(t, e, r, n) { return w(e) ? e.call(t, r, n) : e } function W(t, e, r) { null == r ? t.removeAttribute(e) : t.setAttribute(e, r) } function $(e, r) { var n = e.className || "", i = n && n.baseVal !== t; if (r === t) return i ? n.baseVal : n; i ? n.baseVal = r : e.className = r } function z(t) { try { return t ? "true" == t || "false" != t && ("null" == t ? null : +t + "" == t ? +t : /^[\[\{]/.test(t) ? r.parseJSON(t) : t) : t } catch (e) { return t } } function q(t, e) { e(t); for (var r = 0, n = t.childNodes.length; r < n; r++)q(t.childNodes[r], e) } return L.matches = function (t, e) { if (!e || !t || 1 !== t.nodeType) return !1; var r = t.matches || t.webkitMatchesSelector || t.mozMatchesSelector || t.oMatchesSelector || t.matchesSelector; if (r) return r.call(t, e); var n, i = t.parentNode, a = !i; return a && (i = R).appendChild(t), n = ~L.qsa(i, e).indexOf(t), a && R.removeChild(t), n }, i = function (t) { return t.replace(/-+(.)?/g, (function (t, e) { return e ? e.toUpperCase() : "" })) }, a = function (t) { return l.call(t, (function (e, r) { return t.indexOf(e) == r })) }, L.fragment = function (e, n, i) { var a, s, o; return g.test(e) && (a = r(c.createElement(RegExp.$1))), a || (e.replace && (e = e.replace(v, "<$1></$2>")), n === t && (n = p.test(e) && RegExp.$1), n in b || (n = "*"), (o = b[n]).innerHTML = "" + e, a = r.each(u.call(o.childNodes), (function () { o.removeChild(this) }))), M(i) && (s = r(a), r.each(i, (function (t, e) { A.indexOf(t) > -1 ? s[t](e) : s.attr(t, e) }))), a }, L.Z = function (t, e) { return new V(t, e) }, L.isZ = function (t) { return t instanceof L.Z }, L.init = function (e, n) { var i, a; if (!e) return L.Z(); if ("string" == typeof e) if ("<" == (e = e.trim())[0] && p.test(e)) i = L.fragment(e, RegExp.$1, n), e = null; else { if (n !== t) return r(n).find(e); i = L.qsa(c, e) } else { if (w(e)) return r(c).ready(e); if (L.isZ(e)) return e; if (I(e)) a = e, i = l.call(a, (function (t) { return null != t })); else if (N(e)) i = [e], e = null; else if (p.test(e)) i = L.fragment(e.trim(), RegExp.$1, n), e = null; else { if (n !== t) return r(n).find(e); i = L.qsa(c, e) } } return L.Z(i, e) }, (r = function (t, e) { return L.init(t, e) }).extend = function (t) { var e, r = u.call(arguments, 1); return "boolean" == typeof t && (e = t, t = r.shift()), r.forEach((function (r) { K(t, r, e) })), t }, L.qsa = function (t, e) { var r, n = "#" == e[0], i = !n && "." == e[0], a = n || i ? e.slice(1) : e, s = S.test(a); return t.getElementById && s && n ? (r = t.getElementById(a)) ? [r] : [] : 1 !== t.nodeType && 9 !== t.nodeType && 11 !== t.nodeType ? [] : u.call(s && !n && t.getElementsByClassName ? i ? t.getElementsByClassName(a) : t.getElementsByTagName(e) : t.querySelectorAll(e)) }, r.contains = c.documentElement.contains ? function (t, e) { return t !== e && t.contains(e) } : function (t, e) { for (; e && (e = e.parentNode);)if (e === t) return !0; return !1 }, r.type = O, r.isFunction = w, r.isWindow = P, r.isArray = I, r.isPlainObject = M, r.isEmptyObject = function (t) { var e; for (e in t) return !1; return !0 }, r.isNumeric = function (t) { var e = Number(t), r = typeof t; return null != t && "boolean" != r && ("string" != r || t.length) && !isNaN(e) && isFinite(e) || !1 }, r.inArray = function (t, e, r) { return s.indexOf.call(e, t, r) }, r.camelCase = i, r.trim = function (t) { return null == t ? "" : String.prototype.trim.call(t) }, r.uuid = 0, r.support = {}, r.expr = {}, r.noop = function () { }, r.map = function (t, e) { var n, i, a, s, o = []; if (F(t)) for (i = 0; i < t.length; i++)null != (n = e(t[i], i)) && o.push(n); else for (a in t) null != (n = e(t[a], a)) && o.push(n); return (s = o).length > 0 ? r.fn.concat.apply([], s) : s }, r.each = function (t, e) { var r, n; if (F(t)) { for (r = 0; r < t.length; r++)if (!1 === e.call(t[r], r, t[r])) return t } else for (n in t) if (!1 === e.call(t[n], n, t[n])) return t; return t }, r.grep = function (t, e) { return l.call(t, e) }, window.JSON && (r.parseJSON = JSON.parse), r.each("Boolean Number String Function Array Date RegExp Object Error".split(" "), (function (t, e) { _["[object " + e + "]"] = e.toLowerCase() })), r.fn = { constructor: L.Z, length: 0, forEach: s.forEach, reduce: s.reduce, push: s.push, sort: s.sort, splice: s.splice, indexOf: s.indexOf, concat: function () { var t, e, r = []; for (t = 0; t < arguments.length; t++)e = arguments[t], r[t] = L.isZ(e) ? e.toArray() : e; return o.apply(L.isZ(this) ? this.toArray() : this, r) }, map: function (t) { return r(r.map(this, (function (e, r) { return t.call(e, r, e) }))) }, slice: function () { return r(u.apply(this, arguments)) }, ready: function (t) { return k.test(c.readyState) && c.body ? t(r) : c.addEventListener("DOMContentLoaded", (function () { t(r) }), !1), this }, get: function (e) { return e === t ? u.call(this) : this[e >= 0 ? e : e + this.length] }, toArray: function () { return this.get() }, size: function () { return this.length }, remove: function () { return this.each((function () { null != this.parentNode && this.parentNode.removeChild(this) })) }, each: function (t) { return s.every.call(this, (function (e, r) { return !1 !== t.call(e, r, e) })), this }, filter: function (t) { return w(t) ? this.not(this.not(t)) : r(l.call(this, (function (e) { return L.matches(e, t) }))) }, add: function (t, e) { return r(a(this.concat(r(t, e)))) }, is: function (t) { return this.length > 0 && L.matches(this[0], t) }, not: function (e) { var n = []; if (w(e) && e.call !== t) this.each((function (t) { e.call(this, t) || n.push(this) })); else { var i = "string" == typeof e ? this.filter(e) : F(e) && w(e.item) ? u.call(e) : r(e); this.forEach((function (t) { i.indexOf(t) < 0 && n.push(t) })) } return r(n) }, has: function (t) { return this.filter((function () { return N(t) ? r.contains(this, t) : r(this).find(t).size() })) }, eq: function (t) { return -1 === t ? this.slice(t) : this.slice(t, +t + 1) }, first: function () { var t = this[0]; return t && !N(t) ? t : r(t) }, last: function () { var t = this[this.length - 1]; return t && !N(t) ? t : r(t) }, find: function (t) { var e = this; return t ? "object" == typeof t ? r(t).filter((function () { var t = this; return s.some.call(e, (function (e) { return r.contains(e, t) })) })) : 1 == this.length ? r(L.qsa(this[0], t)) : this.map((function () { return L.qsa(this, t) })) : r() }, closest: function (t, e) { var n = [], i = "object" == typeof t && r(t); return this.each((function (r, a) { for (; a && !(i ? i.indexOf(a) >= 0 : L.matches(a, t));)a = a !== e && !x(a) && a.parentNode; a && n.indexOf(a) < 0 && n.push(a) })), r(n) }, parents: function (t) { for (var e = [], n = this; n.length > 0;)n = r.map(n, (function (t) { if ((t = t.parentNode) && !x(t) && e.indexOf(t) < 0) return e.push(t), t })); return H(e, t) }, parent: function (t) { return H(a(this.pluck("parentNode")), t) }, children: function (t) { return H(this.map((function () { return G(this) })), t) }, contents: function () { return this.map((function () { return this.contentDocument || u.call(this.childNodes) })) }, siblings: function (t) { return H(this.map((function (t, e) { return l.call(G(e.parentNode), (function (t) { return t !== e })) })), t) }, empty: function () { return this.each((function () { this.innerHTML = "" })) }, pluck: function (t) { return r.map(this, (function (e) { return e[t] })) }, show: function () { return this.each((function () { var t, e, r; "none" == this.style.display && (this.style.display = ""), "none" == getComputedStyle(this, "").getPropertyValue("display") && (this.style.display = (t = this.nodeName, d[t] || (e = c.createElement(t), c.body.appendChild(e), r = getComputedStyle(e, "").getPropertyValue("display"), e.parentNode.removeChild(e), "none" == r && (r = "block"), d[t] = r), d[t])) })) }, replaceWith: function (t) { return this.before(t).remove() }, wrap: function (t) { var e = w(t); if (this[0] && !e) var n = r(t).get(0), i = n.parentNode || this.length > 1; return this.each((function (a) { r(this).wrapAll(e ? t.call(this, a) : i ? n.cloneNode(!0) : n) })) }, wrapAll: function (t) { if (this[0]) { var e; for (r(this[0]).before(t = r(t)); (e = t.children()).length;)t = e.first(); r(t).append(this) } return this }, wrapInner: function (t) { var e = w(t); return this.each((function (n) { var i = r(this), a = i.contents(), s = e ? t.call(this, n) : t; a.length ? a.wrapAll(s) : i.append(s) })) }, unwrap: function () { return this.parent().each((function () { r(this).replaceWith(r(this).children()) })), this }, clone: function () { return this.map((function () { return this.cloneNode(!0) })) }, hide: function () { return this.css("display", "none") }, toggle: function (e) { return this.each((function () { var n = r(this); (e === t ? "none" == n.css("display") : e) ? n.show() : n.hide() })) }, prev: function (t) { return r(this.pluck("previousElementSibling")).filter(t || "*") }, next: function (t) { return r(this.pluck("nextElementSibling")).filter(t || "*") }, html: function (t) { return 0 in arguments ? this.each((function (e) { var n = this.innerHTML; r(this).empty().append(Y(this, t, e, n)) })) : 0 in this ? this[0].innerHTML : null }, text: function (t) { return 0 in arguments ? this.each((function (e) { var r = Y(this, t, e, this.textContent); this.textContent = null == r ? "" : "" + r })) : 0 in this ? this.pluck("textContent").join("") : null }, attr: function (r, n) { var i; return "string" != typeof r || 1 in arguments ? this.each((function (t) { if (1 === this.nodeType) if (N(r)) for (e in r) W(this, e, r[e]); else W(this, r, Y(this, n, t, this.getAttribute(r))) })) : 0 in this && 1 == this[0].nodeType && null != (i = this[0].getAttribute(r)) ? i : t }, removeAttr: function (t) { return this.each((function () { 1 === this.nodeType && t.split(" ").forEach((function (t) { W(this, t) }), this) })) }, prop: function (t, e) { return t = D[t] || t, 1 in arguments ? this.each((function (r) { this[t] = Y(this, e, r, this[t]) })) : this[0] && this[0][t] }, removeProp: function (t) { return t = D[t] || t, this.each((function () { delete this[t] })) }, data: function (e, r) { var n = "data-" + e.replace(y, "-$1").toLowerCase(), i = 1 in arguments ? this.attr(n, r) : this.attr(n); return null !== i ? z(i) : t }, val: function (t) { return 0 in arguments ? (null == t && (t = ""), this.each((function (e) { this.value = Y(this, t, e, this.value) }))) : this[0] && (this[0].multiple ? r(this[0]).find("option").filter((function () { return this.selected })).pluck("value") : this[0].value) }, offset: function (t) { if (t) return this.each((function (e) { var n = r(this), i = Y(this, t, e, n.offset()), a = n.offsetParent().offset(), s = { top: i.top - a.top, left: i.left - a.left }; "static" == n.css("position") && (s.position = "relative"), n.css(s) })); if (!this.length) return null; if (c.documentElement !== this[0] && !r.contains(c.documentElement, this[0])) return { top: 0, left: 0 }; var e = this[0].getBoundingClientRect(); return { left: e.left + window.pageXOffset, top: e.top + window.pageYOffset, width: Math.round(e.width), height: Math.round(e.height) } }, css: function (t, n) { if (arguments.length < 2) { var a = this[0]; if ("string" == typeof t) { if (!a) return; return a.style[i(t)] || getComputedStyle(a, "").getPropertyValue(t) } if (I(t)) { if (!a) return; var s = {}, o = getComputedStyle(a, ""); return r.each(t, (function (t, e) { s[e] = a.style[i(e)] || o.getPropertyValue(e) })), s } } var l = ""; if ("string" == O(t)) n || 0 === n ? l = B(t) + ":" + j(t, n) : this.each((function () { this.style.removeProperty(B(t)) })); else for (e in t) t[e] || 0 === t[e] ? l += B(e) + ":" + j(e, t[e]) + ";" : this.each((function () { this.style.removeProperty(B(e)) })); return this.each((function () { this.style.cssText += ";" + l })) }, index: function (t) { return t ? this.indexOf(r(t)[0]) : this.parent().children().indexOf(this[0]) }, hasClass: function (t) { return !!t && s.some.call(this, (function (t) { return this.test($(t)) }), U(t)) }, addClass: function (t) { return t ? this.each((function (e) { if ("className" in this) { n = []; var i = $(this); Y(this, t, e, i).split(/\s+/g).forEach((function (t) { r(this).hasClass(t) || n.push(t) }), this), n.length && $(this, i + (i ? " " : "") + n.join(" ")) } })) : this }, removeClass: function (e) { return this.each((function (r) { if ("className" in this) { if (e === t) return $(this, ""); n = $(this), Y(this, e, r, n).split(/\s+/g).forEach((function (t) { n = n.replace(U(t), " ") })), $(this, n.trim()) } })) }, toggleClass: function (e, n) { return e ? this.each((function (i) { var a = r(this); Y(this, e, i, $(this)).split(/\s+/g).forEach((function (e) { (n === t ? !a.hasClass(e) : n) ? a.addClass(e) : a.removeClass(e) })) })) : this }, scrollTop: function (e) { if (this.length) { var r = "scrollTop" in this[0]; return e === t ? r ? this[0].scrollTop : this[0].pageYOffset : this.each(r ? function () { this.scrollTop = e } : function () { this.scrollTo(this.scrollX, e) }) } }, scrollLeft: function (e) { if (this.length) { var r = "scrollLeft" in this[0]; return e === t ? r ? this[0].scrollLeft : this[0].pageXOffset : this.each(r ? function () { this.scrollLeft = e } : function () { this.scrollTo(e, this.scrollY) }) } }, position: function () { if (this.length) { var t = this[0], e = this.offsetParent(), n = this.offset(), i = m.test(e[0].nodeName) ? { top: 0, left: 0 } : e.offset(); return n.top -= parseFloat(r(t).css("margin-top")) || 0, n.left -= parseFloat(r(t).css("margin-left")) || 0, i.top += parseFloat(r(e[0]).css("border-top-width")) || 0, i.left += parseFloat(r(e[0]).css("border-left-width")) || 0, { top: n.top - i.top, left: n.left - i.left } } }, offsetParent: function () { return this.map((function () { for (var t = this.offsetParent || c.body; t && !m.test(t.nodeName) && "static" == r(t).css("position");)t = t.offsetParent; return t })) } }, r.fn.detach = r.fn.remove, ["width", "height"].forEach((function (e) { var n = e.replace(/./, (function (t) { return t[0].toUpperCase() })); r.fn[e] = function (i) { var a, s = this[0]; return i === t ? P(s) ? s["inner" + n] : x(s) ? s.documentElement["scroll" + n] : (a = this.offset()) && a[e] : this.each((function (t) { (s = r(this)).css(e, Y(this, i, t, s[e]())) })) } })), ["after", "prepend", "before", "append"].forEach((function (e, n) { var i = n % 2; r.fn[e] = function () { var e, a, s = r.map(arguments, (function (n) { var i = []; return "array" == (e = O(n)) ? (n.forEach((function (e) { return e.nodeType !== t ? i.push(e) : r.zepto.isZ(e) ? i = i.concat(e.get()) : void (i = i.concat(L.fragment(e))) })), i) : "object" == e || null == n ? n : L.fragment(n) })), o = this.length > 1; return s.length < 1 ? this : this.each((function (t, e) { a = i ? e : e.parentNode, e = 0 == n ? e.nextSibling : 1 == n ? e.firstChild : 2 == n ? e : null; var l = r.contains(c.documentElement, a); s.forEach((function (t) { if (o) t = t.cloneNode(!0); else if (!a) return r(t).remove(); a.insertBefore(t, e), l && q(t, (function (t) { if (!(null == t.nodeName || "SCRIPT" !== t.nodeName.toUpperCase() || t.type && "text/javascript" !== t.type || t.src)) { var e = t.ownerDocument ? t.ownerDocument.defaultView : window; e.eval.call(e, t.innerHTML) } })) })) })) }, r.fn[i ? e + "To" : "insert" + (n ? "Before" : "After")] = function (t) { return r(t)[e](this), this } })), L.Z.prototype = V.prototype = r.fn, L.uniq = a, L.deserializeValue = z, r.zepto = L, r }(); window.Zepto = _, void 0 === window.$ && (window.$ = _), function (t) { var e, r, n = +new Date, i = window.document, a = /<script\b[^<]*(?:(?!<\/script>)<[^<]*)*<\/script>/gi, s = /^(?:text|application)\/javascript/i, o = /^(?:text|application)\/xml/i, l = "application/json", u = "text/html", c = /^\s*$/, d = i.createElement("a"); function h(e, r, n, a) { if (e.global) return function (e, r, n) { var i = t.Event(r); return t(e).trigger(i, n), !i.isDefaultPrevented() }(r || i, n, a) } function f(t, e) { var r = e.context; if (!1 === e.beforeSend.call(r, t, e) || !1 === h(e, r, "ajaxBeforeSend", [t, e])) return !1; h(e, r, "ajaxSend", [t, e]) } function p(t, e, r, n) { var i = r.context, a = "success"; r.success.call(i, t, a, e), n && n.resolveWith(i, [t, a, e]), h(r, i, "ajaxSuccess", [e, r, t]), v(a, e, r) } function g(t, e, r, n, i) { var a = n.context; n.error.call(a, r, e, t), i && i.rejectWith(a, [r, e, t]), h(n, a, "ajaxError", [r, n, t || e]), v(e, r, n) } function v(e, r, n) { var i = n.context; n.complete.call(i, r, e), h(n, i, "ajaxComplete", [r, n]), function (e) { e.global && !--t.active && h(e, null, "ajaxStop") }(n) } function m() { } function y(t, e) { return "" == e ? t : (t + "&" + e).replace(/[&?]{1,2}/, "?") } function A(e, r, n, i) { return t.isFunction(r) && (i = n, n = r, r = void 0), t.isFunction(n) || (i = n, n = void 0), { url: e, data: r, success: n, dataType: i } } d.href = window.location.href, t.active = 0, t.ajaxJSONP = function (e, r) { if (!("type" in e)) return t.ajax(e); var a, s, o = e.jsonpCallback, l = (t.isFunction(o) ? o() : o) || "Zepto" + n++, u = i.createElement("script"), c = window[l], d = function (e) { t(u).triggerHandler("error", e || "abort") }, h = { abort: d }; return r && r.promise(h), t(u).on("load error", (function (n, i) { clearTimeout(s), t(u).off().remove(), "error" != n.type && a ? p(a[0], h, e, r) : g(null, i || "error", h, e, r), window[l] = c, a && t.isFunction(c) && c(a[0]), c = a = void 0 })), !1 === f(h, e) ? (d("abort"), h) : (window[l] = function () { a = arguments }, u.src = e.url.replace(/\?(.+)=\?/, "?$1=" + l), i.head.appendChild(u), e.timeout > 0 && (s = setTimeout((function () { d("timeout") }), e.timeout)), h) }, t.ajaxSettings = { type: "GET", beforeSend: m, success: m, error: m, complete: m, context: null, global: !0, xhr: function () { return new window.XMLHttpRequest }, accepts: { script: "text/javascript, application/javascript, application/x-javascript", json: l, xml: "application/xml, text/xml", html: u, text: "text/plain" }, crossDomain: !1, timeout: 0, processData: !0, cache: !0, dataFilter: m }, t.ajax = function (n) { var a, v, A = t.extend({}, n || {}), E = t.Deferred && t.Deferred(); for (e in t.ajaxSettings) void 0 === A[e] && (A[e] = t.ajaxSettings[e]); !function (e) { e.global && 0 == t.active++ && h(e, null, "ajaxStart") }(A), A.crossDomain || ((a = i.createElement("a")).href = A.url, a.href = a.href, A.crossDomain = d.protocol + "//" + d.host != a.protocol + "//" + a.host), A.url || (A.url = window.location.toString()), (v = A.url.indexOf("#")) > -1 && (A.url = A.url.slice(0, v)), function (e) { e.processData && e.data && "string" != t.type(e.data) && (e.data = t.param(e.data, e.traditional)), !e.data || e.type && "GET" != e.type.toUpperCase() && "jsonp" != e.dataType || (e.url = y(e.url, e.data), e.data = void 0) }(A); var T = A.dataType, b = /\?.+=\?/.test(A.url); if (b && (T = "jsonp"), !1 !== A.cache && (n && !0 === n.cache || "script" != T && "jsonp" != T) || (A.url = y(A.url, "_=" + Date.now())), "jsonp" == T) return b || (A.url = y(A.url, A.jsonp ? A.jsonp + "=?" : !1 === A.jsonp ? "" : "callback=?")), t.ajaxJSONP(A, E); var k, S = A.accepts[T], _ = {}, C = function (t, e) { _[t.toLowerCase()] = [t, e] }, L = /^([\w-]+:)\/\//.test(A.url) ? RegExp.$1 : window.location.protocol, R = A.xhr(), D = R.setRequestHeader; if (E && E.promise(R), A.crossDomain || C("X-Requested-With", "XMLHttpRequest"), C("Accept", S || "*/*"), (S = A.mimeType || S) && (S.indexOf(",") > -1 && (S = S.split(",", 2)[0]), R.overrideMimeType && R.overrideMimeType(S)), (A.contentType || !1 !== A.contentType && A.data && "GET" != A.type.toUpperCase()) && C("Content-Type", A.contentType || "application/x-www-form-urlencoded"), A.headers) for (r in A.headers) C(r, A.headers[r]); if (R.setRequestHeader = C, R.onreadystatechange = function () { if (4 == R.readyState) { R.onreadystatechange = m, clearTimeout(k); var e, r = !1; if (R.status >= 200 && R.status < 300 || 304 == R.status || 0 == R.status && "file:" == L) { if (T = T || function (t) { return t && (t = t.split(";", 2)[0]), t && (t == u ? "html" : t == l ? "json" : s.test(t) ? "script" : o.test(t) && "xml") || "text" }(A.mimeType || R.getResponseHeader("content-type")), "arraybuffer" == R.responseType || "blob" == R.responseType) e = R.response; else { e = R.responseText; try { e = function (t, e, r) { if (r.dataFilter == m) return t; var n = r.context; return r.dataFilter.call(n, t, e) }(e, T, A), "script" == T ? (0, eval)(e) : "xml" == T ? e = R.responseXML : "json" == T && (e = c.test(e) ? null : t.parseJSON(e)) } catch (t) { r = t } if (r) return g(r, "parsererror", R, A, E) } p(e, R, A, E) } else g(R.statusText || null, R.status ? "error" : "abort", R, A, E) } }, !1 === f(R, A)) return R.abort(), g(null, "abort", R, A, E), R; var I = !("async" in A) || A.async; if (R.open(A.type, A.url, I, A.username, A.password), A.xhrFields) for (r in A.xhrFields) R[r] = A.xhrFields[r]; for (r in _) D.apply(R, _[r]); return A.timeout > 0 && (k = setTimeout((function () { R.onreadystatechange = m, R.abort(), g(null, "timeout", R, A, E) }), A.timeout)), R.send(A.data ? A.data : null), R }, t.get = function () { return t.ajax(A.apply(null, arguments)) }, t.post = function () { var e = A.apply(null, arguments); return e.type = "POST", t.ajax(e) }, t.getJSON = function () { var e = A.apply(null, arguments); return e.dataType = "json", t.ajax(e) }, t.fn.load = function (e, r, n) { if (!this.length) return this; var i, s = this, o = e.split(/\s/), l = A(e, r, n), u = l.success; return o.length > 1 && (l.url = o[0], i = o[1]), l.success = function (e) { s.html(i ? t("<div>").html(e.replace(a, "")).find(i) : e), u && u.apply(s, arguments) }, t.ajax(l), this }; var E = encodeURIComponent; function T(e, r, n, i) { var a, s = t.isArray(r), o = t.isPlainObject(r); t.each(r, (function (r, l) { a = t.type(l), i && (r = n ? i : i + "[" + (o || "object" == a || "array" == a ? r : "") + "]"), !i && s ? e.add(l.name, l.value) : "array" == a || !n && "object" == a ? T(e, l, n, r) : e.add(r, l) })) } t.param = function (e, r) { var n = []; return n.add = function (e, r) { t.isFunction(r) && (r = r()), null == r && (r = ""), this.push(E(e) + "=" + E(r)) }, T(n, e, r), n.join("&").replace(/%20/g, "+") } }(_), (k = _).Callbacks = function (t) { t = k.extend({}, t); var e, r, n, i, a, s, o = [], l = !t.once && [], u = function (d) { for (e = t.memory && d, r = !0, s = i || 0, i = 0, a = o.length, n = !0; o && s < a; ++s)if (!1 === o[s].apply(d[0], d[1]) && t.stopOnFalse) { e = !1; break } n = !1, o && (l ? l.length && u(l.shift()) : e ? o.length = 0 : c.disable()) }, c = { add: function () { if (o) { var r = o.length, s = function (e) { k.each(e, (function (e, r) { "function" == typeof r ? t.unique && c.has(r) || o.push(r) : r && r.length && "string" != typeof r && s(r) })) }; s(arguments), n ? a = o.length : e && (i = r, u(e)) } return this }, remove: function () { return o && k.each(arguments, (function (t, e) { for (var r; (r = k.inArray(e, o, r)) > -1;)o.splice(r, 1), n && (r <= a && --a, r <= s && --s) })), this }, has: function (t) { return !(!o || !(t ? k.inArray(t, o) > -1 : o.length)) }, empty: function () { return a = o.length = 0, this }, disable: function () { return o = l = e = void 0, this }, disabled: function () { return !o }, lock: function () { return l = void 0, e || c.disable(), this }, locked: function () { return !l }, fireWith: function (t, e) { return !o || r && !l || (e = [t, (e = e || []).slice ? e.slice() : e], n ? l.push(e) : u(e)), this }, fire: function () { return c.fireWith(this, arguments) }, fired: function () { return !!r } }; return c }, function (t) { var e = Array.prototype.slice; function r(e) { var n = [["resolve", "done", t.Callbacks({ once: 1, memory: 1 }), "resolved"], ["reject", "fail", t.Callbacks({ once: 1, memory: 1 }), "rejected"], ["notify", "progress", t.Callbacks({ memory: 1 })]], i = "pending", a = { state: function () { return i }, always: function () { return s.done(arguments).fail(arguments), this }, then: function () { var e = arguments; return r((function (r) { t.each(n, (function (n, i) { var o = t.isFunction(e[n]) && e[n]; s[i[1]]((function () { var e = o && o.apply(this, arguments); if (e && t.isFunction(e.promise)) e.promise().done(r.resolve).fail(r.reject).progress(r.notify); else { var n = this === a ? r.promise() : this, s = o ? [e] : arguments; r[i[0] + "With"](n, s) } })) })), e = null })).promise() }, promise: function (e) { return null != e ? t.extend(e, a) : a } }, s = {}; return t.each(n, (function (t, e) { var r = e[2], o = e[3]; a[e[1]] = r.add, o && r.add((function () { i = o }), n[1 ^ t][2].disable, n[2][2].lock), s[e[0]] = function () { return s[e[0] + "With"](this === s ? a : this, arguments), this }, s[e[0] + "With"] = r.fireWith })), a.promise(s), e && e.call(s, s), s } t.when = function (n) { var i, a, s, o = e.call(arguments), l = o.length, u = 0, c = 1 !== l || n && t.isFunction(n.promise) ? l : 0, d = 1 === c ? n : r(), h = function (t, r, n) { return function (a) { r[t] = this, n[t] = arguments.length > 1 ? e.call(arguments) : a, n === i ? d.notifyWith(r, n) : --c || d.resolveWith(r, n) } }; if (l > 1) for (i = new Array(l), a = new Array(l), s = new Array(l); u < l; ++u)o[u] && t.isFunction(o[u].promise) ? o[u].promise().done(h(u, s, o)).fail(d.reject).progress(h(u, a, i)) : --c; return c || d.resolveWith(s, o), d.promise() }, t.Deferred = r }(_), function (t) { var e, r = 1, n = Array.prototype.slice, i = t.isFunction, a = function (t) { return "string" == typeof t }, s = {}, o = {}, l = "onfocusin" in window, u = { focus: "focusin", blur: "focusout" }, c = { mouseenter: "mouseover", mouseleave: "mouseout" }; function d(t) { return t._zid || (t._zid = r++) } function h(t, e, r, n) { if ((e = f(e)).ns) var i = (a = e.ns, new RegExp("(?:^| )" + a.replace(" ", " .* ?") + "(?: |$)")); var a; return (s[d(t)] || []).filter((function (t) { return t && (!e.e || t.e == e.e) && (!e.ns || i.test(t.ns)) && (!r || d(t.fn) === d(r)) && (!n || t.sel == n) })) } function f(t) { var e = ("" + t).split("."); return { e: e[0], ns: e.slice(1).sort().join(" ") } } function p(t, e) { return t.del && !l && t.e in u || !!e } function g(t) { return c[t] || l && u[t] || t } function v(r, n, i, a, o, l, u) { var h = d(r), v = s[h] || (s[h] = []); n.split(/\s/).forEach((function (n) { if ("ready" == n) return t(document).ready(i); var s = f(n); s.fn = i, s.sel = o, s.e in c && (i = function (e) { var r = e.relatedTarget; if (!r || r !== this && !t.contains(this, r)) return s.fn.apply(this, arguments) }), s.del = l; var d = l || i; s.proxy = function (t) { if (!(t = b(t)).isImmediatePropagationStopped()) { t.data = a; var n = d.apply(r, t._args == e ? [t] : [t].concat(t._args)); return !1 === n && (t.preventDefault(), t.stopPropagation()), n } }, s.i = v.length, v.push(s), "addEventListener" in r && r.addEventListener(g(s.e), s.proxy, p(s, u)) })) } function m(t, e, r, n, i) { var a = d(t); (e || "").split(/\s/).forEach((function (e) { h(t, e, r, n).forEach((function (e) { delete s[a][e.i], "removeEventListener" in t && t.removeEventListener(g(e.e), e.proxy, p(e, i)) })) })) } o.click = o.mousedown = o.mouseup = o.mousemove = "MouseEvents", t.event = { add: v, remove: m }, t.proxy = function (e, r) { var s = 2 in arguments && n.call(arguments, 2); if (i(e)) { var o = function () { return e.apply(r, s ? s.concat(n.call(arguments)) : arguments) }; return o._zid = d(e), o } if (a(r)) return s ? (s.unshift(e[r], e), t.proxy.apply(null, s)) : t.proxy(e[r], e); throw new TypeError("expected function") }, t.fn.bind = function (t, e, r) { return this.on(t, e, r) }, t.fn.unbind = function (t, e) { return this.off(t, e) }, t.fn.one = function (t, e, r, n) { return this.on(t, e, r, n, 1) }; var y = function () { return !0 }, A = function () { return !1 }, E = /^([A-Z]|returnValue$|layer[XY]$|webkitMovement[XY]$)/, T = { preventDefault: "isDefaultPrevented", stopImmediatePropagation: "isImmediatePropagationStopped", stopPropagation: "isPropagationStopped" }; function b(r, n) { return !n && r.isDefaultPrevented || (n || (n = r), t.each(T, (function (t, e) { var i = n[t]; r[t] = function () { return this[e] = y, i && i.apply(n, arguments) }, r[e] = A })), r.timeStamp || (r.timeStamp = Date.now()), (n.defaultPrevented !== e ? n.defaultPrevented : "returnValue" in n ? !1 === n.returnValue : n.getPreventDefault && n.getPreventDefault()) && (r.isDefaultPrevented = y)), r } function k(t) { var r, n = { originalEvent: t }; for (r in t) E.test(r) || t[r] === e || (n[r] = t[r]); return b(n, t) } t.fn.delegate = function (t, e, r) { return this.on(e, t, r) }, t.fn.undelegate = function (t, e, r) { return this.off(e, t, r) }, t.fn.live = function (e, r) { return t(document.body).delegate(this.selector, e, r), this }, t.fn.die = function (e, r) { return t(document.body).undelegate(this.selector, e, r), this }, t.fn.on = function (r, s, o, l, u) { var c, d, h = this; return r && !a(r) ? (t.each(r, (function (t, e) { h.on(t, s, o, e, u) })), h) : (a(s) || i(l) || !1 === l || (l = o, o = s, s = e), l !== e && !1 !== o || (l = o, o = e), !1 === l && (l = A), h.each((function (e, i) { u && (c = function (t) { return m(i, t.type, l), l.apply(this, arguments) }), s && (d = function (e) { var r, a = t(e.target).closest(s, i).get(0); if (a && a !== i) return r = t.extend(k(e), { currentTarget: a, liveFired: i }), (c || l).apply(a, [r].concat(n.call(arguments, 1))) }), v(i, r, l, o, s, d || c) }))) }, t.fn.off = function (r, n, s) { var o = this; return r && !a(r) ? (t.each(r, (function (t, e) { o.off(t, n, e) })), o) : (a(n) || i(s) || !1 === s || (s = n, n = e), !1 === s && (s = A), o.each((function () { m(this, r, s, n) }))) }, t.fn.trigger = function (e, r) { return (e = a(e) || t.isPlainObject(e) ? t.Event(e) : b(e))._args = r, this.each((function () { e.type in u && "function" == typeof this[e.type] ? this[e.type]() : "dispatchEvent" in this ? this.dispatchEvent(e) : t(this).triggerHandler(e, r) })) }, t.fn.triggerHandler = function (e, r) { var n, i; return this.each((function (s, o) { (n = k(a(e) ? t.Event(e) : e))._args = r, n.target = o, t.each(h(o, e.type || e), (function (t, e) { if (i = e.proxy(n), n.isImmediatePropagationStopped()) return !1 })) })), i }, "focusin focusout focus blur load resize scroll unload click dblclick mousedown mouseup mousemove mouseover mouseout mouseenter mouseleave change select keydown keypress keyup error".split(" ").forEach((function (e) { t.fn[e] = function (t) { return 0 in arguments ? this.bind(e, t) : this.trigger(e) } })), t.Event = function (t, e) { a(t) || (t = (e = t).type); var r = document.createEvent(o[t] || "Events"), n = !0; if (e) for (var i in e) "bubbles" == i ? n = !!e[i] : r[i] = e[i]; return r.initEvent(t, n, !0), b(r) } }(_), function () { try { getComputedStyle(void 0) } catch (e) { var t = getComputedStyle; window.getComputedStyle = function (e, r) { try { return t(e, r) } catch (t) { return null } } } }(), function (t) { var e = t.zepto, r = e.qsa, n = e.matches; function i(e) { return !(!(e = t(e)).width() && !e.height()) && "none" !== e.css("display") } var a = t.expr[":"] = { visible: function () { if (i(this)) return this }, hidden: function () { if (!i(this)) return this }, selected: function () { if (this.selected) return this }, checked: function () { if (this.checked) return this }, parent: function () { return this.parentNode }, first: function (t) { if (0 === t) return this }, last: function (t, e) { if (t === e.length - 1) return this }, eq: function (t, e, r) { if (t === r) return this }, contains: function (e, r, n) { if (t(this).text().indexOf(n) > -1) return this }, has: function (t, r, n) { if (e.qsa(this, n).length) return this } }, s = new RegExp("(.*):(\\w+)(?:\\(([^)]+)\\))?$\\s*"), o = /^\s*>/, l = "Zepto" + +new Date; function u(t, e) { t = t.replace(/=#\]/g, '="#"]'); var r, n, i = s.exec(t); if (i && i[2] in a && (r = a[i[2]], n = i[3], t = i[1], n)) { var o = Number(n); n = isNaN(o) ? n.replace(/^["']|["']$/g, "") : o } return e(t, r, n) } e.qsa = function (n, i) { return u(i, (function (a, s, u) { try { var c; !a && s ? a = "*" : o.test(a) && (c = t(n).addClass(l), a = "." + l + " " + a); var d = r(n, a) } catch (t) { throw console.error("error performing selector: %o", i), t } finally { c && c.removeClass(l) } return s ? e.uniq(t.map(d, (function (t, e) { return s.call(t, e, d, u) }))) : d })) }, e.matches = function (t, e) { return u(e, (function (e, r, i) { return (!e || n(t, e)) && (!r || r.call(t, null, i) === t) })) } }(_); var C, L, R, D = _, I = [{ name: "Chromium", group: "Chrome", identifier: "Chromium/([0-9.]*)" }, { name: "Chrome Mobile", group: "Chrome", identifier: "Chrome/([0-9.]*) Mobile", versionIdentifier: "Chrome/([0-9.]*)" }, { name: "Chrome", group: "Chrome", identifier: "Chrome/([0-9.]*)" }, { name: "Chrome for iOS", group: "Chrome", identifier: "CriOS/([0-9.]*)" }, { name: "Android Browser", group: "Chrome", identifier: "CrMo/([0-9.]*)" }, { name: "Firefox", group: "Firefox", identifier: "Firefox/([0-9.]*)" }, { name: "Opera Mini", group: "Opera", identifier: "Opera Mini/([0-9.]*)" }, { name: "Opera", group: "Opera", identifier: "Opera ([0-9.]*)" }, { name: "Opera", group: "Opera", identifier: "Opera/([0-9.]*)", versionIdentifier: "Version/([0-9.]*)" }, { name: "IEMobile", group: "Explorer", identifier: "IEMobile/([0-9.]*)" }, { name: "Internet Explorer", group: "Explorer", identifier: "MSIE ([a-zA-Z0-9.]*)" }, { name: "Internet Explorer", group: "Explorer", identifier: "Trident/([0-9.]*)", versionIdentifier: "rv:([0-9.]*)" }, { name: "Spartan", group: "Spartan", identifier: "Edge/([0-9.]*)", versionIdentifier: "Edge/([0-9.]*)" }, { name: "Safari", group: "Safari", identifier: "Safari/([0-9.]*)", versionIdentifier: "Version/([0-9.]*)" }], O = [{ name: "Windows 2000", group: "Windows", identifier: "Windows NT 5.0", version: "5.0" }, { name: "Windows XP", group: "Windows", identifier: "Windows NT 5.1", version: "5.1" }, { name: "Windows Vista", group: "Windows", identifier: "Windows NT 6.0", version: "6.0" }, { name: "Windows 7", group: "Windows", identifier: "Windows NT 6.1", version: "7.0" }, { name: "Windows 8", group: "Windows", identifier: "Windows NT 6.2", version: "8.0" }, { name: "Windows 8.1", group: "Windows", identifier: "Windows NT 6.3", version: "8.1" }, { name: "Windows 10", group: "Windows", identifier: "Windows NT 10.0", version: "10.0" }, { name: "Windows Phone", group: "Windows Phone", identifier: "Windows Phone ([0-9.]*)" }, { name: "Windows Phone", group: "Windows Phone", identifier: "Windows Phone OS ([0-9.]*)" }, { name: "Windows", group: "Windows", identifier: "Windows" }, { name: "Chrome OS", group: "Chrome OS", identifier: "CrOS" }, { name: "Android", group: "Android", identifier: "Android", versionIdentifier: "Android ([a-zA-Z0-9.-]*)" }, { name: "iPad", group: "iOS", identifier: "iPad", versionIdentifier: "OS ([0-9_]*)", versionSeparator: "[_|.]" }, { name: "iPod", group: "iOS", identifier: "iPod", versionIdentifier: "OS ([0-9_]*)", versionSeparator: "[_|.]" }, { name: "iPhone", group: "iOS", identifier: "iPhone OS", versionIdentifier: "OS ([0-9_]*)", versionSeparator: "[_|.]" }, { name: "Mac OS X High Sierra", group: "Mac OS", identifier: "Mac OS X (10([_|.])13([0-9_.]*))", versionSeparator: "[_|.]" }, { name: "Mac OS X Sierra", group: "Mac OS", identifier: "Mac OS X (10([_|.])12([0-9_.]*))", versionSeparator: "[_|.]" }, { name: "Mac OS X El Capitan", group: "Mac OS", identifier: "Mac OS X (10([_|.])11([0-9_.]*))", versionSeparator: "[_|.]" }, { name: "Mac OS X Yosemite", group: "Mac OS", identifier: "Mac OS X (10([_|.])10([0-9_.]*))", versionSeparator: "[_|.]" }, { name: "Mac OS X Mavericks", group: "Mac OS", identifier: "Mac OS X (10([_|.])9([0-9_.]*))", versionSeparator: "[_|.]" }, { name: "Mac OS X Mountain Lion", group: "Mac OS", identifier: "Mac OS X (10([_|.])8([0-9_.]*))", versionSeparator: "[_|.]" }, { name: "Mac OS X Lion", group: "Mac OS", identifier: "Mac OS X (10([_|.])7([0-9_.]*))", versionSeparator: "[_|.]" }, { name: "Mac OS X Snow Leopard", group: "Mac OS", identifier: "Mac OS X (10([_|.])6([0-9_.]*))", versionSeparator: "[_|.]" }, { name: "Mac OS X Leopard", group: "Mac OS", identifier: "Mac OS X (10([_|.])5([0-9_.]*))", versionSeparator: "[_|.]" }, { name: "Mac OS X Tiger", group: "Mac OS", identifier: "Mac OS X (10([_|.])4([0-9_.]*))", versionSeparator: "[_|.]" }, { name: "Mac OS X Panther", group: "Mac OS", identifier: "Mac OS X (10([_|.])3([0-9_.]*))", versionSeparator: "[_|.]" }, { name: "Mac OS X Jaguar", group: "Mac OS", identifier: "Mac OS X (10([_|.])2([0-9_.]*))", versionSeparator: "[_|.]" }, { name: "Mac OS X Puma", group: "Mac OS", identifier: "Mac OS X (10([_|.])1([0-9_.]*))", versionSeparator: "[_|.]" }, { name: "Mac OS X Cheetah", group: "Mac OS", identifier: "Mac OS X (10([_|.])0([0-9_.]*))", versionSeparator: "[_|.]" }, { name: "Mac OS", group: "Mac OS", identifier: "Mac OS" }, { name: "Ubuntu", group: "Linux", identifier: "Ubuntu", versionIdentifier: "Ubuntu/([0-9.]*)" }, { name: "Debian", group: "Linux", identifier: "Debian" }, { name: "Gentoo", group: "Linux", identifier: "Gentoo" }, { name: "Linux", group: "Linux", identifier: "Linux" }, { name: "BlackBerry", group: "BlackBerry", identifier: "BlackBerry" }], w = {}, P = function (t, e) { var r = t.split(".", 2); e.fullVersion = t, r[0] && (e.majorVersion = parseInt(r[0])), r[1] && (e.minorVersion = parseInt(r[1])) }, x = function (t, e, r) { var n = "[" == e.substr(0, 1) ? new RegExp(e, "g") : e, i = t.split(n, 2); "." != e && (t = t.replace(new RegExp(e, "g"), ".")), r.fullVersion = t, i && i[0] && (r.majorVersion = parseInt(i[0])), i && i[1] && (r.minorVersion = parseInt(i[1])) }, N = function (t) { var e, r = t.match(/\b(playstation 4|nx|opera|chrome|safari|firefox|msie|trident(?=\/))\/?\s*(\d+)/i) || []; if (/trident/i.test(r[1])) return e = /\brv[ :]+(\d+)/g.exec(t) || [], { name: "IE", version: parseInt(e[1] || "") }; if ("Chrome" === r[1]) { if (null != (e = t.match(/\bOPR\/(\d+)/))) return { name: "Opera", version: parseInt(e[1]) }; if (null != (e = t.match(/\bEdge\/(\d+)/))) return { name: "Edge", version: parseInt(e[1]) } } else /android/i.test(t) && (e = t.match(/version\/(\d+)/i)) && (r.splice(1, 1, "Android WebView"), r.splice(2, 1, e[1])); return { name: (r = r[2] ? [r[1], r[2]] : [navigator.appName, navigator.appVersion, "-?"])[0], version: parseInt(r[1]) } }(navigator.userAgent); w.isEdge = /edge/i.test(navigator.userAgent), w.isChrome = /chrome|CriOS/i.test(navigator.userAgent) && !w.isEdge, w.isSafari = /safari/i.test(navigator.userAgent) && !w.isChrome && !w.isEdge, w.isFirefox = /firefox/i.test(navigator.userAgent), w.isLegacyIE = !!window.ActiveXObject, w.isIE = w.isLegacyIE || /trident.*rv:1\d/i.test(navigator.userAgent), w.isIE11 = /trident.*rv:11/i.test(navigator.userAgent), w.isChromecast = w.isChrome && /CrKey/i.test(navigator.userAgent), w.isMobile = /Android|webOS|iPhone|iPad|iPod|BlackBerry|Windows Phone|IEMobile|Mobile Safari|Opera Mini/i.test(navigator.userAgent), w.isiOS = /iPad|iPhone|iPod/i.test(navigator.userAgent), w.isAndroid = /Android/i.test(navigator.userAgent), w.isWindowsPhone = /Windows Phone/i.test(navigator.userAgent), w.isWin8App = /MSAppHost/i.test(navigator.userAgent), w.isWiiU = /WiiU/i.test(navigator.userAgent), w.isPS4 = /PlayStation 4/i.test(navigator.userAgent), w.hasLocalstorage = function () { try { return localStorage.setItem("clappr", "clappr"), localStorage.removeItem("clappr"), !0 } catch (t) { return !1 } }(), w.hasFlash = function () { try { return !!new ActiveXObject("ShockwaveFlash.ShockwaveFlash") } catch (t) { return !(!navigator.mimeTypes || void 0 === navigator.mimeTypes["application/x-shockwave-flash"] || !navigator.mimeTypes["application/x-shockwave-flash"].enabledPlugin) } }(), w.name = N.name, w.version = N.version, w.userAgent = navigator.userAgent, w.data = function () { var t, e = {}, r = w.userAgent.toLowerCase(), n = b(I); try { for (n.s(); !(t = n.n()).done;) { var i = t.value, a = new RegExp(i.identifier.toLowerCase()).exec(r); if (null != a && a[1]) { if (e.name = i.name, e.group = i.group, i.versionIdentifier) { var s = new RegExp(i.versionIdentifier.toLowerCase()).exec(r); null != s && s[1] && P(s[1], e) } else P(a[1], e); break } } } catch (t) { n.e(t) } finally { n.f() } return e }(), w.os = function () { var t, e = {}, r = w.userAgent.toLowerCase(), n = b(O); try { for (n.s(); !(t = n.n()).done;) { var i = t.value, a = new RegExp(i.identifier.toLowerCase()).exec(r); if (null != a) { if (e.name = i.name, e.group = i.group, i.version) x(i.version, i.versionSeparator ? i.versionSeparator : ".", e); else if (a[1]) x(a[1], i.versionSeparator ? i.versionSeparator : ".", e); else if (i.versionIdentifier) { var s = new RegExp(i.versionIdentifier.toLowerCase()).exec(r); null != s && s[1] && x(s[1], i.versionSeparator ? i.versionSeparator : ".", e) } break } } } catch (t) { n.e(t) } finally { n.f() } return e }(), w.viewport = ((C = {}).width = D(window).width(), C.height = D(window).height(), C), w.device = (L = w.userAgent, (R = /\((iP(?:hone|ad|od))?(?:[^;]*; ){0,2}([^)]+(?=\)))/.exec(L)) && (R[1] || R[2]) || ""), void 0 !== window.orientation && function () { switch (window.orientation) { case -90: case 90: w.viewport.orientation = "landscape"; break; default: w.viewport.orientation = "portrait" } }(); var M = {}, F = [], B = (window.requestAnimationFrame || window.mozRequestAnimationFrame || window.webkitRequestAnimationFrame || function (t) { window.setTimeout(t, 1e3 / 60) }).bind(window), U = (window.cancelAnimationFrame || window.mozCancelAnimationFrame || window.webkitCancelAnimationFrame || window.clearTimeout).bind(window); function j(t, e) { if (e) for (var r in e) { var n = Object.getOwnPropertyDescriptor(e, r); n ? Object.defineProperty(t, r, n) : t[r] = e[r] } return t } function G(t, e) { var r = function (t) { c(n, t); var r = g(n); function n() { var t; s(this, n); for (var i = arguments.length, a = new Array(i), o = 0; o < i; o++)a[o] = arguments[o]; return t = r.call.apply(r, [this].concat(a)), e.initialize && e.initialize.apply(f(t), a), t } return l(n) }(t); return j(r.prototype, e), r } var V = { fullscreenElement: function () { return document.fullscreenElement || document.webkitFullscreenElement || document.mozFullScreenElement || document.msFullscreenElement }, requestFullscreen: function (t) { if (t.requestFullscreen) return t.requestFullscreen(); if (t.webkitRequestFullscreen) { if ("function" == typeof t.then) return t.webkitRequestFullscreen(); t.webkitRequestFullscreen() } else { if (t.mozRequestFullScreen) return t.mozRequestFullScreen(); if (t.msRequestFullscreen) return t.msRequestFullscreen(); t.querySelector && t.querySelector("video") && t.querySelector("video").webkitEnterFullScreen ? t.querySelector("video").webkitEnterFullScreen() : t.webkitEnterFullScreen && t.webkitEnterFullScreen() } }, cancelFullscreen: function () { var t = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : document; t.exitFullscreen ? t.exitFullscreen() : t.webkitCancelFullScreen ? t.webkitCancelFullScreen() : t.webkitExitFullscreen ? t.webkitExitFullscreen() : t.mozCancelFullScreen ? t.mozCancelFullScreen() : t.msExitFullscreen && t.msExitFullscreen() }, fullscreenEnabled: function () { return !!(document.fullscreenEnabled || document.webkitFullscreenEnabled || document.mozFullScreenEnabled || document.msFullscreenEnabled) } }, K = function () { function t() { s(this, t) } return l(t, null, [{ key: "_defaultConfig", value: function () { return { volume: { value: 100, parse: parseInt } } } }, { key: "_defaultValueFor", value: function (t) { try { return this._defaultConfig()[t].parse(this._defaultConfig()[t].value) } catch (t) { return } } }, { key: "_createKeyspace", value: function (t) { return "clappr.".concat(document.domain, ".").concat(t) } }, { key: "restore", value: function (t) { return w.hasLocalstorage && localStorage[this._createKeyspace(t)] ? this._defaultConfig()[t].parse(localStorage[this._createKeyspace(t)]) : this._defaultValueFor(t) } }, { key: "persist", value: function (t, e) { if (w.hasLocalstorage) try { return localStorage[this._createKeyspace(t)] = e, !0 } catch (t) { return !1 } } }]), t }(), H = function () { function t() { s(this, t) } return l(t, null, [{ key: "params", get: function () { var t = window.location.search.substring(1); return t !== this.query && (this._urlParams = this.parse(t), this.query = t), this._urlParams } }, { key: "hashParams", get: function () { var t = window.location.hash.substring(1); return t !== this.hash && (this._hashParams = this.parse(t), this.hash = t), this._hashParams } }, { key: "parse", value: function (t) { for (var e, r = /\+/g, n = /([^&=]+)=?([^&]*)/g, i = function (t) { return decodeURIComponent(t.replace(r, " ")) }, a = {}; e = n.exec(t);)a[i(e[1]).toLowerCase()] = i(e[2]); return a } }]), t }(); function Y() { var t = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : "t", e = 0, r = H.params[t] || H.hashParams[t] || "", n = r.match(/[0-9]+[hms]+/g) || []; if (n.length > 0) { var i = { h: 3600, m: 60, s: 1 }; n.forEach((function (t) { if (t) { var r = t[t.length - 1], n = parseInt(t.slice(0, t.length - 1), 10); e += n * i[r] } })) } else r && (e = parseInt(r, 10)); return e } function W(t) { return M[t] || (M[t] = 0), t + ++M[t] } function $(t) { return t - parseFloat(t) + 1 >= 0 } function z() { var t = document.getElementsByTagName("script"); return t.length ? t[t.length - 1].src : "" } function q() { return window.navigator && window.navigator.language } function X(t, e) { var r = (e = Object.assign({ inline: !1, muted: !1, timeout: 250, type: "video", source: S.mp4, element: null }, e)).element ? e.element : document.createElement(e.type); r.muted = e.muted, !0 === e.muted && r.setAttribute("muted", "muted"), !0 === e.inline && r.setAttribute("playsinline", "playsinline"), r.src = e.source; var n = r.play(), i = setTimeout((function () { a(!1, new Error("Timeout ".concat(e.timeout, " ms has been reached"))) }), e.timeout), a = function (e) { var r = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : null; clearTimeout(i), t(e, r) }; void 0 !== n ? n.then((function () { return a(!0) })).catch((function (t) { return a(!1, t) })) : a(!0) } var Z = function () { function t() { s(this, t) } return l(t, null, [{ key: "configure", value: function (t) { this.options = D.extend(!0, this.options, t) } }, { key: "create", value: function (t) { return this.options.recycleVideo && "video" === t && F.length > 0 ? F.shift() : document.createElement(t) } }, { key: "garbage", value: function (t) { this.options.recycleVideo && "VIDEO" === t.tagName.toUpperCase() && (D(t).children().remove(), Object.values(t.attributes).forEach((function (e) { return t.removeAttribute(e.name) })), F.push(t)) } }]), t }(); Z.options = { recycleVideo: !1 }; var Q = function () { function t() { var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : 500; s(this, t), this.delay = e, this.lastTime = 0 } return l(t, [{ key: "handle", value: function (t, e) { var r = !(arguments.length > 2 && void 0 !== arguments[2]) || arguments[2], n = (new Date).getTime(), i = n - this.lastTime; i < this.delay && i > 0 && (e(), r && t.preventDefault()), this.lastTime = n } }]), t }(), J = { Config: K, Fullscreen: V, QueryString: H, DomRecycler: Z, assign: j, extend: G, formatTime: function (t, e) { if (!isFinite(t)) return "--:--"; t *= 1e3; var r = (t = parseInt(t / 1e3)) % 60, n = (t = parseInt(t / 60)) % 60, i = (t = parseInt(t / 60)) % 24, a = parseInt(t / 24), s = ""; return a && a > 0 && (s += a + ":", i < 1 && (s += "00:")), (i && i > 0 || e) && (s += ("0" + i).slice(-2) + ":"), s += ("0" + n).slice(-2) + ":", (s += ("0" + r).slice(-2)).trim() }, seekStringToSeconds: Y, uniqueId: W, currentScriptUrl: z, isNumber: $, requestAnimationFrame: B, cancelAnimationFrame: U, getBrowserLanguage: q, now: function () { return window.performance && window.performance.now ? performance.now() : Date.now() }, removeArrayItem: function (t, e) { var r = t.indexOf(e); r >= 0 && t.splice(r, 1) }, listContainsIgnoreCase: function (t, e) { return void 0 !== t && void 0 !== e && void 0 !== e.find((function (e) { return t.toLowerCase() === e.toLowerCase() })) }, canAutoPlayMedia: X, Media: S, DoubleEventHandler: Q }, tt = "font-weight: bold; font-size: 13px;", et = "color: #ff8000;" + tt, rt = "color: #ff0000;" + tt, nt = ["color: #0000ff;font-weight: bold; font-size: 13px;", "color: #006600;font-weight: bold; font-size: 13px;", et, rt, rt], it = ["debug", "info", "warn", "error", "disabled"], at = function () { function t() { var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : 1, r = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 3; s(this, t), this.EXCLUDE_LIST = ["timeupdate", "playback:timeupdate", "playback:progress", "container:hover", "container:timeupdate", "container:progress"], this.level = e, this.previousLevel = this.level, this.offLevel = r } return l(t, [{ key: "level", get: function () { return this._level }, set: function (t) { this._level = t } }, { key: "debug", value: function (t) { this.log(t, 0, Array.prototype.slice.call(arguments, 1)) } }, { key: "info", value: function (t) { this.log(t, 1, Array.prototype.slice.call(arguments, 1)) } }, { key: "warn", value: function (t) { this.log(t, 2, Array.prototype.slice.call(arguments, 1)) } }, { key: "error", value: function (t) { this.log(t, 3, Array.prototype.slice.call(arguments, 1)) } }, { key: "onOff", value: function () { this.level === this.offLevel ? this.level = this.previousLevel : (this.previousLevel = this.level, this.level = this.offLevel), window.console && window.console.log && window.console.log("%c[Clappr.Log] set log level to " + it[this.level], et) } }, { key: "log", value: function (t, e, r) { if (!(this.EXCLUDE_LIST.indexOf(r[0]) >= 0 || e < this.level)) { r || (r = t, t = null); var n = nt[e], i = ""; t && (i = "[" + t + "]"), window.console && window.console.log && window.console.log.apply(console, ["%c[" + it[e] + "]" + i, n].concat(r)) } } }]), t }(); at.LEVEL_DEBUG = 0, at.LEVEL_INFO = 1, at.LEVEL_WARN = 2, at.LEVEL_ERROR = 3, at.getInstance = function () { return void 0 === this._instance && (this._instance = new this), this._instance }, at.setLevel = function (t) { this.getInstance().level = t }, at.debug = function () { this.getInstance().debug.apply(this.getInstance(), arguments) }, at.info = function () { this.getInstance().info.apply(this.getInstance(), arguments) }, at.warn = function () { this.getInstance().warn.apply(this.getInstance(), arguments) }, at.error = function () { this.getInstance().error.apply(this.getInstance(), arguments) }; var st = Array.prototype.slice, ot = /\s+/, lt = function (t, e, r, n) { if (!r) return !0; if ("object" === a(r)) { for (var i in r) t[e].apply(t, [i, r[i]].concat(n)); return !1 } if (ot.test(r)) { for (var s = r.split(ot), o = 0, l = s.length; o < l; o++)t[e].apply(t, [s[o]].concat(n)); return !1 } return !0 }, ut = function (t, e, r, n) { var i, a = -1, s = t.length, o = e[0], l = e[1], u = e[2]; !function c() { try { switch (e.length) { case 0: for (; ++a < s;)(i = t[a]).callback.call(i.ctx); return; case 1: for (; ++a < s;)(i = t[a]).callback.call(i.ctx, o); return; case 2: for (; ++a < s;)(i = t[a]).callback.call(i.ctx, o, l); return; case 3: for (; ++a < s;)(i = t[a]).callback.call(i.ctx, o, l, u); return; default: for (; ++a < s;)(i = t[a]).callback.apply(i.ctx, e); return } } catch (t) { at.error.apply(at, [r, "error on event", n, "trigger", "-", t]), c() } }() }, ct = function () { function t() { s(this, t) } return l(t, [{ key: "on", value: function (t, e, r) { return lt(this, "on", t, [e, r]) && e ? (this._events || (this._events = {}), (this._events[t] || (this._events[t] = [])).push({ callback: e, context: r, ctx: r || this }), this) : this } }, { key: "once", value: function (t, e, r) { var n, i = this; if (!lt(this, "once", t, [e, r]) || !e) return this; var a = function () { return i.off(t, n) }; return n = function () { a(), e.apply(this, arguments) }, this.on(t, n, r) } }, { key: "off", value: function (t, e, r) { var n, i, a, s, o, l, u, c; if (!this._events || !lt(this, "off", t, [e, r])) return this; if (!t && !e && !r) return this._events = void 0, this; for (o = 0, l = (s = t ? [t] : Object.keys(this._events)).length; o < l; o++)if (t = s[o], a = this._events[t]) { if (this._events[t] = n = [], e || r) for (u = 0, c = a.length; u < c; u++)i = a[u], (e && e !== i.callback && e !== i.callback._callback || r && r !== i.context) && n.push(i); n.length || delete this._events[t] } return this } }, { key: "trigger", value: function (t) { var e = this.name || this.constructor.name; if (at.debug.apply(at, [e].concat(Array.prototype.slice.call(arguments))), !this._events) return this; var r = st.call(arguments, 1); if (!lt(this, "trigger", t, r)) return this; var n = this._events[t], i = this._events.all; return n && ut(n, r, e, t), i && ut(i, arguments, e, t), this } }, { key: "stopListening", value: function (t, e, r) { var n = this._listeningTo; if (!n) return this; var i = !e && !r; for (var s in r || "object" !== a(e) || (r = this), t && ((n = {})[t._listenId] = t), n) (t = n[s]).off(e, r, this), (i || 0 === Object.keys(t._events).length) && delete this._listeningTo[s]; return this } }], [{ key: "register", value: function (e) { t.Custom || (t.Custom = {}); var r = "string" == typeof e && e.toUpperCase().trim(); r && !t.Custom[r] ? t.Custom[r] = r.toLowerCase().split("_").map((function (t, e) { return 0 === e ? t : t = t[0].toUpperCase() + t.slice(1) })).join("") : at.error("Events", "Error when register event: " + e) } }, { key: "listAvailableCustomEvents", value: function () { return t.Custom || (t.Custom = {}), Object.keys(t.Custom).filter((function (e) { return "string" == typeof t.Custom[e] })) } }]), t }(), dt = { listenTo: "on", listenToOnce: "once" }; Object.keys(dt).forEach((function (t) { ct.prototype[t] = function (e, r, n) { return (this._listeningTo || (this._listeningTo = {}))[e._listenId || (e._listenId = W("l"))] = e, n || "object" !== a(r) || (n = this), e[dt[t]](r, n, this), this } })), ct.PLAYER_READY = "ready", ct.PLAYER_RESIZE = "resize", ct.PLAYER_FULLSCREEN = "fullscreen", ct.PLAYER_PLAY = "play", ct.PLAYER_PAUSE = "pause", ct.PLAYER_STOP = "stop", ct.PLAYER_ENDED = "ended", ct.PLAYER_SEEK = "seek", ct.PLAYER_ERROR = "playererror", ct.ERROR = "error", ct.PLAYER_TIMEUPDATE = "timeupdate", ct.PLAYER_VOLUMEUPDATE = "volumeupdate", ct.PLAYER_SUBTITLE_AVAILABLE = "subtitleavailable", ct.PLAYBACK_PROGRESS = "playback:progress", ct.PLAYBACK_TIMEUPDATE = "playback:timeupdate", ct.PLAYBACK_READY = "playback:ready", ct.PLAYBACK_BUFFERING = "playback:buffering", ct.PLAYBACK_BUFFERFULL = "playback:bufferfull", ct.PLAYBACK_SETTINGSUPDATE = "playback:settingsupdate", ct.PLAYBACK_LOADEDMETADATA = "playback:loadedmetadata", ct.PLAYBACK_HIGHDEFINITIONUPDATE = "playback:highdefinitionupdate", ct.PLAYBACK_BITRATE = "playback:bitrate", ct.PLAYBACK_LEVELS_AVAILABLE = "playback:levels:available", ct.PLAYBACK_LEVEL_SWITCH_START = "playback:levels:switch:start", ct.PLAYBACK_LEVEL_SWITCH_END = "playback:levels:switch:end", ct.PLAYBACK_PLAYBACKSTATE = "playback:playbackstate", ct.PLAYBACK_DVR = "playback:dvr", ct.PLAYBACK_MEDIACONTROL_DISABLE = "playback:mediacontrol:disable", ct.PLAYBACK_MEDIACONTROL_ENABLE = "playback:mediacontrol:enable", ct.PLAYBACK_ENDED = "playback:ended", ct.PLAYBACK_PLAY_INTENT = "playback:play:intent", ct.PLAYBACK_PLAY = "playback:play", ct.PLAYBACK_PAUSE = "playback:pause", ct.PLAYBACK_SEEK = "playback:seek", ct.PLAYBACK_SEEKED = "playback:seeked", ct.PLAYBACK_STOP = "playback:stop", ct.PLAYBACK_ERROR = "playback:error", ct.PLAYBACK_STATS_ADD = "playback:stats:add", ct.PLAYBACK_FRAGMENT_LOADED = "playback:fragment:loaded", ct.PLAYBACK_LEVEL_SWITCH = "playback:level:switch", ct.PLAYBACK_SUBTITLE_AVAILABLE = "playback:subtitle:available", ct.PLAYBACK_SUBTITLE_CHANGED = "playback:subtitle:changed", ct.PLAYBACK_AUDIO_AVAILABLE = "playback:audio:available", ct.PLAYBACK_AUDIO_CHANGED = "playback:audio:changed", ct.CORE_CONTAINERS_CREATED = "core:containers:created", ct.CORE_ACTIVE_CONTAINER_CHANGED = "core:active:container:changed", ct.CORE_OPTIONS_CHANGE = "core:options:change", ct.CORE_READY = "core:ready", ct.CORE_FULLSCREEN = "core:fullscreen", ct.CORE_RESIZE = "core:resize", ct.CORE_SCREEN_ORIENTATION_CHANGED = "core:screen:orientation:changed", ct.CORE_MOUSE_MOVE = "core:mousemove", ct.CORE_MOUSE_LEAVE = "core:mouseleave", ct.CONTAINER_PLAYBACKSTATE = "container:playbackstate", ct.CONTAINER_PLAYBACKDVRSTATECHANGED = "container:dvr", ct.CONTAINER_BITRATE = "container:bitrate", ct.CONTAINER_STATS_REPORT = "container:stats:report", ct.CONTAINER_DESTROYED = "container:destroyed", ct.CONTAINER_READY = "container:ready", ct.CONTAINER_RESIZE = "container:resize", ct.CONTAINER_ERROR = "container:error", ct.CONTAINER_LOADEDMETADATA = "container:loadedmetadata", ct.CONTAINER_SUBTITLE_AVAILABLE = "container:subtitle:available", ct.CONTAINER_SUBTITLE_CHANGED = "container:subtitle:changed", ct.CONTAINER_AUDIO_AVAILABLE = "container:audio:available", ct.CONTAINER_AUDIO_CHANGED = "container:audio:changed", ct.CONTAINER_TIMEUPDATE = "container:timeupdate", ct.CONTAINER_PROGRESS = "container:progress", ct.CONTAINER_PLAY = "container:play", ct.CONTAINER_STOP = "container:stop", ct.CONTAINER_PAUSE = "container:pause", ct.CONTAINER_ENDED = "container:ended", ct.CONTAINER_CLICK = "container:click", ct.CONTAINER_DBLCLICK = "container:dblclick", ct.CONTAINER_CONTEXTMENU = "container:contextmenu", ct.CONTAINER_MOUSE_ENTER = "container:mouseenter", ct.CONTAINER_MOUSE_LEAVE = "container:mouseleave", ct.CONTAINER_MOUSE_UP = "container:mouseup", ct.CONTAINER_MOUSE_DOWN = "container:mousedown", ct.CONTAINER_SEEK = "container:seek", ct.CONTAINER_SEEKED = "container:seeked", ct.CONTAINER_VOLUME = "container:volume", ct.CONTAINER_FULLSCREEN = "container:fullscreen", ct.CONTAINER_STATE_BUFFERING = "container:state:buffering", ct.CONTAINER_STATE_BUFFERFULL = "container:state:bufferfull", ct.CONTAINER_SETTINGSUPDATE = "container:settingsupdate", ct.CONTAINER_HIGHDEFINITIONUPDATE = "container:highdefinitionupdate", ct.CONTAINER_MEDIACONTROL_SHOW = "container:mediacontrol:show", ct.CONTAINER_MEDIACONTROL_HIDE = "container:mediacontrol:hide", ct.CONTAINER_MEDIACONTROL_DISABLE = "container:mediacontrol:disable", ct.CONTAINER_MEDIACONTROL_ENABLE = "container:mediacontrol:enable", ct.CONTAINER_STATS_ADD = "container:stats:add", ct.CONTAINER_OPTIONS_CHANGE = "container:options:change", ct.MEDIACONTROL_RENDERED = "mediacontrol:rendered", ct.MEDIACONTROL_FULLSCREEN = "mediacontrol:fullscreen", ct.MEDIACONTROL_SHOW = "mediacontrol:show", ct.MEDIACONTROL_HIDE = "mediacontrol:hide", ct.MEDIACONTROL_MOUSEMOVE_SEEKBAR = "mediacontrol:mousemove:seekbar", ct.MEDIACONTROL_MOUSELEAVE_SEEKBAR = "mediacontrol:mouseleave:seekbar", ct.MEDIACONTROL_PLAYING = "mediacontrol:playing", ct.MEDIACONTROL_NOTPLAYING = "mediacontrol:notplaying", ct.MEDIACONTROL_CONTAINERCHANGED = "mediacontrol:containerchanged", ct.MEDIACONTROL_OPTIONS_CHANGE = "mediacontrol:options:change"; var ht = function (t) { c(r, t); var e = g(r); function r() { var t, n = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {}; return s(this, r), (t = e.call(this, n))._options = n, t.uniqueId = W("o"), t } return l(r, [{ key: "options", get: function () { return this._options } }]), r }(ct), ft = { evaluate: /<%([\s\S]+?)%>/g, interpolate: /<%=([\s\S]+?)%>/g, escape: /<%-([\s\S]+?)%>/g }, pt = /(.)^/, gt = { "'": "'", "\\": "\\", "\r": "r", "\n": "n", "\t": "t", "\u2028": "u2028", "\u2029": "u2029" }, vt = /\\|'|\r|\n|\t|\u2028|\u2029/g, mt = { "&": "&amp;", "<": "&lt;", ">": "&gt;", '"': "&quot;", "'": "&#x27;" }, yt = new RegExp("[&<>\"']", "g"), At = function (t) { return null === t ? "" : ("" + t).replace(yt, (function (t) { return mt[t] })) }, Et = 0, Tt = function (t, e) { var r, n = new RegExp([(ft.escape || pt).source, (ft.interpolate || pt).source, (ft.evaluate || pt).source].join("|") + "|$", "g"), i = 0, a = "__p+='"; t.replace(n, (function (e, r, n, s, o) { return a += t.slice(i, o).replace(vt, (function (t) { return "\\" + gt[t] })), r && (a += "'+\n((__t=(" + r + "))==null?'':escapeExpr(__t))+\n'"), n && (a += "'+\n((__t=(" + n + "))==null?'':__t)+\n'"), s && (a += "';\n" + s + "\n__p+='"), i = o + e.length, e })), a += "';\n", ft.variable || (a = "with(obj||{}){\n" + a + "}\n"), a = "var __t,__p='',__j=Array.prototype.join,print=function(){__p+=__j.call(arguments,'');};\n" + a + "return __p;\n//# sourceURL=/microtemplates/source[" + Et++ + "]"; try { r = new Function(ft.variable || "obj", "escapeExpr", a) } catch (t) { throw t.source = a, t } if (e) return r(e, At); var s = function (t) { return r.call(this, t, At) }; return s.source = "function(" + (ft.variable || "obj") + "){\n" + a + "}", s }; Tt.settings = ft; var bt = { getStyleFor: function (t) { var e = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : { baseUrl: "" }; return D('<style class="clappr-style"></style>').html(Tt(t.toString())(e)) } }, kt = /^(\S+)\s*(.*)$/, St = function (t) { c(r, t); var e = g(r); function r(t) { var n; return s(this, r), (n = e.call(this, t)).cid = W("c"), n._ensureElement(), n.delegateEvents(), n } return l(r, [{ key: "tagName", get: function () { return "div" } }, { key: "events", get: function () { return {} } }, { key: "attributes", get: function () { return {} } }, { key: "$", value: function (t) { return this.$el.find(t) } }, { key: "render", value: function () { return this } }, { key: "destroy", value: function () { return this.$el.remove(), this.stopListening(), this.undelegateEvents(), this } }, { key: "setElement", value: function (t, e) { return this.$el && this.undelegateEvents(), this.$el = D.zepto.isZ(t) ? t : D(t), this.el = this.$el[0], !1 !== e && this.delegateEvents(), this } }, { key: "delegateEvents", value: function (t) { for (var e in t || (t = this.events), this.undelegateEvents(), t) { var r = t[e]; if (r && r.constructor !== Function && (r = this[t[e]]), r) { var n = e.match(kt), i = n[1], a = n[2]; i += ".delegateEvents" + this.cid, "" === a ? this.$el.on(i, r.bind(this)) : this.$el.on(i, a, r.bind(this)) } } return this } }, { key: "undelegateEvents", value: function () { return this.$el.off(".delegateEvents" + this.cid), this } }, { key: "_ensureElement", value: function () { if (this.el) this.setElement(this.el, !1); else { var t = D.extend(!0, {}, this.attributes); this.id && (t.id = this.id), this.className && (t.class = this.className); var e = D(Z.create(this.tagName)).attr(t); this.setElement(e, !1) } } }]), r }(ht), _t = function (t) { c(r, t); var e = g(r); function r() { var t, n = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {}, i = arguments.length > 1 ? arguments[1] : void 0; return s(this, r), (t = e.call(this, n)).core = i, t } return l(r, [{ key: "name", get: function () { return "error" } }, { key: "createError", value: function (t) { this.core ? this.core.trigger(ct.ERROR, t) : at.warn(this.name, "Core is not set. Error: ", t) } }], [{ key: "Levels", get: function () { return { FATAL: "FATAL", WARN: "WARN", INFO: "INFO" } } }]), r }(ht), Ct = { createError: function (t) { var e = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : { useCodePrefix: !0 }, r = this.constructor && this.constructor.type || "", n = this.name || r, i = this.i18n || this.core && this.core.i18n || this.container && this.container.i18n, a = "".concat(n, ":").concat(t && t.code || "unknown"), s = { description: "", level: _t.Levels.FATAL, origin: n, scope: r, raw: {} }, o = Object.assign({}, s, t, { code: e.useCodePrefix ? a : t.code }); if (i && o.level == _t.Levels.FATAL && !o.UI) { var l = { title: i.t("default_error_title"), message: i.t("default_error_message") }; o.UI = l } return this.playerError ? this.playerError.createError(o) : at.warn(n, "PlayerError is not defined. Error: ", o), o } }, Lt = function (t) { c(r, t); var e = g(r); function r(t) { var n; return s(this, r), (n = e.call(this, t.options)).core = t, n.enabled = !0, n.bindEvents(), n.render(), n } return l(r, [{ key: "playerError", get: function () { return this.core.playerError } }, { key: "bindEvents", value: function () { } }, { key: "getExternalInterface", value: function () { return {} } }, { key: "enable", value: function () { this.enabled || (this.bindEvents(), this.$el.show(), this.enabled = !0) } }, { key: "disable", value: function () { this.stopListening(), this.$el.hide(), this.enabled = !1 } }, { key: "render", value: function () { return this } }]), r }(St); Object.assign(Lt.prototype, Ct), Lt.extend = function (t) { return G(Lt, t) }, Lt.type = "core"; var Rt = function (t) { c(r, t); var e = g(r); function r(t, n, i) { var a; return s(this, r), (a = e.call(this, t))._i18n = n, a.currentTime = 0, a.volume = 100, a.playback = t.playback, a.playerError = i, a.settings = D.extend(!0, {}, a.playback.settings), a.isReady = !1, a.mediaControlDisabled = !1, a.plugins = [a.playback], a.dblTapHandler = new Q(500), a.clickTimer = null, a.clickDelay = 200, a.actionsMetadata = {}, a.bindEvents(), a } return l(r, [{ key: "name", get: function () { return "Container" } }, { key: "attributes", get: function () { return { class: "container", "data-container": "" } } }, { key: "events", get: function () { return { click: "clicked", dblclick: "dblClicked", touchend: "dblTap", contextmenu: "onContextMenu", mouseenter: "mouseEnter", mouseleave: "mouseLeave", mouseup: "onMouseUp", mousedown: "onMouseDown" } } }, { key: "ended", get: function () { return this.playback.ended } }, { key: "buffering", get: function () { return this.playback.buffering } }, { key: "i18n", get: function () { return this._i18n } }, { key: "hasClosedCaptionsTracks", get: function () { return this.playback.hasClosedCaptionsTracks } }, { key: "closedCaptionsTracks", get: function () { return this.playback.closedCaptionsTracks } }, { key: "closedCaptionsTrackId", get: function () { return this.playback.closedCaptionsTrackId }, set: function (t) { this.playback.closedCaptionsTrackId = t } }, { key: "audioTracks", get: function () { return this.playback.audioTracks } }, { key: "currentAudioTrack", get: function () { return this.playback.currentAudioTrack } }, { key: "bindEvents", value: function () { this.listenTo(this.playback, ct.PLAYBACK_PROGRESS, this.onProgress), this.listenTo(this.playback, ct.PLAYBACK_TIMEUPDATE, this.timeUpdated), this.listenTo(this.playback, ct.PLAYBACK_READY, this.ready), this.listenTo(this.playback, ct.PLAYBACK_BUFFERING, this.onBuffering), this.listenTo(this.playback, ct.PLAYBACK_BUFFERFULL, this.bufferfull), this.listenTo(this.playback, ct.PLAYBACK_SETTINGSUPDATE, this.settingsUpdate), this.listenTo(this.playback, ct.PLAYBACK_LOADEDMETADATA, this.loadedMetadata), this.listenTo(this.playback, ct.PLAYBACK_HIGHDEFINITIONUPDATE, this.highDefinitionUpdate), this.listenTo(this.playback, ct.PLAYBACK_BITRATE, this.updateBitrate), this.listenTo(this.playback, ct.PLAYBACK_PLAYBACKSTATE, this.playbackStateChanged), this.listenTo(this.playback, ct.PLAYBACK_DVR, this.playbackDvrStateChanged), this.listenTo(this.playback, ct.PLAYBACK_MEDIACONTROL_DISABLE, this.disableMediaControl), this.listenTo(this.playback, ct.PLAYBACK_MEDIACONTROL_ENABLE, this.enableMediaControl), this.listenTo(this.playback, ct.PLAYBACK_SEEK, this.onSeek), this.listenTo(this.playback, ct.PLAYBACK_SEEKED, this.onSeeked), this.listenTo(this.playback, ct.PLAYBACK_ENDED, this.onEnded), this.listenTo(this.playback, ct.PLAYBACK_PLAY, this.playing), this.listenTo(this.playback, ct.PLAYBACK_PAUSE, this.paused), this.listenTo(this.playback, ct.PLAYBACK_STOP, this.stopped), this.listenTo(this.playback, ct.PLAYBACK_ERROR, this.error), this.listenTo(this.playback, ct.PLAYBACK_SUBTITLE_AVAILABLE, this.subtitleAvailable), this.listenTo(this.playback, ct.PLAYBACK_SUBTITLE_CHANGED, this.subtitleChanged), this.listenTo(this.playback, ct.PLAYBACK_AUDIO_AVAILABLE, this.audioAvailable), this.listenTo(this.playback, ct.PLAYBACK_AUDIO_CHANGED, this.audioChanged) } }, { key: "subtitleAvailable", value: function () { this.trigger(ct.CONTAINER_SUBTITLE_AVAILABLE) } }, { key: "subtitleChanged", value: function (t) { this.trigger(ct.CONTAINER_SUBTITLE_CHANGED, t) } }, { key: "audioAvailable", value: function (t) { this.trigger(ct.CONTAINER_AUDIO_AVAILABLE, t) } }, { key: "audioChanged", value: function (t) { this.trigger(ct.CONTAINER_AUDIO_CHANGED, t) } }, { key: "playbackStateChanged", value: function (t) { this.trigger(ct.CONTAINER_PLAYBACKSTATE, t) } }, { key: "playbackDvrStateChanged", value: function (t) { this.settings = this.playback.settings, this.dvrInUse = t, this.trigger(ct.CONTAINER_PLAYBACKDVRSTATECHANGED, t) } }, { key: "updateBitrate", value: function (t) { this.trigger(ct.CONTAINER_BITRATE, t) } }, { key: "statsReport", value: function (t) { this.trigger(ct.CONTAINER_STATS_REPORT, t) } }, { key: "getPlaybackType", value: function () { return this.playback.getPlaybackType() } }, { key: "isDvrEnabled", value: function () { return !!this.playback.dvrEnabled } }, { key: "isDvrInUse", value: function () { return !!this.dvrInUse } }, { key: "destroy", value: function () { this.disableResizeObserver(), this.trigger(ct.CONTAINER_DESTROYED, this, this.name), this.stopListening(), this.plugins.forEach((function (t) { return t.destroy() })), this.$el.remove() } }, { key: "setStyle", value: function (t) { this.$el.css(t) } }, { key: "animate", value: function (t, e) { return this.$el.animate(t, e).promise() } }, { key: "ready", value: function () { this.isReady = !0, this.trigger(ct.CONTAINER_READY, this.name) } }, { key: "isPlaying", value: function () { return this.playback.isPlaying() } }, { key: "getStartTimeOffset", value: function () { return this.playback.getStartTimeOffset() } }, { key: "getCurrentTime", value: function () { return this.currentTime } }, { key: "getDuration", value: function () { return this.playback.getDuration() } }, { key: "error", value: function (t) { this.isReady || this.ready(), this.trigger(ct.CONTAINER_ERROR, t, this.name) } }, { key: "loadedMetadata", value: function (t) { this.trigger(ct.CONTAINER_LOADEDMETADATA, t) } }, { key: "timeUpdated", value: function (t) { this.currentTime = t.current, this.trigger(ct.CONTAINER_TIMEUPDATE, t, this.name) } }, { key: "onProgress", value: function () { for (var t = arguments.length, e = new Array(t), r = 0; r < t; r++)e[r] = arguments[r]; this.trigger.apply(this, [ct.CONTAINER_PROGRESS].concat(e, [this.name])) } }, { key: "playing", value: function () { this.trigger(ct.CONTAINER_PLAY, this.name, this.actionsMetadata.playEvent || {}), this.actionsMetadata.playEvent = {} } }, { key: "paused", value: function () { this.trigger(ct.CONTAINER_PAUSE, this.name, this.actionsMetadata.pauseEvent || {}), this.actionsMetadata.pauseEvent = {} } }, { key: "stopped", value: function () { this.trigger(ct.CONTAINER_STOP, this.actionsMetadata.stopEvent || {}), this.actionsMetadata.stopEvent = {} } }, { key: "play", value: function () { var t = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {}; this.actionsMetadata.playEvent = t, this.playback.play(t) } }, { key: "stop", value: function () { var t = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {}; this.actionsMetadata.stopEvent = t, this.playback.stop(t), this.currentTime = 0 } }, { key: "switchAudioTrack", value: function (t) { this.playback.switchAudioTrack(t) } }, { key: "pause", value: function () { var t = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {}; this.actionsMetadata.pauseEvent = t, this.playback.pause(t) } }, { key: "onEnded", value: function () { this.trigger(ct.CONTAINER_ENDED, this, this.name), this.currentTime = 0 } }, { key: "clicked", value: function () { var t = this; this.options.chromeless && !this.options.allowUserInteraction || (this.clickTimer = setTimeout((function () { t.clickTimer && t.trigger(ct.CONTAINER_CLICK, t, t.name) }), this.clickDelay)) } }, { key: "cancelClicked", value: function () { clearTimeout(this.clickTimer), this.clickTimer = null } }, { key: "dblClicked", value: function () { this.options.chromeless && !this.options.allowUserInteraction || (this.cancelClicked(), this.trigger(ct.CONTAINER_DBLCLICK, this, this.name)) } }, { key: "dblTap", value: function (t) { var e = this; this.options.chromeless && !this.options.allowUserInteraction || this.dblTapHandler.handle(t, (function () { e.cancelClicked(), e.trigger(ct.CONTAINER_DBLCLICK, e, e.name) })) } }, { key: "onContextMenu", value: function (t) { this.options.chromeless && !this.options.allowUserInteraction || this.trigger(ct.CONTAINER_CONTEXTMENU, t, this.name) } }, { key: "seek", value: function (t) { this.playback.seek(t) } }, { key: "onSeek", value: function (t) { this.trigger(ct.CONTAINER_SEEK, t, this.name) } }, { key: "onSeeked", value: function () { this.trigger(ct.CONTAINER_SEEKED, this.name) } }, { key: "seekPercentage", value: function (t) { var e = this.getDuration(); if (t >= 0 && t <= 100) { var r = e * (t / 100); this.seek(r) } } }, { key: "setVolume", value: function (t) { this.volume = parseFloat(t), this.trigger(ct.CONTAINER_VOLUME, this.volume, this.name), this.playback.volume(this.volume) } }, { key: "fullscreen", value: function () { this.trigger(ct.CONTAINER_FULLSCREEN, this.name) } }, { key: "onBuffering", value: function () { this.trigger(ct.CONTAINER_STATE_BUFFERING, this.name) } }, { key: "bufferfull", value: function () { this.trigger(ct.CONTAINER_STATE_BUFFERFULL, this.name) } }, { key: "addPlugin", value: function (t) { this.plugins.push(t) } }, { key: "hasPlugin", value: function (t) { return !!this.getPlugin(t) } }, { key: "getPlugin", value: function (t) { return this.plugins.filter((function (e) { return e.name === t }))[0] } }, { key: "mouseEnter", value: function () { this.options.chromeless && !this.options.allowUserInteraction || this.trigger(ct.CONTAINER_MOUSE_ENTER) } }, { key: "mouseLeave", value: function () { this.options.chromeless && !this.options.allowUserInteraction || this.trigger(ct.CONTAINER_MOUSE_LEAVE) } }, { key: "mouseUp", value: function () { this.options.chromeless && !this.options.allowUserInteraction || this.trigger(ct.CONTAINER_MOUSE_UP) } }, { key: "mouseDown", value: function () { this.options.chromeless && !this.options.allowUserInteraction || this.trigger(ct.CONTAINER_MOUSE_DOWN) } }, { key: "settingsUpdate", value: function () { this.settings = this.playback.settings, this.trigger(ct.CONTAINER_SETTINGSUPDATE) } }, { key: "highDefinitionUpdate", value: function (t) { this.trigger(ct.CONTAINER_HIGHDEFINITIONUPDATE, t) } }, { key: "isHighDefinitionInUse", value: function () { return this.playback.isHighDefinitionInUse() } }, { key: "disableMediaControl", value: function () { this.mediaControlDisabled || (this.mediaControlDisabled = !0, this.trigger(ct.CONTAINER_MEDIACONTROL_DISABLE)) } }, { key: "enableMediaControl", value: function () { this.mediaControlDisabled && (this.mediaControlDisabled = !1, this.trigger(ct.CONTAINER_MEDIACONTROL_ENABLE)) } }, { key: "updateStyle", value: function () { !this.options.chromeless || this.options.allowUserInteraction ? this.$el.removeClass("chromeless") : this.$el.addClass("chromeless") } }, { key: "enableResizeObserver", value: function () { var t = this; this.disableResizeObserver(), this.resizeObserverInterval = setInterval((function () { return t.checkResize() }), 500) } }, { key: "disableResizeObserver", value: function () { this.resizeObserverInterval && clearInterval(this.resizeObserverInterval) } }, { key: "checkResize", value: function () { var t = { width: this.el.clientWidth, height: this.el.clientHeight }, e = this.currentSize || {}, r = e.width; (e.height !== t.height || r !== t.width) && (this.currentSize = t, this.trigger(ct.CONTAINER_RESIZE, t)) } }, { key: "configure", value: function (t) { this._options = D.extend(!0, this._options, t), this.updateStyle(), this.playback.configure(this.options), this.trigger(ct.CONTAINER_OPTIONS_CHANGE) } }, { key: "render", value: function () { var t = bt.getStyleFor(".container[data-container] {\n  position: absolute;\n  background-color: black;\n  height: 100%;\n  width: 100%;\n  max-width: 100%; }\n  .container[data-container] .chromeless {\n    cursor: default; }\n\n[data-player]:not(.nocursor) .container[data-container]:not(.chromeless).pointer-enabled {\n  cursor: pointer; }\n".toString(), { baseUrl: this.options.baseUrl }); return this.$el.append(t[0]), this.$el.append(this.playback.render().el), this.updateStyle(), this.checkResize(), this.enableResizeObserver(), this } }]), r }(St); Object.assign(Rt.prototype, Ct); var Dt = function (t) { c(r, t); var e = g(r); function r(t, n, i) { var a; return s(this, r), (a = e.call(this, t)).settings = {}, a._i18n = n, a.playerError = i, a._consented = !1, a } return l(r, [{ key: "isAudioOnly", get: function () { return !1 } }, { key: "isAdaptive", get: function () { return !1 } }, { key: "ended", get: function () { return !1 } }, { key: "i18n", get: function () { return this._i18n } }, { key: "buffering", get: function () { return !1 } }, { key: "consent", value: function (t) { "function" == typeof t && t() } }, { key: "play", value: function () { } }, { key: "pause", value: function () { } }, { key: "stop", value: function () { } }, { key: "seek", value: function (t) { } }, { key: "seekPercentage", value: function (t) { } }, { key: "getStartTimeOffset", value: function () { return 0 } }, { key: "getDuration", value: function () { return 0 } }, { key: "isPlaying", value: function () { return !1 } }, { key: "isReady", get: function () { return !1 } }, { key: "hasClosedCaptionsTracks", get: function () { return this.closedCaptionsTracks.length > 0 } }, { key: "closedCaptionsTracks", get: function () { return [] } }, { key: "closedCaptionsTrackId", get: function () { return -1 }, set: function (t) { } }, { key: "audioTracks", get: function () { return [] } }, { key: "currentAudioTrack", get: function () { return null } }, { key: "switchAudioTrack", value: function (t) { } }, { key: "getPlaybackType", value: function () { return r.NO_OP } }, { key: "isHighDefinitionInUse", value: function () { return !1 } }, { key: "mute", value: function () { } }, { key: "unmute", value: function () { } }, { key: "volume", value: function (t) { } }, { key: "configure", value: function (t) { this._options = D.extend(!0, this._options, t) } }, { key: "attemptAutoPlay", value: function () { var t = this; this.canAutoPlay((function (e, r) { e && t.play() })) } }, { key: "canAutoPlay", value: function (t) { t(!0, null) } }]), r }(St); Object.assign(Dt.prototype, Ct), Dt.extend = function (t) { return G(Dt, t) }, Dt.canPlay = function (t, e) { return !1 }, Dt.VOD = "vod", Dt.AOD = "aod", Dt.LIVE = "live", Dt.NO_OP = "no_op", Dt.type = "playback"; var It = function (t) { c(r, t); var e = g(r); function r(t, n, i, a) { var o; return s(this, r), (o = e.call(this, t))._i18n = i, o.loader = n, o.playerError = a, o } return l(r, [{ key: "options", get: function () { return this._options }, set: function (t) { this._options = t } }, { key: "createContainers", value: function () { var t = this; return D.Deferred((function (e) { e.resolve(t.options.sources.map((function (e) { return t.createContainer(e) }))) })) } }, { key: "findPlaybackPlugin", value: function (t, e) { return this.loader.playbackPlugins.filter((function (r) { return r.canPlay(t, e) }))[0] } }, { key: "createContainer", value: function (t) { var e = null, r = this.options.mimeType; "object" === a(t) ? (e = t.source.toString(), t.mimeType && (r = t.mimeType)) : e = t.toString(), e.match(/^\/\//) && (e = window.location.protocol + e); var n = i(i({}, this.options), {}, { src: e, mimeType: r }), s = this.findPlaybackPlugin(e, r), o = s ? new s(n, this._i18n, this.playerError) : new Dt; n = i(i({}, n), {}, { playback: o }); var l = new Rt(n, this._i18n, this.playerError), u = D.Deferred(); return u.promise(l), this.addContainerPlugins(l), this.listenToOnce(l, ct.CONTAINER_READY, (function () { return u.resolve(l) })), l } }, { key: "addContainerPlugins", value: function (t) { this.loader.containerPlugins.forEach((function (e) { t.addPlugin(new e(t)) })) } }]), r }(ht), Ot = function (t) { c(r, t); var e = g(r); function r(t) { var n; return s(this, r), (n = e.call(this, t)).playerError = new _t(t, f(n)), n.configureDomRecycler(), n.firstResize = !0, n.plugins = [], n.containers = [], n._boundFullscreenHandler = function () { return n.handleFullscreenChange() }, D(document).bind("fullscreenchange", n._boundFullscreenHandler), D(document).bind("MSFullscreenChange", n._boundFullscreenHandler), D(document).bind("mozfullscreenchange", n._boundFullscreenHandler), w.isMobile && D(window).bind("resize", (function (t) { n.handleWindowResize(t) })), n } return l(r, [{ key: "events", get: function () { return { webkitfullscreenchange: "handleFullscreenChange", mousemove: "onMouseMove", mouseleave: "onMouseLeave" } } }, { key: "attributes", get: function () { return { "data-player": "", tabindex: 9999 } } }, { key: "isReady", get: function () { return !!this.ready } }, { key: "i18n", get: function () { return this.getPlugin("strings") || { t: function (t) { return t } } } }, { key: "mediaControl", get: function () { return this._mediaControl || (this._mediaControl = this.getPlugin("media_control")) || this.dummyMediaControl } }, { key: "dummyMediaControl", get: function () { return this._dummyMediaControl || (this._dummyMediaControl = new Lt(this)), this._dummyMediaControl } }, { key: "activeContainer", get: function () { return this._activeContainer }, set: function (t) { this._activeContainer = t, this.trigger(ct.CORE_ACTIVE_CONTAINER_CHANGED, this._activeContainer) } }, { key: "activePlayback", get: function () { return this.activeContainer && this.activeContainer.playback } }, { key: "configureDomRecycler", value: function () { var t = this.options && this.options.playback && this.options.playback.recycleVideo; Z.configure({ recycleVideo: t }) } }, { key: "createContainers", value: function (t) { this.defer = D.Deferred(), this.defer.promise(this), this.containerFactory = new It(t, t.loader, this.i18n, this.playerError), this.prepareContainers() } }, { key: "prepareContainers", value: function () { var t = this; this.containerFactory.createContainers().then((function (e) { return t.setupContainers(e) })).then((function (e) { return t.resolveOnContainersReady(e) })) } }, { key: "updateSize", value: function () { this.isFullscreen() ? this.setFullscreen() : this.setPlayerSize() } }, { key: "setFullscreen", value: function () { w.isiOS || (this.$el.addClass("fullscreen"), this.$el.removeAttr("style"), this.previousSize = { width: this.options.width, height: this.options.height }, this.currentSize = { width: D(window).width(), height: D(window).height() }) } }, { key: "setPlayerSize", value: function () { this.$el.removeClass("fullscreen"), this.currentSize = this.previousSize, this.previousSize = { width: D(window).width(), height: D(window).height() }, this.resize(this.currentSize) } }, { key: "resize", value: function (t) { $(t.height) || $(t.width) ? (this.el.style.height = "".concat(t.height, "px"), this.el.style.width = "".concat(t.width, "px")) : (this.el.style.height = "".concat(t.height), this.el.style.width = "".concat(t.width)), this.previousSize = { width: this.options.width, height: this.options.height }, this.options.width = t.width, this.options.height = t.height, this.currentSize = t, this.triggerResize(this.currentSize) } }, { key: "enableResizeObserver", value: function () { var t = this; this.disableResizeObserver(); this.resizeObserverInterval = setInterval((function () { t.triggerResize({ width: t.el.clientWidth, height: t.el.clientHeight }) }), 500) } }, { key: "triggerResize", value: function (t) { (this.firstResize || this.oldHeight !== t.height || this.oldWidth !== t.width) && (this.oldHeight = t.height, this.oldWidth = t.width, this.computedSize = t, this.firstResize = !1, this.trigger(ct.CORE_RESIZE, t)) } }, { key: "disableResizeObserver", value: function () { this.resizeObserverInterval && clearInterval(this.resizeObserverInterval), this.resizeObserverInterval = null } }, { key: "resolveOnContainersReady", value: function (t) { var e = this; D.when.apply(D, t).done((function () { e.defer.resolve(e), e.ready = !0, e.trigger(ct.CORE_READY) })) } }, { key: "addPlugin", value: function (t) { this.plugins.push(t) } }, { key: "hasPlugin", value: function (t) { return !!this.getPlugin(t) } }, { key: "getPlugin", value: function (t) { return this.plugins.filter((function (e) { return e.name === t }))[0] } }, { key: "load", value: function (t, e) { this.options.mimeType = e, t = t && t.constructor === Array ? t : [t], this.options.sources = t, this.containers.forEach((function (t) { return t.destroy() })), this.containerFactory.options = D.extend(!0, this.options, { sources: t }), this.prepareContainers() } }, { key: "destroy", value: function () { this.disableResizeObserver(), this.containers.forEach((function (t) { return t.destroy() })), this.plugins.forEach((function (t) { return t.destroy() })), this.$el.remove(), D(document).unbind("fullscreenchange", this._boundFullscreenHandler), D(document).unbind("MSFullscreenChange", this._boundFullscreenHandler), D(document).unbind("mozfullscreenchange", this._boundFullscreenHandler), this.stopListening() } }, { key: "handleFullscreenChange", value: function () { this.trigger(ct.CORE_FULLSCREEN, this.isFullscreen()), this.updateSize() } }, { key: "handleWindowResize", value: function (t) { var e = window.innerWidth > window.innerHeight ? "landscape" : "portrait"; this._screenOrientation !== e && (this._screenOrientation = e, this.triggerResize({ width: this.el.clientWidth, height: this.el.clientHeight }), this.trigger(ct.CORE_SCREEN_ORIENTATION_CHANGED, { event: t, orientation: this._screenOrientation })) } }, { key: "removeContainer", value: function (t) { this.stopListening(t), this.containers = this.containers.filter((function (e) { return e !== t })) } }, { key: "setupContainer", value: function (t) { this.listenTo(t, ct.CONTAINER_DESTROYED, this.removeContainer), this.containers.push(t) } }, { key: "setupContainers", value: function (t) { return t.forEach(this.setupContainer.bind(this)), this.trigger(ct.CORE_CONTAINERS_CREATED), this.renderContainers(), this.activeContainer = t[0], this.render(), this.appendToParent(), this.containers } }, { key: "renderContainers", value: function () { var t = this; this.containers.forEach((function (e) { return t.el.appendChild(e.render().el) })) } }, { key: "createContainer", value: function (t, e) { var r = this.containerFactory.createContainer(t, e); return this.setupContainer(r), this.el.appendChild(r.render().el), r } }, { key: "getCurrentContainer", value: function () { return this.activeContainer } }, { key: "getCurrentPlayback", value: function () { return this.activePlayback } }, { key: "getPlaybackType", value: function () { return this.activeContainer && this.activeContainer.getPlaybackType() } }, { key: "isFullscreen", value: function () { var t = V.fullscreenElement(); if (!t) return !1; var e = this.activePlayback && this.activePlayback.el; return t === this.el || t === e } }, { key: "toggleFullscreen", value: function () { var t = this; if (this.isFullscreen()) V.cancelFullscreen(), !w.isiOS && this.$el.removeClass("fullscreen nocursor"); else { var e = w.isiOS ? this.activePlayback && this.activePlayback.el : this.el; if (!e) return; w.isSafari || w.isiOS ? V.requestFullscreen(e) : V.requestFullscreen(e).then((function (t) { return t }), (function (e) { return setTimeout((function () { if (!t.isFullscreen()) throw new ReferenceError(e) }), 600) })), !w.isiOS && this.$el.addClass("fullscreen") } } }, { key: "onMouseMove", value: function (t) { this.trigger(ct.CORE_MOUSE_MOVE, t) } }, { key: "onMouseLeave", value: function (t) { this.trigger(ct.CORE_MOUSE_LEAVE, t) } }, { key: "configure", value: function (t) { var e = this; this._options = D.extend(!0, this._options, t), this.configureDomRecycler(); var r = t.source || t.sources; r && this.load(r, t.mimeType || this.options.mimeType), this.trigger(ct.CORE_OPTIONS_CHANGE, t), this.containers.forEach((function (t) { return t.configure(e.options) })) } }, { key: "appendToParent", value: function () { var t = bt.getStyleFor('[data-player] {\n  -webkit-touch-callout: none;\n  -webkit-user-select: none;\n  -moz-user-select: none;\n  -ms-user-select: none;\n  -o-user-select: none;\n  user-select: none;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  transform: translate3d(0, 0, 0);\n  position: relative;\n  margin: 0;\n  padding: 0;\n  border: 0;\n  font-style: normal;\n  font-weight: normal;\n  text-align: center;\n  overflow: hidden;\n  font-size: 100%;\n  font-family: "Roboto", "Open Sans", Arial, sans-serif;\n  text-shadow: 0 0 0;\n  box-sizing: border-box; }\n  [data-player]:focus {\n    outline: 0; }\n  [data-player] * {\n    box-sizing: inherit; }\n  [data-player] > * {\n    float: none;\n    max-width: none; }\n  [data-player] > div {\n    display: block; }\n  [data-player].fullscreen {\n    width: 100% !important;\n    height: 100% !important;\n    top: 0;\n    left: 0; }\n  [data-player].nocursor {\n    cursor: none; }\n\n.clappr-style {\n  display: none !important; }\n'.toString(), { baseUrl: this.options.baseUrl }), e = bt.getStyleFor('[data-player] div, [data-player] span, [data-player] applet, [data-player] object, [data-player] iframe,\n[data-player] h1, [data-player] h2, [data-player] h3, [data-player] h4, [data-player] h5, [data-player] h6, [data-player] p, [data-player] blockquote, [data-player] pre,\n[data-player] a, [data-player] abbr, [data-player] acronym, [data-player] address, [data-player] big, [data-player] cite, [data-player] code,\n[data-player] del, [data-player] dfn, [data-player] em, [data-player] img, [data-player] ins, [data-player] kbd, [data-player] q, [data-player] s, [data-player] samp,\n[data-player] small, [data-player] strike, [data-player] strong, [data-player] sub, [data-player] sup, [data-player] tt, [data-player] var,\n[data-player] b, [data-player] u, [data-player] i, [data-player] center,\n[data-player] dl, [data-player] dt, [data-player] dd, [data-player] ol, [data-player] ul, [data-player] li,\n[data-player] fieldset, [data-player] form, [data-player] label, [data-player] legend,\n[data-player] table, [data-player] caption, [data-player] tbody, [data-player] tfoot, [data-player] thead, [data-player] tr, [data-player] th, [data-player] td,\n[data-player] article, [data-player] aside, [data-player] canvas, [data-player] details, [data-player] embed,\n[data-player] figure, [data-player] figcaption, [data-player] footer, [data-player] header, [data-player] hgroup,\n[data-player] menu, [data-player] nav, [data-player] output, [data-player] ruby, [data-player] section, [data-player] summary,\n[data-player] time, [data-player] mark, [data-player] audio, [data-player] video {\n  margin: 0;\n  padding: 0;\n  border: 0;\n  font: inherit;\n  font-size: 100%;\n  vertical-align: baseline; }\n\n[data-player] table {\n  border-collapse: collapse;\n  border-spacing: 0; }\n\n[data-player] caption, [data-player] th, [data-player] td {\n  text-align: left;\n  font-weight: normal;\n  vertical-align: middle; }\n\n[data-player] q, [data-player] blockquote {\n  quotes: none; }\n  [data-player] q:before, [data-player] q:after, [data-player] blockquote:before, [data-player] blockquote:after {\n    content: "";\n    content: none; }\n\n[data-player] a img {\n  border: none; }\n'.toString(), { baseUrl: this.options.baseUrl }); this.$el.append(t[0]), this.options.includeResetStyle && this.$el.append(e[0]), !(this.$el.parent() && this.$el.parent().length) && this.$el.appendTo(this.options.parentElement) } }, { key: "render", value: function () { this.options.width = this.options.width || this.$el.width(), this.options.height = this.options.height || this.$el.height(); var t = { width: this.options.width, height: this.options.height }; return this.previousSize = this.currentSize = this.computedSize = t, this.updateSize(), this.enableResizeObserver(), this } }]), r }(St); Object.assign(Ot.prototype, Ct); var wt, Pt, xt = function (t) { c(r, t); var e = g(r); function r(t) { var n; return s(this, r), (n = e.call(this, t.options)).player = t, n } return l(r, [{ key: "loader", get: function () { return this.player.loader } }, { key: "create", value: function () { return this.options.loader = this.loader, this.core = new Ot(this.options), this.addCorePlugins(), this.core.createContainers(this.options), this.core } }, { key: "addCorePlugins", value: function () { var t = this; return this.loader.corePlugins.forEach((function (e) { var r = new e(t.core); t.core.addPlugin(r), t.setupExternalInterface(r) })), this.core } }, { key: "setupExternalInterface", value: function (t) { var e = t.getExternalInterface(); for (var r in e) this.player[r] = e[r].bind(t) } }]), r }(ht), Nt = /(\d+)(?:\.(\d+))?(?:\.(\d+))?/, Mt = function () { function t(e, r, n) { s(this, t), this.major = parseInt(e || 0, 10), this.minor = parseInt(r || 0, 10), this.patch = parseInt(n || 0, 10) } return l(t, [{ key: "compare", value: function (t) { var e = this.major - t.major; return e = (e = e || this.minor - t.minor) || this.patch - t.patch } }, { key: "inc", value: function () { var t = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : "patch"; return void 0 !== this[t] && (this[t] += 1), this } }, { key: "satisfies", value: function (t, e) { return this.compare(t) >= 0 && (!e || this.compare(e) < 0) } }, { key: "toString", value: function () { return "".concat(this.major, ".").concat(this.minor, ".").concat(this.patch) } }], [{ key: "parse", value: function () { var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : "", r = e.match(Nt) || [], n = y(r, 4), i = n[1], a = n[2], s = n[3]; return void 0 === i ? null : new t(i, a, s) } }]), t }(), Ft = function (t, e) { return t && e ? Object.entries(t).filter((function (t) { return y(t, 2)[1].type === e })).reduce((function (t, e) { var r = y(e, 2), n = r[0], i = r[1]; return t[n] = i, t }), {}) : {} }, Bt = (wt = { plugins: {}, playbacks: [] }, Pt = "0.4.21", function () { function t() { var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : [], r = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 0; s(this, t), this.playerId = r, this.playbackPlugins = A(wt.playbacks); var n = t.registeredPlugins, i = n.core, a = n.container; this.containerPlugins = Object.values(a), this.corePlugins = Object.values(i), Array.isArray(e) || this.validateExternalPluginsType(e), this.addExternalPlugins(e) } return l(t, [{ key: "groupPluginsByType", value: function (t) { return Array.isArray(t) && (t = t.reduce((function (t, e) { return t[e.type] || (t[e.type] = []), t[e.type].push(e), t }), {})), t } }, { key: "removeDups", value: function (t) { var e = arguments.length > 1 && void 0 !== arguments[1] && arguments[1], r = function (t, r) { return t[r.prototype.name] && e || (t[r.prototype.name] && delete t[r.prototype.name], t[r.prototype.name] = r), t }, n = t.reduceRight(r, Object.create(null)), i = []; for (var a in n) i.unshift(n[a]); return i } }, { key: "addExternalPlugins", value: function (e) { var r = "boolean" != typeof e.loadExternalPluginsFirst || e.loadExternalPluginsFirst, n = "boolean" != typeof e.loadExternalPlaybacksFirst || e.loadExternalPlaybacksFirst; if ((e = this.groupPluginsByType(e)).playback) { var i = e.playback.filter((function (e) { return t.checkVersionSupport(e), !0 })); this.playbackPlugins = n ? this.removeDups(i.concat(this.playbackPlugins)) : this.removeDups(this.playbackPlugins.concat(i), !0) } if (e.container) { var a = e.container.filter((function (e) { return t.checkVersionSupport(e), !0 })); this.containerPlugins = r ? this.removeDups(a.concat(this.containerPlugins)) : this.removeDups(this.containerPlugins.concat(a), !0) } if (e.core) { var s = e.core.filter((function (e) { return t.checkVersionSupport(e), !0 })); this.corePlugins = r ? this.removeDups(s.concat(this.corePlugins)) : this.removeDups(this.corePlugins.concat(s), !0) } } }, { key: "validateExternalPluginsType", value: function (t) { ["playback", "container", "core"].forEach((function (e) { (t[e] || []).forEach((function (t) { var r = "external " + t.type + " plugin on " + e + " array"; if (t.type !== e) throw new ReferenceError(r) })) })) } }], [{ key: "registeredPlaybacks", get: function () { return A(wt.playbacks) } }, { key: "registeredPlugins", get: function () { var t = wt.plugins; return { core: Ft(t, "core"), container: Ft(t, "container") } } }, { key: "checkVersionSupport", value: function (t) { var e = t.prototype, r = e.supportedVersion, n = e.name; if (!r || !r.min) return at.warn("Loader", "missing version information for ".concat(n)), !1; var i = r.max ? Mt.parse(r.max) : Mt.parse(r.min).inc("minor"), a = Mt.parse(r.min); return !!Mt.parse(Pt).satisfies(a, i) || (at.warn("Loader", "unsupported plugin ".concat(n, ": Clappr version ").concat(Pt, " does not match required range [").concat(a, ",").concat(i, ")")), !1) } }, { key: "registerPlugin", value: function (e) { if (!e || !e.prototype.name) return at.warn("Loader", "missing information to register plugin: ".concat(e)), !1; t.checkVersionSupport(e); var r = wt.plugins; if (!r) return !1; var n = r[e.prototype.name]; return n && at.warn("Loader", "overriding plugin entry: ".concat(e.prototype.name, " - ").concat(n)), r[e.prototype.name] = e, !0 } }, { key: "registerPlayback", value: function (e) { if (!e || !e.prototype.name) return !1; t.checkVersionSupport(e); var r = wt.playbacks, n = r.findIndex((function (t) { return t.prototype.name === e.prototype.name })); if (n >= 0) { var i = r[n]; r.splice(n, 1), at.warn("Loader", "overriding playback entry: ".concat(i.name, " - ").concat(i)) } return wt.playbacks = [e].concat(A(r)), !0 } }, { key: "unregisterPlugin", value: function (t) { if (!t) return !1; var e = wt.plugins; return !!e[t] && (delete e[t], !0) } }, { key: "unregisterPlayback", value: function (t) { if (!t) return !1; var e = wt.playbacks, r = e.findIndex((function (e) { return e.prototype.name === t })); return !(r < 0 || (e.splice(r, 1), wt.playbacks = e, 0)) } }, { key: "clearPlugins", value: function () { wt.plugins = {} } }, { key: "clearPlaybacks", value: function () { wt.playbacks = [] } }]), t }()), Ut = z().replace(/\/[^/]+$/, ""), jt = function (t) { c(r, t); var e = g(r); function r(t) { var n; s(this, r), n = e.call(this, t); var i = { playerId: W(""), persistConfig: !0, width: 640, height: 360, baseUrl: Ut, allowUserInteraction: w.isMobile, includeResetStyle: !0, playback: { recycleVideo: !0 } }; return n._options = D.extend(!0, i, t), n.options.sources = n._normalizeSources(t), n.options.chromeless || (n.options.allowUserInteraction = !0), n.options.allowUserInteraction || (n.options.disableKeyboardShortcuts = !0), n._registerOptionEventListeners(n.options.events), n._coreFactory = new xt(f(n)), n.options.parentId ? n.setParentId(n.options.parentId) : n.options.parent && n.attachTo(n.options.parent), n } return l(r, [{ key: "loader", get: function () { return this._loader || (this._loader = new Bt(this.options.plugins || {}, this.options.playerId)), this._loader }, set: function (t) { this._loader = t } }, { key: "ended", get: function () { return this.core.activeContainer.ended } }, { key: "buffering", get: function () { return this.core.activeContainer.buffering } }, { key: "isReady", get: function () { return !!this._ready } }, { key: "eventsMapping", get: function () { return { onReady: ct.PLAYER_READY, onResize: ct.PLAYER_RESIZE, onPlay: ct.PLAYER_PLAY, onPause: ct.PLAYER_PAUSE, onStop: ct.PLAYER_STOP, onEnded: ct.PLAYER_ENDED, onSeek: ct.PLAYER_SEEK, onError: ct.PLAYER_ERROR, onTimeUpdate: ct.PLAYER_TIMEUPDATE, onVolumeUpdate: ct.PLAYER_VOLUMEUPDATE, onSubtitleAvailable: ct.PLAYER_SUBTITLE_AVAILABLE } } }, { key: "setParentId", value: function (t) { var e = document.querySelector(t); return e && this.attachTo(e), this } }, { key: "attachTo", value: function (t) { return this.options.parentElement = t, this.core = this._coreFactory.create(), this._addEventListeners(), this } }, { key: "_addEventListeners", value: function () { return this.core.isReady ? this._onReady() : this.listenToOnce(this.core, ct.CORE_READY, this._onReady), this.listenTo(this.core, ct.CORE_ACTIVE_CONTAINER_CHANGED, this._containerChanged), this.listenTo(this.core, ct.CORE_FULLSCREEN, this._onFullscreenChange), this.listenTo(this.core, ct.CORE_RESIZE, this._onResize), this } }, { key: "_addContainerEventListeners", value: function () { var t = this.core.activeContainer; return t && (this.listenTo(t, ct.CONTAINER_PLAY, this._onPlay), this.listenTo(t, ct.CONTAINER_PAUSE, this._onPause), this.listenTo(t, ct.CONTAINER_STOP, this._onStop), this.listenTo(t, ct.CONTAINER_ENDED, this._onEnded), this.listenTo(t, ct.CONTAINER_SEEK, this._onSeek), this.listenTo(t, ct.CONTAINER_ERROR, this._onError), this.listenTo(t, ct.CONTAINER_TIMEUPDATE, this._onTimeUpdate), this.listenTo(t, ct.CONTAINER_VOLUME, this._onVolumeUpdate), this.listenTo(t, ct.CONTAINER_SUBTITLE_AVAILABLE, this._onSubtitleAvailable)), this } }, { key: "_registerOptionEventListeners", value: function () { var t = this, e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {}, r = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {}, n = Object.keys(e).length > 0; return n && Object.keys(r).forEach((function (e) { var n = t.eventsMapping[e]; n && t.off(n, r[e]) })), Object.keys(e).forEach((function (r) { var n = t.eventsMapping[r]; if (n) { var i = e[r]; (i = "function" == typeof i && i) && t.on(n, i) } })), this } }, { key: "_containerChanged", value: function () { this.stopListening(), this._addEventListeners() } }, { key: "_onReady", value: function () { this._ready = !0, this._addContainerEventListeners(), this.trigger(ct.PLAYER_READY) } }, { key: "_onFullscreenChange", value: function (t) { this.trigger(ct.PLAYER_FULLSCREEN, t) } }, { key: "_onVolumeUpdate", value: function (t) { this.trigger(ct.PLAYER_VOLUMEUPDATE, t) } }, { key: "_onSubtitleAvailable", value: function () { this.trigger(ct.PLAYER_SUBTITLE_AVAILABLE) } }, { key: "_onResize", value: function (t) { this.trigger(ct.PLAYER_RESIZE, t) } }, { key: "_onPlay", value: function () { this.trigger(ct.PLAYER_PLAY) } }, { key: "_onPause", value: function () { this.trigger(ct.PLAYER_PAUSE) } }, { key: "_onStop", value: function () { this.trigger(ct.PLAYER_STOP, this.getCurrentTime()) } }, { key: "_onEnded", value: function () { this.trigger(ct.PLAYER_ENDED) } }, { key: "_onSeek", value: function (t) { this.trigger(ct.PLAYER_SEEK, t) } }, { key: "_onTimeUpdate", value: function (t) { this.trigger(ct.PLAYER_TIMEUPDATE, t) } }, { key: "_onError", value: function (t) { this.trigger(ct.PLAYER_ERROR, t) } }, { key: "_normalizeSources", value: function (t) { var e = t.sources || (void 0 !== t.source ? [t.source] : []); return 0 === e.length ? [{ source: "", mimeType: "" }] : e } }, { key: "resize", value: function (t) { return this.core.resize(t), this } }, { key: "load", value: function (t, e, r) { return void 0 !== r && this.configure({ autoPlay: !!r }), this.core.load(t, e), this } }, { key: "destroy", value: function () { return this.stopListening(), this.core.destroy(), this } }, { key: "consent", value: function (t) { this.core.getCurrentPlayback().consent(t) } }, { key: "play", value: function () { return this.core.activeContainer.play(), this } }, { key: "pause", value: function () { return this.core.activeContainer.pause(), this } }, { key: "stop", value: function () { return this.core.activeContainer.stop(), this } }, { key: "seek", value: function (t) { return this.core.activeContainer.seek(t), this } }, { key: "seekPercentage", value: function (t) { return this.core.activeContainer.seekPercentage(t), this } }, { key: "mute", value: function () { return this.core.activePlayback.mute(), this } }, { key: "unmute", value: function () { return this.core.activePlayback.unmute(), this } }, { key: "isPlaying", value: function () { return this.core.activeContainer.isPlaying() } }, { key: "isDvrEnabled", value: function () { return this.core.activeContainer.isDvrEnabled() } }, { key: "isDvrInUse", value: function () { return this.core.activeContainer.isDvrInUse() } }, { key: "configure", value: function () { var t = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {}; return this._registerOptionEventListeners(t.events, this.options.events), this.core.configure(t), this } }, { key: "getPlugin", value: function (t) { return this.core.plugins.concat(this.core.activeContainer.plugins).filter((function (e) { return e.name === t }))[0] } }, { key: "getCurrentTime", value: function () { return this.core.activeContainer.getCurrentTime() } }, { key: "getStartTimeOffset", value: function () { return this.core.activeContainer.getStartTimeOffset() } }, { key: "getDuration", value: function () { return this.core.activeContainer.getDuration() } }]), r }(ht); Object.assign(jt.prototype, Ct); var Gt = function (t) { c(r, t); var e = g(r); function r(t) { var n; return s(this, r), (n = e.call(this, t.options)).container = t, n.enabled = !0, n.bindEvents(), n } return l(r, [{ key: "playerError", get: function () { return this.container.playerError } }, { key: "enable", value: function () { this.enabled || (this.bindEvents(), this.enabled = !0) } }, { key: "disable", value: function () { this.enabled && (this.stopListening(), this.enabled = !1) } }, { key: "bindEvents", value: function () { } }, { key: "destroy", value: function () { this.stopListening() } }]), r }(ht); Object.assign(Gt.prototype, Ct), Gt.extend = function (t) { return G(Gt, t) }, Gt.type = "container"; var Vt = function (t) { c(r, t); var e = g(r); function r(t) { var n; return s(this, r), (n = e.call(this, t.options)).core = t, n.enabled = !0, n.bindEvents(), n } return l(r, [{ key: "playerError", get: function () { return this.core.playerError } }, { key: "bindEvents", value: function () { } }, { key: "enable", value: function () { this.enabled || (this.bindEvents(), this.enabled = !0) } }, { key: "disable", value: function () { this.enabled && (this.stopListening(), this.enabled = !1) } }, { key: "getExternalInterface", value: function () { return {} } }, { key: "destroy", value: function () { this.stopListening() } }]), r }(ht); Object.assign(Vt.prototype, Ct), Vt.extend = function (t) { return G(Vt, t) }, Vt.type = "core"; var Kt = function (t) { c(r, t); var e = g(r); function r(t) { var n; return s(this, r), (n = e.call(this, t.options)).container = t, n.enabled = !0, n.bindEvents(), n } return l(r, [{ key: "playerError", get: function () { return this.container.playerError } }, { key: "enable", value: function () { this.enabled || (this.bindEvents(), this.$el.show(), this.enabled = !0) } }, { key: "disable", value: function () { this.stopListening(), this.$el.hide(), this.enabled = !1 } }, { key: "bindEvents", value: function () { } }]), r }(St); Object.assign(Kt.prototype, Ct), Kt.extend = function (t) { return G(Kt, t) }, Kt.type = "container"; var Ht = { mp4: ["avc1.42E01E", "avc1.58A01E", "avc1.4D401E", "avc1.64001E", "mp4v.20.8", "mp4v.20.240", "mp4a.40.2"].map((function (t) { return 'video/mp4; codecs="' + t + ', mp4a.40.2"' })), ogg: ['video/ogg; codecs="theora, vorbis"', 'video/ogg; codecs="dirac"', 'video/ogg; codecs="theora, speex"'], "3gpp": ['video/3gpp; codecs="mp4v.20.8, samr"'], webm: ['video/webm; codecs="vp8, vorbis"'], mkv: ['video/x-matroska; codecs="theora, vorbis"'], m3u8: ["application/x-mpegurl"] }; Ht.ogv = Ht.ogg, Ht["3gp"] = Ht["3gpp"]; var Yt = { wav: ["audio/wav"], mp3: ["audio/mp3", 'audio/mpeg;codecs="mp3"'], aac: ['audio/mp4;codecs="mp4a.40.5"'], oga: ["audio/ogg"] }, Wt = Object.keys(Yt).reduce((function (t, e) { return [].concat(A(t), A(Yt[e])) }), []), $t = { code: "unknown", message: "unknown" }, zt = function (t) { c(r, t); var e = g(r); function r() { var t; s(this, r); for (var n = arguments.length, i = new Array(n), a = 0; a < n; a++)i[a] = arguments[a]; (t = e.call.apply(e, [this].concat(i)))._destroyed = !1, t._loadStarted = !1, t._isBuffering = !1, t._playheadMoving = !1, t._playheadMovingTimer = null, t._stopped = !1, t._ccTrackId = -1, t._setupSrc(t.options.src), t.options.playback || (t.options.playback = t.options || {}), t.options.playback.disableContextMenu = t.options.playback.disableContextMenu || t.options.disableVideoTagContextMenu, t._minDvrSize = t.isValidMinimumDVRSizeConfig ? t.minimumDVRSizeConfig : 60; var o, l = t.options.playback, u = l.preload || (w.isSafari ? "auto" : t.options.preload); return t.options.poster && ("string" == typeof t.options.poster ? o = t.options.poster : "string" == typeof t.options.poster.url && (o = t.options.poster.url)), D.extend(!0, t.el, { muted: t.options.mute, defaultMuted: t.options.mute, loop: t.options.loop, poster: o, preload: u || "metadata", crossOrigin: l.crossOrigin, "x-webkit-playsinline": l.playInline }), (l.controls || t.options.useVideoTagDefaultControls) && t.$el.attr("controls", ""), l.playInline && t.$el.attr({ playsinline: "playsinline" }), l.crossOrigin && t.$el.attr({ crossorigin: l.crossOrigin }), t.settings = { default: ["seekbar"] }, t.settings.left = ["playpause", "position", "duration"], t.settings.right = ["fullscreen", "volume", "hd-indicator"], l.externalTracks && t._setupExternalTracks(l.externalTracks), t.options.autoPlay && t.attemptAutoPlay(), t } return l(r, [{ key: "name", get: function () { return "html5_video" } }, { key: "supportedVersion", get: function () { return { min: "0.4.21" } } }, { key: "tagName", get: function () { return this.isAudioOnly ? "audio" : "video" } }, { key: "isAudioOnly", get: function () { var t = this.options.src, e = r._mimeTypesForUrl(t, Yt, this.options.mimeType); return this.options.playback && this.options.playback.audioOnly || this.options.audioOnly || Wt.indexOf(e[0]) >= 0 } }, { key: "attributes", get: function () { return { "data-html5-video": "" } } }, { key: "events", get: function () { return { canplay: "_onCanPlay", canplaythrough: "_handleBufferingEvents", durationchange: "_onDurationChange", ended: "_onEnded", error: "_onError", loadeddata: "_onLoadedData", loadedmetadata: "_onLoadedMetadata", pause: "_onPause", playing: "_onPlaying", progress: "_onProgress", seeking: "_onSeeking", seeked: "_onSeeked", stalled: "_handleBufferingEvents", timeupdate: "_onTimeUpdate", waiting: "_onWaiting" } } }, { key: "ended", get: function () { return this.el.ended } }, { key: "buffering", get: function () { return this._isBuffering } }, { key: "isLive", get: function () { return this.getPlaybackType() === Dt.LIVE } }, { key: "dvrEnabled", get: function () { return this.getDuration() >= this._minDvrSize && this.isLive } }, { key: "minimumDVRSizeConfig", get: function () { return this.options.playback && this.options.playback.minimumDvrSize } }, { key: "isValidMinimumDVRSizeConfig", get: function () { return void 0 !== this.minimumDVRSizeConfig && "number" == typeof this.minimumDVRSizeConfig } }, { key: "configure", value: function (t) { m(d(r.prototype), "configure", this).call(this, t), this.el.loop = !!t.loop } }, { key: "attemptAutoPlay", value: function () { var t = this; this.canAutoPlay((function (e, r) { r && at.warn(t.name, "autoplay error.", { result: e, error: r }), e && setTimeout((function () { return !t._destroyed && t.play() }), 0) })) } }, { key: "canAutoPlay", value: function (t) { if (this.options.disableCanAutoPlay) t(!0, null); else { var e = { timeout: this.options.autoPlayTimeout || 500, inline: this.options.playback.playInline || !1, muted: this.options.mute || !1 }; w.isMobile && Z.options.recycleVideo && (e.element = this.el), X(t, e) } } }, { key: "_setupExternalTracks", value: function (t) { this._externalTracks = t.map((function (t) { return { kind: t.kind || "subtitles", label: t.label, lang: t.lang, src: t.src } })) } }, { key: "_setupSrc", value: function (t) { this.el.src !== t && (this._ccIsSetup = !1, this.el.src = t, this._src = this.el.src) } }, { key: "_onLoadedMetadata", value: function (t) { this._handleBufferingEvents(), this.trigger(ct.PLAYBACK_LOADEDMETADATA, { duration: t.target.duration, data: t }), this._updateSettings(); var e = void 0 === this._options.autoSeekFromUrl || this._options.autoSeekFromUrl; this.getPlaybackType() !== Dt.LIVE && e && this._checkInitialSeek() } }, { key: "_onDurationChange", value: function () { this._updateSettings(), this._onTimeUpdate(), this._onProgress() } }, { key: "_updateSettings", value: function () { this.getPlaybackType() === Dt.VOD || this.getPlaybackType() === Dt.AOD ? this.settings.left = ["playpause", "position", "duration"] : this.settings.left = ["playstop"], this.settings.seekEnabled = this.isSeekEnabled(), this.trigger(ct.PLAYBACK_SETTINGSUPDATE) } }, { key: "isSeekEnabled", value: function () { return isFinite(this.getDuration()) } }, { key: "getPlaybackType", value: function () { var t = "audio" === this.tagName ? Dt.AOD : Dt.VOD; return [0, void 0, 1 / 0].indexOf(this.el.duration) >= 0 ? Dt.LIVE : t } }, { key: "isHighDefinitionInUse", value: function () { return !1 } }, { key: "consent", value: function (t) { var e = this; if (this.isPlaying() || this.el._consented) m(d(r.prototype), "consent", this).call(this, t); else { var n = function n() { e.el.removeEventListener("loadedmetadata", n, !1), e.el.removeEventListener("error", n, !1), e.el._consented = !0, m(d(r.prototype), "consent", e).call(e, t) }; this.el.addEventListener("loadedmetadata", n, !1), this.el.addEventListener("error", n, !1), this.el.load() } } }, { key: "play", value: function () { this.trigger(ct.PLAYBACK_PLAY_INTENT), this._stopped = !1, this._setupSrc(this._src), this._handleBufferingEvents(); var t = this.el.play(); t && t.catch && t.catch((function () { })) } }, { key: "pause", value: function () { this.el.pause(), this.dvrEnabled && this._updateDvr(!0) } }, { key: "stop", value: function () { this.pause(), this._stopped = !0, this.el.removeAttribute("src"), this.el.load(), this._stopPlayheadMovingChecks(), this._handleBufferingEvents(), this.trigger(ct.PLAYBACK_STOP) } }, { key: "volume", value: function (t) { 0 === t ? (this.$el.attr({ muted: "true" }), this.el.muted = !0) : (this.$el.attr({ muted: null }), this.el.muted = !1, this.el.volume = t / 100) } }, { key: "mute", value: function () { this.el.muted = !0 } }, { key: "unmute", value: function () { this.el.muted = !1 } }, { key: "isMuted", value: function () { return !0 === this.el.muted || 0 === this.el.volume } }, { key: "isPlaying", value: function () { return !this.el.paused && !this.el.ended } }, { key: "isReady", get: function () { return this._isReadyState } }, { key: "_startPlayheadMovingChecks", value: function () { null === this._playheadMovingTimer && (this._playheadMovingTimeOnCheck = null, this._determineIfPlayheadMoving(), this._playheadMovingTimer = setInterval(this._determineIfPlayheadMoving.bind(this), 500)) } }, { key: "_stopPlayheadMovingChecks", value: function () { null !== this._playheadMovingTimer && (clearInterval(this._playheadMovingTimer), this._playheadMovingTimer = null, this._playheadMoving = !1) } }, { key: "_determineIfPlayheadMoving", value: function () { var t = this._playheadMovingTimeOnCheck, e = this.el.currentTime; this._playheadMoving = t !== e, this._playheadMovingTimeOnCheck = e, this._handleBufferingEvents() } }, { key: "_onWaiting", value: function () { this._loadStarted = !0, this._handleBufferingEvents() } }, { key: "_onLoadedData", value: function () { this._loadStarted = !0, this._handleBufferingEvents() } }, { key: "_onCanPlay", value: function () { this._handleBufferingEvents() } }, { key: "_onPlaying", value: function () { this._checkForClosedCaptions(), this._startPlayheadMovingChecks(), this._handleBufferingEvents(), this.trigger(ct.PLAYBACK_PLAY) } }, { key: "_onPause", value: function () { this._stopPlayheadMovingChecks(), this._handleBufferingEvents(), this.trigger(ct.PLAYBACK_PAUSE) } }, { key: "_onSeeking", value: function () { this.trigger(ct.PLAYBACK_SEEK, this.getCurrentTime()), this._handleBufferingEvents() } }, { key: "_onSeeked", value: function () { this._handleBufferingEvents(), this.trigger(ct.PLAYBACK_SEEKED) } }, { key: "_onEnded", value: function () { this._handleBufferingEvents(), this.trigger(ct.PLAYBACK_ENDED, this.name) } }, { key: "_handleBufferingEvents", value: function () { var t = !this.el.ended && !this.el.paused, e = this._loadStarted && !this.el.ended && !this._stopped && (t && !this._playheadMoving || this.el.readyState < this.el.HAVE_FUTURE_DATA); this._isBuffering !== e && (this._isBuffering = e, e ? this.trigger(ct.PLAYBACK_BUFFERING, this.name) : this.trigger(ct.PLAYBACK_BUFFERFULL, this.name)) } }, { key: "_onError", value: function () { var t = this.el.error || $t, e = t.code, r = t.message, n = e === $t.code, i = this.createError({ code: e, description: r, raw: this.el.error, level: n ? _t.Levels.WARN : _t.Levels.FATAL }); n ? at.warn(this.name, "HTML5 unknown error: ", i) : this.trigger(ct.PLAYBACK_ERROR, i) } }, { key: "destroy", value: function () { this._destroyed = !0, this.handleTextTrackChange && this.el.textTracks.removeEventListener("change", this.handleTextTrackChange), m(d(r.prototype), "destroy", this).call(this), this.el.removeAttribute("src"), this.el.load(), this._src = null, Z.garbage(this.el) } }, { key: "_updateDvr", value: function (t) { this.trigger(ct.PLAYBACK_DVR, t), this.trigger(ct.PLAYBACK_STATS_ADD, { dvr: t }) } }, { key: "seek", value: function (t) { t < 0 && (at.warn("Attempt to seek to a negative time. Resetting to live point. Use seekToLivePoint() to seek to the live point."), t = this.getDuration()), this.dvrEnabled && this._updateDvr(t < this.getDuration() - 3), t += this.el.seekable.start(0), this.el.currentTime = t } }, { key: "seekPercentage", value: function (t) { var e = this.el.duration * (t / 100); this.seek(e) } }, { key: "_checkInitialSeek", value: function () { var t = Y(); 0 !== t && this.seek(t) } }, { key: "getCurrentTime", value: function () { return this.el.currentTime } }, { key: "getDuration", value: function () { if (this.isLive) { if (this.el.seekable.length > 0) return this.el.seekable.end(0) - this.el.seekable.start(0); this._scheduleUpdateSettingsCheck() } return this.el.duration } }, { key: "_scheduleUpdateSettingsCheck", value: function () { var t = this; this._updateSettingsCheckInFlight || (this._updateSettingsCheckInFlight = setTimeout((function () { t._updateSettings(), t._updateSettingsCheckInFlight = null }), 1e3)) } }, { key: "_onTimeUpdate", value: function () { var t = this.isLive ? this.getDuration() : this.el.duration; this.trigger(ct.PLAYBACK_TIMEUPDATE, { current: this.el.currentTime, total: t }, this.name) } }, { key: "_onProgress", value: function () { if (this.el.buffered.length) { for (var t = [], e = 0, r = 0; r < this.el.buffered.length; r++)t = [].concat(A(t), [{ start: this.el.buffered.start(r), end: this.el.buffered.end(r) }]), this.el.currentTime >= t[r].start && this.el.currentTime <= t[r].end && (e = r); var n = { start: t[e].start, current: t[e].end, total: this.el.duration }; this.trigger(ct.PLAYBACK_PROGRESS, n, t) } } }, { key: "_typeFor", value: function (t) { var e = r._mimeTypesForUrl(t, Ht, this.options.mimeType); return 0 === e.length && (e = r._mimeTypesForUrl(t, Yt, this.options.mimeType)), (e[0] || "").split(";")[0] } }, { key: "_ready", value: function () { this._isReadyState || (this._isReadyState = !0, this.trigger(ct.PLAYBACK_READY, this.name)) } }, { key: "_checkForClosedCaptions", value: function () { if (this.isHTML5Video && !this._ccIsSetup) { if (this.hasClosedCaptionsTracks) { this.trigger(ct.PLAYBACK_SUBTITLE_AVAILABLE); var t = this.closedCaptionsTrackId; this.closedCaptionsTrackId = t, this.handleTextTrackChange = this._handleTextTrackChange.bind(this), this.el.textTracks.addEventListener("change", this.handleTextTrackChange) } this._ccIsSetup = !0 } } }, { key: "_handleTextTrackChange", value: function () { var t = this.closedCaptionsTracks.find((function (t) { return "showing" === t.track.mode })) || { id: -1 }; this._ccTrackId !== t.id && (this._ccTrackId = t.id, this.trigger(ct.PLAYBACK_SUBTITLE_CHANGED, { id: t.id })) } }, { key: "isHTML5Video", get: function () { return this.name === r.prototype.name } }, { key: "closedCaptionsTracks", get: function () { var t = 0; return (this.el.textTracks ? Array.from(this.el.textTracks) : []).filter((function (t) { return "subtitles" === t.kind || "captions" === t.kind })).map((function (e) { return { id: t++, name: e.label, track: e } })) } }, { key: "closedCaptionsTrackId", get: function () { return this._ccTrackId }, set: function (t) { if ($(t)) { var e, r = this.closedCaptionsTracks; if (-1 !== t) { if (!(e = r.find((function (e) { return e.id === t })))) return; if ("showing" === e.track.mode) return } r.filter((function (t) { return "hidden" !== t.track.mode })).forEach((function (t) { return t.track.mode = "hidden" })), e && (e.track.mode = "showing"), this._ccTrackId = t, this.trigger(ct.PLAYBACK_SUBTITLE_CHANGED, { id: t }) } } }, { key: "template", get: function () { return Tt('<% for (var i = 0; i < tracks.length; i++) { %>\n  <track data-html5-video-track="<%= i %>" kind="<%= tracks[i].kind %>" label="<%= tracks[i].label %>" srclang="<%= tracks[i].lang %>" src="<%= tracks[i].src %>">\n<% }; %>\n') } }, { key: "render", value: function () { this.options.playback.disableContextMenu && this.$el.on("contextmenu", (function () { return !1 })), this._externalTracks && this._externalTracks.length > 0 && this.$el.html(this.template({ tracks: this._externalTracks })), this._ready(); var t = bt.getStyleFor("[data-html5-video] {\n  position: absolute;\n  height: 100%;\n  width: 100%;\n  display: block; }\n".toString(), { baseUrl: this.options.baseUrl }); return this.$el.append(t[0]), this } }]), r }(Dt); zt._mimeTypesForUrl = function (t, e, r) { var n = (t.split("?")[0].match(/.*\.(.*)$/) || [])[1], i = r || n && e[n.toLowerCase()] || []; return i.constructor === Array ? i : [i] }, zt._canPlay = function (t, e, r, n) { var i = zt._mimeTypesForUrl(r, e, n), a = document.createElement(t); return !!i.filter((function (t) { return !!a.canPlayType(t).replace(/no/, "") }))[0] }, zt.canPlay = function (t, e) { return zt._canPlay("audio", Yt, t, e) || zt._canPlay("video", Ht, t, e) }; var qt = function (t) { c(r, t); var e = g(r); function r() { return s(this, r), e.apply(this, arguments) } return l(r, [{ key: "name", get: function () { return "html5_audio" } }, { key: "supportedVersion", get: function () { return { min: "0.4.21" } } }, { key: "tagName", get: function () { return "audio" } }, { key: "isAudioOnly", get: function () { return !0 } }, { key: "updateSettings", value: function () { this.settings.left = ["playpause", "position", "duration"], this.settings.seekEnabled = this.isSeekEnabled(), this.trigger(ct.PLAYBACK_SETTINGSUPDATE) } }, { key: "getPlaybackType", value: function () { return Dt.AOD } }]), r }(zt); qt.canPlay = function (t, e) { return zt._canPlay("audio", { wav: ["audio/wav"], mp3: ["audio/mp3", 'audio/mpeg;codecs="mp3"'], aac: ['audio/mp4;codecs="mp4a.40.5"'], oga: ["audio/ogg"] }, t, e) }; var Xt = function (t) { c(r, t); var e = g(r); function r(t) { var n; return s(this, r), (n = e.call(this, t)).el.src = t.src, n } return l(r, [{ key: "name", get: function () { return "html_img" } }, { key: "supportedVersion", get: function () { return { min: "0.4.21" } } }, { key: "tagName", get: function () { return "img" } }, { key: "attributes", get: function () { return { "data-html-img": "" } } }, { key: "events", get: function () { return { load: "_onLoad", abort: "_onError", error: "_onError" } } }, { key: "getPlaybackType", value: function () { return Dt.NO_OP } }, { key: "render", value: function () { var t = bt.getStyleFor("[data-html-img] {\n  max-width: 100%;\n  max-height: 100%; }\n".toString(), { baseUrl: this.options.baseUrl }); return this.$el.append(t[0]), this.trigger(ct.PLAYBACK_READY, this.name), this } }, { key: "_onLoad", value: function () { this.trigger(ct.PLAYBACK_ENDED, this.name) } }, { key: "_onError", value: function (t) { var e = "error" === t.type ? "load error" : "loading aborted"; this.trigger(ct.PLAYBACK_ERROR, { message: e }, this.name) } }]), r }(Dt); Xt.canPlay = function (t) { return /\.(png|jpg|jpeg|gif|bmp|tiff|pgm|pnm|webp)(|\?.*)$/i.test(t) }; var Zt = function (t) { c(r, t); var e = g(r); function r() { var t; s(this, r); for (var n = arguments.length, i = new Array(n), a = 0; a < n; a++)i[a] = arguments[a]; return (t = e.call.apply(e, [this].concat(i)))._noiseFrameNum = -1, t } return l(r, [{ key: "name", get: function () { return "no_op" } }, { key: "supportedVersion", get: function () { return { min: "0.4.21" } } }, { key: "template", get: function () { return Tt("<canvas data-no-op-canvas></canvas>\n<p data-no-op-msg><%=message%></p><p>\n</p>") } }, { key: "attributes", get: function () { return { "data-no-op": "" } } }, { key: "render", value: function () { var t = this.options.playbackNotSupportedMessage || this.i18n.t("playback_not_supported"), e = bt.getStyleFor("[data-no-op] {\n  position: absolute;\n  height: 100%;\n  width: 100%;\n  text-align: center; }\n\n[data-no-op] p[data-no-op-msg] {\n  position: absolute;\n  text-align: center;\n  font-size: 25px;\n  left: 0;\n  right: 0;\n  color: white;\n  padding: 10px;\n  /* center vertically */\n  top: 50%;\n  transform: translateY(-50%);\n  max-height: 100%;\n  overflow: auto; }\n\n[data-no-op] canvas[data-no-op-canvas] {\n  background-color: #777;\n  height: 100%;\n  width: 100%; }\n".toString(), { baseUrl: this.options.baseUrl }); this.$el.append(e[0]), this.$el.html(this.template({ message: t })), this.trigger(ct.PLAYBACK_READY, this.name); var r = !(!this.options.poster || !this.options.poster.showForNoOp); return !this.options.autoPlay && r || this._animate(), this } }, { key: "_noise", value: function () { if (this._noiseFrameNum = (this._noiseFrameNum + 1) % 5, !this._noiseFrameNum) { var t, e = this.context.createImageData(this.context.canvas.width, this.context.canvas.height); try { t = new Uint32Array(e.data.buffer) } catch (i) { t = new Uint32Array(this.context.canvas.width * this.context.canvas.height * 4); for (var r = e.data, n = 0; n < r.length; n++)t[n] = r[n] } for (var i = t.length, a = 6 * Math.random() + 4, s = 0, o = 0, l = 0; l < i;) { if (s < 0) s = a * Math.random(), o = 255 * Math.pow(Math.random(), .4) << 24; s -= 1, t[l++] = o } this.context.putImageData(e, 0, 0) } } }, { key: "_loop", value: function () { var t = this; this._stop || (this._noise(), this._animationHandle = B((function () { return t._loop() }))) } }, { key: "destroy", value: function () { this._animationHandle && (U(this._animationHandle), this._stop = !0) } }, { key: "_animate", value: function () { this.canvas = this.$el.find("canvas[data-no-op-canvas]")[0], this.context = this.canvas.getContext("2d"), this._loop() } }]), r }(Dt); Zt.canPlay = function (t) { return !0 }; var Qt = function (t) { c(r, t); var e = g(r); function r(t) { var n; return s(this, r), (n = e.call(this, t))._initializeMessages(), n } return l(r, [{ key: "name", get: function () { return "strings" } }, { key: "supportedVersion", get: function () { return { min: "0.4.21" } } }, { key: "t", value: function (t) { var e = this._language(), r = this._messages.en; return (e && this._messages[e] || r)[t] || r[t] || t } }, { key: "_language", value: function () { return this.core.options.language || q() } }, { key: "_initializeMessages", value: function () { this._messages = D.extend(!0, { en: { live: "live", back_to_live: "к прямому эфиру", disabled: "Disabled", playback_not_supported: "Your browser does not support the playback of this video. Please try using a different browser.", default_error_title: "Could not play video.", default_error_message: "There was a problem trying to load the video." }, de: { live: "Live", back_to_live: "Zurück zum Live-Video", disabled: "Deaktiviert", playback_not_supported: "Ihr Browser unterstützt das Playback Verfahren nicht. Bitte vesuchen Sie es mit einem anderen Browser.", default_error_title: "Video kann nicht abgespielt werden", default_error_message: "Es gab ein Problem beim Laden des Videos" }, pt: { live: "ao vivo", back_to_live: "voltar para o ao vivo", disabled: "Desativado", playback_not_supported: "Seu navegador não supporta a reprodução deste video. Por favor, tente usar um navegador diferente.", default_error_title: "Não foi possível reproduzir o vídeo.", default_error_message: "Ocorreu um problema ao tentar carregar o vídeo." }, es_am: { live: "vivo", back_to_live: "volver en vivo", disabled: "No disponible", playback_not_supported: "Su navegador no soporta la reproducción de este video. Por favor, utilice un navegador diferente.", default_error_title: "No se puede reproducir el video.", default_error_message: "Se ha producido un error al cargar el video." }, es: { live: "en directo", back_to_live: "volver al directo", disabled: "No disponible", playback_not_supported: "Este navegador no es compatible para reproducir este vídeo. Utilice un navegador diferente.", default_error_title: "No se puede reproducir el vídeo.", default_error_message: "Se ha producido un problema al cargar el vídeo." }, ru: { live: "прямой эфир", back_to_live: "к прямому эфиру", disabled: "Отключено", playback_not_supported: "Ваш браузер не поддерживает воспроизведение этого видео. Пожалуйста, попробуйте другой браузер." }, bg: { live: "на живо", back_to_live: "Върни на живо", disabled: "Изключено", playback_not_supported: "Вашият браузър не поддържа възпроизвеждането на това видео. Моля, пробвайте с друг браузър.", default_error_title: "Видеото не може да се възпроизведе.", default_error_message: "Възникна проблем при зареждането на видеото." }, fr: { live: "en direct", back_to_live: "retour au direct", disabled: "Désactivé", playback_not_supported: "Votre navigateur ne supporte pas la lecture de cette vidéo. Merci de tenter sur un autre navigateur.", default_error_title: "Impossible de lire la vidéo.", default_error_message: "Un problème est survenu lors du chargement de la vidéo." }, tr: { live: "canlı", back_to_live: "canlı yayına dön", disabled: "Engelli", playback_not_supported: "Tarayıcınız bu videoyu oynatma desteğine sahip değil. Lütfen farklı bir tarayıcı ile deneyin." }, et: { live: "Otseülekanne", back_to_live: "Tagasi otseülekande juurde", disabled: "Keelatud", playback_not_supported: "Teie brauser ei toeta selle video taasesitust. Proovige kasutada muud brauserit." }, ar: { live: "مباشر", back_to_live: "الرجوع إلى المباشر", disabled: "معطّل", playback_not_supported: "المتصفح الذي تستخدمه لا يدعم تشغيل هذا الفيديو. الرجاء إستخدام متصفح آخر.", default_error_title: "غير قادر الى التشغيل.", default_error_message: "حدثت مشكلة أثناء تحميل الفيديو." } }, this.core.options.strings || {}), this._messages["de-DE"] = this._messages.de, this._messages["pt-BR"] = this._messages.pt, this._messages["en-US"] = this._messages.en, this._messages["bg-BG"] = this._messages.bg, this._messages["es-419"] = this._messages.es_am, this._messages["es-ES"] = this._messages.es, this._messages["fr-FR"] = this._messages.fr, this._messages["tr-TR"] = this._messages.tr, this._messages["et-EE"] = this._messages.et, this._messages["ar-IQ"] = this._messages.ar } }]), r }(Vt), Jt = function (t) { c(r, t); var e = g(r); function r() { return s(this, r), e.apply(this, arguments) } return l(r, [{ key: "name", get: function () { return "sources" } }, { key: "supportedVersion", get: function () { return { min: "0.4.21" } } }, { key: "bindEvents", value: function () { this.listenTo(this.core, ct.CORE_CONTAINERS_CREATED, this.onContainersCreated) } }, { key: "onContainersCreated", value: function () { var t = this.core.containers.filter((function (t) { return "no_op" !== t.playback.name }))[0] || this.core.containers[0]; t && this.core.containers.forEach((function (e) { e !== t && e.destroy() })) } }]), r }(Vt); Bt.registerPlugin(Qt), Bt.registerPlugin(Jt), Bt.registerPlayback(Zt), Bt.registerPlayback(Xt), Bt.registerPlayback(qt), Bt.registerPlayback(zt); var te = { Player: jt, Events: ct, Browser: w, ContainerPlugin: Gt, UIContainerPlugin: Kt, CorePlugin: Vt, UICorePlugin: Lt, Playback: Dt, Container: Rt, Core: Ot, PlayerError: _t, Loader: Bt, BaseObject: ht, UIObject: St, Utils: J, HTML5Audio: qt, HTML5Video: zt, HTMLImg: Xt, Log: at, Styler: bt, version: "0.4.21", template: Tt, $: D }; function ee(t, e) { if (!(t instanceof e)) throw new TypeError("Cannot call a class as a function") } function re(t, e) { for (var r = 0; r < e.length; r++) { var n = e[r]; n.enumerable = n.enumerable || !1, n.configurable = !0, "value" in n && (n.writable = !0), Object.defineProperty(t, n.key, n) } } function ne(t, e, r) { return e && re(t.prototype, e), r && re(t, r), t } function ie(t, e) { if ("function" != typeof e && null !== e) throw new TypeError("Super expression must either be null or a function"); t.prototype = Object.create(e && e.prototype, { constructor: { value: t, writable: !0, configurable: !0 } }), e && se(t, e) } function ae(t) { return ae = Object.setPrototypeOf ? Object.getPrototypeOf : function (t) { return t.__proto__ || Object.getPrototypeOf(t) }, ae(t) } function se(t, e) { return se = Object.setPrototypeOf || function (t, e) { return t.__proto__ = e, t }, se(t, e) } function oe(t, e) { return !e || "object" != typeof e && "function" != typeof e ? function (t) { if (void 0 === t) throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); return t }(t) : e } function le(t) { var e = function () { if ("undefined" == typeof Reflect || !Reflect.construct) return !1; if (Reflect.construct.sham) return !1; if ("function" == typeof Proxy) return !0; try { return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], (function () { }))), !0 } catch (t) { return !1 } }(); return function () { var r, n = ae(t); if (e) { var i = ae(this).constructor; r = Reflect.construct(n, arguments, i) } else r = n.apply(this, arguments); return oe(this, r) } } function ue(t, e, r) { return ue = "undefined" != typeof Reflect && Reflect.get ? Reflect.get : function (t, e, r) { var n = function (t, e) { for (; !Object.prototype.hasOwnProperty.call(t, e) && null !== (t = ae(t));); return t }(t, e); if (n) { var i = Object.getOwnPropertyDescriptor(n, e); return i.get ? i.get.call(r) : i.value } }, ue(t, e, r || t) } var ce = function (t) { ie(r, t); var e = le(r); function r(t) { return ee(this, r), e.call(this, t) } return ne(r, [{ key: "name", get: function () { return "click_to_pause" } }, { key: "supportedVersion", get: function () { return { min: "0.4.20" } } }, { key: "config", get: function () { return this.container.options.clickToPauseConfig || {} } }, { key: "bindEvents", value: function () { this.listenTo(this.container, ct.CONTAINER_CLICK, this.click), this.listenTo(this.container, ct.CONTAINER_SETTINGSUPDATE, this.settingsUpdate) } }, { key: "click", value: function () { var t = this.config.onClickPayload; (this.container.getPlaybackType() !== Dt.LIVE || this.container.isDvrEnabled()) && (this.container.isPlaying() ? this.container.pause(t) : this.container.play(t)) } }, { key: "settingsUpdate", value: function () { var t = this.container.getPlaybackType() !== Dt.LIVE || this.container.isDvrEnabled(); if (t !== this.pointerEnabled) { var e = t ? "addClass" : "removeClass"; this.container.$el[e]("pointer-enabled"), this.pointerEnabled = t } } }]), r }(Gt), de = function (t) { ie(r, t); var e = le(r); function r(t) { var n; ee(this, r), n = e.call(this, t); var i = t.options.closedCaptionsConfig; return n._title = i && i.title ? i.title : null, n._ariaLabel = i && i.ariaLabel ? i.ariaLabel : "cc-button", n._labelCb = i && i.labelCallback && "function" == typeof i.labelCallback ? i.labelCallback : function (t) { return t.name }, n } return ne(r, [{ key: "name", get: function () { return "closed_captions" } }, { key: "supportedVersion", get: function () { return { min: "0.4.20" } } }, { key: "template", get: function () { return Tt('<button type="button" class="cc-button media-control-button media-control-icon" data-cc-button aria-label="<%= ariaLabel %>"></button>\n<ul>\n  <% if (title) { %>\n  <li data-title><%= title %></li>\n  <% }; %>\n  <li><a href="#" data-cc-select="-1"><%= disabledLabel %></a></li>\n  <% for (var i = 0; i < tracks.length; i++) { %>\n    <li><a href="#" data-cc-select="<%= tracks[i].id %>"><%= tracks[i].label %></a></li>\n  <% }; %>\n</ul>\n') } }, { key: "events", get: function () { return { "click [data-cc-button]": "toggleContextMenu", "click [data-cc-select]": "onTrackSelect" } } }, { key: "attributes", get: function () { return { class: "cc-controls", "data-cc-controls": "" } } }, { key: "bindEvents", value: function () { this.listenTo(this.core, ct.CORE_ACTIVE_CONTAINER_CHANGED, this.containerChanged), this.listenTo(this.core.mediaControl, ct.MEDIACONTROL_RENDERED, this.render), this.listenTo(this.core.mediaControl, ct.MEDIACONTROL_HIDE, this.hideContextMenu), this.bindContainerEvents() } }, { key: "bindContainerEvents", value: function () { this.container = this.core.activeContainer, this.container && (this.listenTo(this.container, ct.CONTAINER_SUBTITLE_AVAILABLE, this.onSubtitleAvailable), this.listenTo(this.container, ct.CONTAINER_SUBTITLE_CHANGED, this.onSubtitleChanged), this.listenTo(this.container, ct.CONTAINER_STOP, this.onContainerStop)) } }, { key: "onContainerStop", value: function () { this.ccAvailable(!1) } }, { key: "containerChanged", value: function () { this.ccAvailable(!1), this.stopListening(), this.bindEvents() } }, { key: "onSubtitleAvailable", value: function () { this.renderCcButton(), this.ccAvailable(!0) } }, { key: "onSubtitleChanged", value: function (t) { this.setCurrentContextMenuElement(t.id) } }, { key: "onTrackSelect", value: function (t) { var e = parseInt(t.target.dataset.ccSelect, 10); return this.container.closedCaptionsTrackId = e, this.hideContextMenu(), t.stopPropagation(), !1 } }, { key: "ccAvailable", value: function (t) { var e = t ? "addClass" : "removeClass"; this.$el[e]("available") } }, { key: "toggleContextMenu", value: function () { this.$el.find("ul").toggle() } }, { key: "hideContextMenu", value: function () { this.$el.find("ul").hide() } }, { key: "contextMenuElement", value: function (t) { return this.$el.find("ul a" + (isNaN(t) ? "" : '[data-cc-select="' + t + '"]')).parent() } }, { key: "setCurrentContextMenuElement", value: function (t) { if (this._trackId !== t) { this.contextMenuElement().removeClass("current"), this.contextMenuElement(t).addClass("current"); var e = t > -1 ? "addClass" : "removeClass"; this.$ccButton[e]("enabled"), this._trackId = t } } }, { key: "renderCcButton", value: function () { for (var t = this.container ? this.container.closedCaptionsTracks : [], e = 0; e < t.length; e++)t[e].label = this._labelCb(t[e]); var r = bt.getStyleFor(".cc-controls[data-cc-controls] {\n  float: right;\n  position: relative;\n  display: none; }\n  .cc-controls[data-cc-controls].available {\n    display: block; }\n  .cc-controls[data-cc-controls] .cc-button {\n    padding: 6px !important; }\n    .cc-controls[data-cc-controls] .cc-button.enabled {\n      display: block;\n      opacity: 1.0; }\n      .cc-controls[data-cc-controls] .cc-button.enabled:hover {\n        opacity: 1.0;\n        text-shadow: none; }\n  .cc-controls[data-cc-controls] > ul {\n    list-style-type: none;\n    position: absolute;\n    bottom: 25px;\n    border: 1px solid black;\n    display: none;\n    background-color: #e6e6e6; }\n  .cc-controls[data-cc-controls] li {\n    font-size: 10px; }\n    .cc-controls[data-cc-controls] li[data-title] {\n      background-color: #c3c2c2;\n      padding: 5px; }\n    .cc-controls[data-cc-controls] li a {\n      color: #444;\n      padding: 2px 10px;\n      display: block;\n      text-decoration: none; }\n      .cc-controls[data-cc-controls] li a:hover {\n        background-color: #555;\n        color: white; }\n        .cc-controls[data-cc-controls] li a:hover a {\n          color: white;\n          text-decoration: none; }\n    .cc-controls[data-cc-controls] li.current a {\n      color: #f00; }\n", { baseUrl: this.options.baseUrl }); this.$el.html(this.template({ ariaLabel: this._ariaLabel, disabledLabel: this.core.i18n.t("disabled"), title: this._title, tracks: t })), this.$ccButton = this.$el.find("button.cc-button[data-cc-button]"), this.$ccButton.append('<svg version="1.1" id="Layer_1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" x="0px" y="0px"\n\t viewBox="0 0 49 41.8" style="enable-background:new 0 0 49 41.8;" xml:space="preserve">\n<path d="M47.1,0H3.2C1.6,0,0,1.2,0,2.8v31.5C0,35.9,1.6,37,3.2,37h11.9l3.2,1.9l4.7,2.7c0.9,0.5,2-0.1,2-1.1V37h22.1\n\tc1.6,0,1.9-1.1,1.9-2.7V2.8C49,1.2,48.7,0,47.1,0z M7.2,18.6c0-4.8,3.5-9.3,9.9-9.3c4.8,0,7.1,2.7,7.1,2.7l-2.5,4\n\tc0,0-1.7-1.7-4.2-1.7c-2.8,0-4.3,2.1-4.3,4.3c0,2.1,1.5,4.4,4.5,4.4c2.5,0,4.9-2.1,4.9-2.1l2.2,4.2c0,0-2.7,2.9-7.6,2.9\n\tC10.8,27.9,7.2,23.5,7.2,18.6z M36.9,27.9c-6.4,0-9.9-4.4-9.9-9.3c0-4.8,3.5-9.3,9.9-9.3C41.7,9.3,44,12,44,12l-2.5,4\n\tc0,0-1.7-1.7-4.2-1.7c-2.8,0-4.3,2.1-4.3,4.3c0,2.1,1.5,4.4,4.5,4.4c2.5,0,4.9-2.1,4.9-2.1l2.2,4.2C44.5,25,41.9,27.9,36.9,27.9z"/>\n</svg>'), this.$el.append(r[0]) } }, { key: "render", value: function () { this.renderCcButton(); var t = this.core.mediaControl.$el.find("button[data-fullscreen]"); return t[0] ? this.$el.insertAfter(t) : this.core.mediaControl.$el.find(".media-control-right-panel[data-media-control]").prepend(this.$el), this } }]), r }(Lt), he = function (t) { ie(r, t); var e = le(r); function r(t) { var n; return ee(this, r), (n = e.call(this, t)).settingsUpdate(), n } return ne(r, [{ key: "template", get: function () { return Tt('<div class="live-info"><%= live %></div>\n<button type="button" class="live-button" aria-label="<%= backToLive %>"><%= backToLive %></button>\n') } }, { key: "name", get: function () { return "dvr_controls" } }, { key: "supportedVersion", get: function () { return { min: "0.4.20" } } }, { key: "events", get: function () { return { "click .live-button": "click" } } }, { key: "attributes", get: function () { return { class: "dvr-controls", "data-dvr-controls": "" } } }, { key: "bindEvents", value: function () { this.bindCoreEvents(), this.bindContainerEvents() } }, { key: "bindCoreEvents", value: function () { var t = this; this.core.mediaControl.settings ? (this.listenTo(this.core.mediaControl, ct.MEDIACONTROL_CONTAINERCHANGED, this.containerChanged), this.listenTo(this.core.mediaControl, ct.MEDIACONTROL_RENDERED, this.settingsUpdate), this.listenTo(this.core, ct.CORE_OPTIONS_CHANGE, this.render)) : setTimeout((function () { return t.bindCoreEvents() }), 100) } }, { key: "bindContainerEvents", value: function () { this.core.activeContainer && (this.listenToOnce(this.core.activeContainer, ct.CONTAINER_TIMEUPDATE, this.render), this.listenTo(this.core.activeContainer, ct.CONTAINER_PLAYBACKDVRSTATECHANGED, this.dvrChanged)) } }, { key: "containerChanged", value: function () { this.stopListening(), this.bindEvents() } }, { key: "dvrChanged", value: function (t) { this.core.getPlaybackType() === Dt.LIVE && (this.settingsUpdate(), this.core.mediaControl.$el.addClass("live"), t ? (this.core.mediaControl.$el.addClass("dvr"), this.core.mediaControl.$el.find(".media-control-indicator[data-position], .media-control-indicator[data-duration]").hide()) : this.core.mediaControl.$el.removeClass("dvr")) } }, { key: "click", value: function () { var t = this.core.mediaControl, e = t.container; e.isPlaying() || e.play(), t.$el.hasClass("dvr") && e.seek(e.getDuration()) } }, { key: "settingsUpdate", value: function () { var t = this; this.stopListening(), this.core.mediaControl.$el.removeClass("live"), this.shouldRender() && (this.render(), this.$el.click((function () { return t.click() }))), this.bindEvents() } }, { key: "shouldRender", value: function () { return (void 0 === this.core.options.useDvrControls || !!this.core.options.useDvrControls) && this.core.getPlaybackType() === Dt.LIVE } }, { key: "render", value: function () { var t = bt.getStyleFor('.dvr-controls[data-dvr-controls] {\n  display: inline-block;\n  float: left;\n  color: #fff;\n  line-height: 32px;\n  font-size: 10px;\n  font-weight: bold;\n  margin-left: 6px; }\n  .dvr-controls[data-dvr-controls] .live-info {\n    cursor: default;\n    font-family: "Roboto", "Open Sans", Arial, sans-serif;\n    text-transform: uppercase; }\n    .dvr-controls[data-dvr-controls] .live-info:before {\n      content: "";\n      display: inline-block;\n      position: relative;\n      width: 7px;\n      height: 7px;\n      border-radius: 3.5px;\n      margin-right: 3.5px;\n      background-color: #ff0101; }\n    .dvr-controls[data-dvr-controls] .live-info.disabled {\n      opacity: 0.3; }\n      .dvr-controls[data-dvr-controls] .live-info.disabled:before {\n        background-color: #fff; }\n  .dvr-controls[data-dvr-controls] .live-button {\n    cursor: pointer;\n    outline: none;\n    display: none;\n    border: 0;\n    color: #fff;\n    background-color: transparent;\n    height: 32px;\n    padding: 0;\n    opacity: 0.7;\n    font-family: "Roboto", "Open Sans", Arial, sans-serif;\n    text-transform: uppercase;\n    transition: all 0.1s ease; }\n    .dvr-controls[data-dvr-controls] .live-button:before {\n      content: "";\n      display: inline-block;\n      position: relative;\n      width: 7px;\n      height: 7px;\n      border-radius: 3.5px;\n      margin-right: 3.5px;\n      background-color: #fff; }\n    .dvr-controls[data-dvr-controls] .live-button:hover {\n      opacity: 1;\n      text-shadow: rgba(255, 255, 255, 0.75) 0 0 5px; }\n\n.dvr .dvr-controls[data-dvr-controls] .live-info {\n  display: none; }\n\n.dvr .dvr-controls[data-dvr-controls] .live-button {\n  display: block; }\n\n.dvr.media-control.live[data-media-control] .media-control-layer[data-controls] .bar-container[data-seekbar] .bar-background[data-seekbar] .bar-fill-2[data-seekbar] {\n  background-color: #005aff; }\n\n.media-control.live[data-media-control] .media-control-layer[data-controls] .bar-container[data-seekbar] .bar-background[data-seekbar] .bar-fill-2[data-seekbar] {\n  background-color: #ff0101; }\n', { baseUrl: this.options.baseUrl }); return this.$el.html(this.template({ live: this.core.i18n.t("live"), backToLive: this.core.i18n.t("back_to_live") })), this.$el.append(t[0]), this.shouldRender() && (this.core.mediaControl.$el.addClass("live"), this.core.mediaControl.$(".media-control-left-panel[data-media-control]").append(this.$el)), this } }]), r }(Lt), fe = function (t) { ie(r, t); var e = le(r); function r() { return ee(this, r), e.apply(this, arguments) } return ne(r, [{ key: "name", get: function () { return "end_video" } }, { key: "supportedVersion", get: function () { return { min: "0.4.20" } } }, { key: "bindEvents", value: function () { this.listenTo(this.core, ct.CORE_ACTIVE_CONTAINER_CHANGED, this.containerChanged); var t = this.core.activeContainer; t && (this.listenTo(t, ct.CONTAINER_ENDED, this.ended), this.listenTo(t, ct.CONTAINER_STOP, this.ended)) } }, { key: "containerChanged", value: function () { this.stopListening(), this.bindEvents() } }, { key: "ended", value: function () { (void 0 === this.core.options.exitFullscreenOnEnd || this.core.options.exitFullscreenOnEnd) && this.core.isFullscreen() && this.core.toggleFullscreen() } }]), r }(Vt), pe = function (t) { ie(r, t); var e = le(r); function r(t) { var n; return ee(this, r), (n = e.call(this, t)).options.disableErrorScreen ? oe(n, n.disable()) : n } return ne(r, [{ key: "name", get: function () { return "error_screen" } }, { key: "supportedVersion", get: function () { return { min: "0.4.20" } } }, { key: "template", get: function () { return Tt('<div class="player-error-screen__content" data-error-screen>\n  <% if (icon) { %>\n  <div class="player-error-screen__icon" data-error-screen><%= icon %></div>\n  <% } %>\n  <div class="player-error-screen__title" data-error-screen><%= title %></div>\n  <div class="player-error-screen__message" data-error-screen><%= message %></div>\n  <div class="player-error-screen__code" data-error-screen>Error code: <%= code %></div>\n  <div class="player-error-screen__reload" data-error-screen><%= reloadIcon %></div>\n</div>\n') } }, { key: "container", get: function () { return this.core.getCurrentContainer() } }, { key: "attributes", get: function () { return { class: "player-error-screen", "data-error-screen": "" } } }, { key: "bindEvents", value: function () { this.listenTo(this.core, ct.ERROR, this.onError), this.listenTo(this.core, ct.CORE_ACTIVE_CONTAINER_CHANGED, this.onContainerChanged) } }, { key: "bindReload", value: function () { this.reloadButton = this.$el.find(".player-error-screen__reload"), this.reloadButton && this.reloadButton.on("click", this.reload.bind(this)) } }, { key: "reload", value: function () { var t = this; this.listenToOnce(this.core, ct.CORE_READY, (function () { return t.container.play() })), this.core.load(this.options.sources, this.options.mimeType), this.unbindReload() } }, { key: "unbindReload", value: function () { this.reloadButton && this.reloadButton.off("click") } }, { key: "onContainerChanged", value: function () { this.err = null, this.unbindReload(), this.hide() } }, { key: "onError", value: function () { var t = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {}; t.level === _t.Levels.FATAL && (this.err = t, this.container.disableMediaControl(), this.container.stop(), this.show()) } }, { key: "show", value: function () { this.render(), this.$el.show() } }, { key: "hide", value: function () { this.$el.hide() } }, { key: "render", value: function () { if (this.err) { var t = bt.getStyleFor("[data-player] .player-error-screen {\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  color: #CCCACA;\n  position: absolute;\n  top: 0;\n  height: 100%;\n  width: 100%;\n  background-color: rgba(0, 0, 0, 0.7);\n  z-index: 2000;\n  display: flex;\n  flex-direction: column;\n  justify-content: center; }\n  [data-player] .player-error-screen__content[data-error-screen] {\n    font-size: 14px;\n    color: #CCCACA;\n    margin-top: 45px; }\n  [data-player] .player-error-screen__title[data-error-screen] {\n    font-weight: bold;\n    line-height: 30px;\n    font-size: 18px; }\n  [data-player] .player-error-screen__message[data-error-screen] {\n    width: 90%;\n    margin: 0 auto; }\n  [data-player] .player-error-screen__code[data-error-screen] {\n    font-size: 13px;\n    margin-top: 15px; }\n  [data-player] .player-error-screen__reload {\n    cursor: pointer;\n    width: 30px;\n    margin: 15px auto 0 !important; }\n", { baseUrl: this.options.baseUrl }); return this.$el.html(this.template({ title: this.err.UI.title, message: this.err.UI.message, code: this.err.code, icon: this.err.UI.icon || "", reloadIcon: '<svg fill="#FFFFFF" height="24" viewBox="0 0 24 24" width="24" xmlns="http://www.w3.org/2000/svg">\n    <path d="M17.65 6.35C16.2 4.9 14.21 4 12 4c-4.42 0-7.99 3.58-7.99 8s3.57 8 7.99 8c3.73 0 6.84-2.55 7.73-6h-2.08c-.82 2.33-3.04 4-5.65 4-3.31 0-6-2.69-6-6s2.69-6 6-6c1.66 0 3.14.69 4.22 1.78L13 11h7V4l-2.35 2.35z"/>\n    <path d="M0 0h24v24H0z" fill="none"/>\n</svg>' })), this.$el.append(t[0]), this.core.$el.append(this.el), this.bindReload(), this } } }]), r }(Lt), ge = '<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 16 16">\n  <path fill="#010101" d="M1.425.35L14.575 8l-13.15 7.65V.35z"/>\n</svg>', ve = '<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 16 16">\n  <path fill-rule="evenodd" clip-rule="evenodd" fill="#010101" d="M1.712 14.76H6.43V1.24H1.71v13.52zm7.86-13.52v13.52h4.716V1.24H9.573z"/>\n</svg>', me = D('link[rel="shortcut icon"]'), ye = function (t) { ie(r, t); var e = le(r); function r(t) { var n; return ee(this, r), (n = e.call(this, t))._container = null, n.configure(), n } return ne(r, [{ key: "name", get: function () { return "favicon" } }, { key: "supportedVersion", get: function () { return { min: "0.4.20" } } }, { key: "oldIcon", get: function () { return me } }, { key: "configure", value: function () { this.core.options.changeFavicon ? this.enabled || (this.stopListening(this.core, ct.CORE_OPTIONS_CHANGE), this.enable()) : this.enabled && (this.disable(), this.listenTo(this.core, ct.CORE_OPTIONS_CHANGE, this.configure)) } }, { key: "bindEvents", value: function () { this.listenTo(this.core, ct.CORE_OPTIONS_CHANGE, this.configure), this.listenTo(this.core, ct.CORE_ACTIVE_CONTAINER_CHANGED, this.containerChanged), this.core.activeContainer && this.containerChanged() } }, { key: "containerChanged", value: function () { this._container && this.stopListening(this._container), this._container = this.core.activeContainer, this.listenTo(this._container, ct.CONTAINER_PLAY, this.setPlayIcon), this.listenTo(this._container, ct.CONTAINER_PAUSE, this.setPauseIcon), this.listenTo(this._container, ct.CONTAINER_STOP, this.resetIcon), this.listenTo(this._container, ct.CONTAINER_ENDED, this.resetIcon), this.listenTo(this._container, ct.CONTAINER_ERROR, this.resetIcon), this.resetIcon() } }, { key: "disable", value: function () { ue(ae(r.prototype), "disable", this).call(this), this.resetIcon() } }, { key: "destroy", value: function () { ue(ae(r.prototype), "destroy", this).call(this), this.resetIcon() } }, { key: "createIcon", value: function (t) { var e = D("<canvas/>"); e[0].width = 16, e[0].height = 16; var r = e[0].getContext("2d"); r.fillStyle = "#000"; var n = D(t).find("path").attr("d"), i = new Path2D(n); r.fill(i); var a = D('<link rel="shortcut icon" type="image/png"/>'); return a.attr("href", e[0].toDataURL("image/png")), a } }, { key: "setPlayIcon", value: function () { this.playIcon || (this.playIcon = this.createIcon(ge)), this.changeIcon(this.playIcon) } }, { key: "setPauseIcon", value: function () { this.pauseIcon || (this.pauseIcon = this.createIcon(ve)), this.changeIcon(this.pauseIcon) } }, { key: "resetIcon", value: function () { D('link[rel="shortcut icon"]').remove(), D("head").append(this.oldIcon) } }, { key: "changeIcon", value: function (t) { t && (D('link[rel="shortcut icon"]').remove(), D("head").append(t)) } }]), r }(Vt), Ae = function (t) { ie(r, t); var e = le(r); function r(t) { var n; return ee(this, r), (n = e.call(this, t)).container.options.gaAccount && (n.account = n.container.options.gaAccount, n.trackerName = n.container.options.gaTrackerName ? n.container.options.gaTrackerName + "." : "Clappr.", n.domainName = n.container.options.gaDomainName, n.currentHDState = void 0, n.embedScript()), n } return ne(r, [{ key: "name", get: function () { return "google_analytics" } }, { key: "supportedVersion", get: function () { return { min: "0.4.20" } } }, { key: "embedScript", value: function () { var t = this; if (window._gat) this.addEventListeners(); else { var e = document.createElement("script"); e.setAttribute("type", "text/javascript"), e.setAttribute("async", "async"), e.setAttribute("src", "//www.google-analytics.com/ga.js"), e.onload = function () { return t.addEventListeners() }, document.body.appendChild(e) } } }, { key: "addEventListeners", value: function () { var t = this; this.container && (this.listenTo(this.container, ct.CONTAINER_READY, this.onReady), this.listenTo(this.container, ct.CONTAINER_PLAY, this.onPlay), this.listenTo(this.container, ct.CONTAINER_STOP, this.onStop), this.listenTo(this.container, ct.CONTAINER_PAUSE, this.onPause), this.listenTo(this.container, ct.CONTAINER_ENDED, this.onEnded), this.listenTo(this.container, ct.CONTAINER_STATE_BUFFERING, this.onBuffering), this.listenTo(this.container, ct.CONTAINER_STATE_BUFFERFULL, this.onBufferFull), this.listenTo(this.container, ct.CONTAINER_ERROR, this.onError), this.listenTo(this.container, ct.CONTAINER_PLAYBACKSTATE, this.onPlaybackChanged), this.listenTo(this.container, ct.CONTAINER_VOLUME, (function (e) { return t.onVolumeChanged(e) })), this.listenTo(this.container, ct.CONTAINER_SEEK, (function (e) { return t.onSeek(e) })), this.listenTo(this.container, ct.CONTAINER_FULL_SCREEN, this.onFullscreen), this.listenTo(this.container, ct.CONTAINER_HIGHDEFINITIONUPDATE, this.onHD), this.listenTo(this.container, ct.CONTAINER_PLAYBACKDVRSTATECHANGED, this.onDVR)), _gaq.push([this.trackerName + "_setAccount", this.account]), this.domainName && _gaq.push([this.trackerName + "_setDomainName", this.domainName]) } }, { key: "onReady", value: function () { this.push(["Video", "Playback", this.container.playback.name]) } }, { key: "onPlay", value: function () { this.push(["Video", "Play", this.container.playback.src]) } }, { key: "onStop", value: function () { this.push(["Video", "Stop", this.container.playback.src]) } }, { key: "onEnded", value: function () { this.push(["Video", "Ended", this.container.playback.src]) } }, { key: "onBuffering", value: function () { this.push(["Video", "Buffering", this.container.playback.src]) } }, { key: "onBufferFull", value: function () { this.push(["Video", "Bufferfull", this.container.playback.src]) } }, { key: "onError", value: function () { this.push(["Video", "Error", this.container.playback.src]) } }, { key: "onHD", value: function (t) { var e = t ? "ON" : "OFF"; e !== this.currentHDState && (this.currentHDState = e, this.push(["Video", "HD - " + e, this.container.playback.src])) } }, { key: "onPlaybackChanged", value: function (t) { null !== t.type && this.push(["Video", "Playback Type - " + t.type, this.container.playback.src]) } }, { key: "onDVR", value: function (t) { var e = t ? "ON" : "OFF"; this.push(["Interaction", "DVR - " + e, this.container.playback.src]) } }, { key: "onPause", value: function () { this.push(["Video", "Pause", this.container.playback.src]) } }, { key: "onSeek", value: function () { this.push(["Video", "Seek", this.container.playback.src]) } }, { key: "onVolumeChanged", value: function () { this.push(["Interaction", "Volume", this.container.playback.src]) } }, { key: "onFullscreen", value: function () { this.push(["Interaction", "Fullscreen", this.container.playback.src]) } }, { key: "push", value: function (t) { var e = [this.trackerName + "_trackEvent"].concat(t); _gaq.push(e) } }]), r }(Gt), Ee = function (t) { this.element = t || window.document, this.initialize() }; Ee.KEY_NAMES_BY_CODE = { 8: "backspace", 9: "tab", 13: "enter", 16: "shift", 17: "ctrl", 18: "alt", 20: "caps_lock", 27: "esc", 32: "space", 37: "left", 38: "up", 39: "right", 40: "down", 48: "0", 49: "1", 50: "2", 51: "3", 52: "4", 53: "5", 54: "6", 55: "7", 56: "8", 57: "9", 65: "a", 66: "b", 67: "c", 68: "d", 69: "e", 70: "f", 71: "g", 72: "h", 73: "i", 74: "j", 75: "k", 76: "l", 77: "m", 78: "n", 79: "o", 80: "p", 81: "q", 82: "r", 83: "s", 84: "t", 85: "u", 86: "v", 87: "w", 88: "x", 89: "y", 90: "z", 112: "f1", 113: "f2", 114: "f3", 115: "f4", 116: "f5", 117: "f6", 118: "f7", 119: "f8", 120: "f9", 121: "f10", 122: "f11", 123: "f12" }, Ee.KEY_CODES_BY_NAME = {}, function () { for (var t in Ee.KEY_NAMES_BY_CODE) Object.prototype.hasOwnProperty.call(Ee.KEY_NAMES_BY_CODE, t) && (Ee.KEY_CODES_BY_NAME[Ee.KEY_NAMES_BY_CODE[t]] = +t) }(), Ee.MODIFIERS = ["shift", "ctrl", "alt"], Ee.registerEvent = document.addEventListener ? function (t, e, r) { t.addEventListener(e, r, !1) } : document.attachEvent ? function (t, e, r) { t.attachEvent("on" + e, r) } : void 0, Ee.unregisterEvent = document.removeEventListener ? function (t, e, r) { t.removeEventListener(e, r, !1) } : document.detachEvent ? function (t, e, r) { t.detachEvent("on" + e, r) } : void 0, Ee.stringContains = function (t, e) { return -1 !== t.indexOf(e) }, Ee.neatString = function (t) { return t.replace(/^\s+|\s+$/g, "").replace(/\s+/g, " ") }, Ee.capitalize = function (t) { return t.toLowerCase().replace(/^./, (function (t) { return t.toUpperCase() })) }, Ee.isString = function (t) { return Ee.stringContains(Object.prototype.toString.call(t), "String") }, Ee.arrayIncludes = Array.prototype.indexOf ? function (t, e) { return -1 !== t.indexOf(e) } : function (t, e) { for (var r = 0; r < t.length; r++)if (t[r] === e) return !0; return !1 }, Ee.extractModifiers = function (t) { var e, r; for (e = [], r = 0; r < Ee.MODIFIERS.length; r++)Ee.stringContains(t, Ee.MODIFIERS[r]) && e.push(Ee.MODIFIERS[r]); return e }, Ee.extractKey = function (t) { var e, r; for (e = Ee.neatString(t).split(" "), r = 0; r < e.length; r++)if (!Ee.arrayIncludes(Ee.MODIFIERS, e[r])) return e[r] }, Ee.modifiersAndKey = function (t) { var e, r; return Ee.stringContains(t, "any") ? Ee.neatString(t).split(" ").slice(0, 2).join(" ") : (e = Ee.extractModifiers(t), (r = Ee.extractKey(t)) && !Ee.arrayIncludes(Ee.MODIFIERS, r) && e.push(r), e.join(" ")) }, Ee.keyName = function (t) { return Ee.KEY_NAMES_BY_CODE[t + ""] }, Ee.keyCode = function (t) { return +Ee.KEY_CODES_BY_NAME[t] }, Ee.prototype.initialize = function () { var t, e = this; for (this.lastKeyCode = -1, this.lastModifiers = {}, t = 0; t < Ee.MODIFIERS.length; t++)this.lastModifiers[Ee.MODIFIERS[t]] = !1; this.keysDown = { any: [] }, this.keysUp = { any: [] }, this.downHandler = this.handler("down"), this.upHandler = this.handler("up"), Ee.registerEvent(this.element, "keydown", this.downHandler), Ee.registerEvent(this.element, "keyup", this.upHandler), Ee.registerEvent(window, "unload", (function t() { Ee.unregisterEvent(e.element, "keydown", e.downHandler), Ee.unregisterEvent(e.element, "keyup", e.upHandler), Ee.unregisterEvent(window, "unload", t) })) }, Ee.prototype.handler = function (t) { var e = this; return function (r) { var n, i, a; for (r = r || window.event, e.lastKeyCode = r.keyCode, n = 0; n < Ee.MODIFIERS.length; n++)e.lastModifiers[Ee.MODIFIERS[n]] = r[Ee.MODIFIERS[n] + "Key"]; for (Ee.arrayIncludes(Ee.MODIFIERS, Ee.keyName(e.lastKeyCode)) && (e.lastModifiers[Ee.keyName(e.lastKeyCode)] = !0), i = e["keys" + Ee.capitalize(t)], n = 0; n < i.any.length; n++)!1 === i.any[n](r) && r.preventDefault && r.preventDefault(); if (i[a = e.lastModifiersAndKey()]) for (n = 0; n < i[a].length; n++)!1 === i[a][n](r) && r.preventDefault && r.preventDefault() } }, Ee.prototype.registerKeys = function (t, e, r) { var n, i, a = this["keys" + Ee.capitalize(t)]; for (Ee.isString(e) && (e = [e]), n = 0; n < e.length; n++)i = e[n], a[i = Ee.modifiersAndKey(i + "")] ? a[i].push(r) : a[i] = [r]; return this }, Ee.prototype.unregisterKeys = function (t, e, r) { var n, i, a, s = this["keys" + Ee.capitalize(t)]; for (Ee.isString(e) && (e = [e]), n = 0; n < e.length; n++)if (a = e[n], a = Ee.modifiersAndKey(a + ""), null === r) delete s[a]; else if (s[a]) for (i = 0; i < s[a].length; i++)if (String(s[a][i]) === String(r)) { s[a].splice(i, 1); break } return this }, Ee.prototype.off = function (t) { return this.unregisterKeys("down", t, null) }, Ee.prototype.delegate = function (t, e, r) { return null !== r || void 0 !== r ? this.registerKeys(t, e, r) : this.unregisterKeys(t, e, r) }, Ee.prototype.down = function (t, e) { return this.delegate("down", t, e) }, Ee.prototype.up = function (t, e) { return this.delegate("up", t, e) }, Ee.prototype.lastKey = function (t) { return t ? this.lastModifiers[t] : Ee.keyName(this.lastKeyCode) }, Ee.prototype.lastModifiersAndKey = function () { var t, e; for (t = [], e = 0; e < Ee.MODIFIERS.length; e++)this.lastKey(Ee.MODIFIERS[e]) && t.push(Ee.MODIFIERS[e]); return Ee.arrayIncludes(t, this.lastKey()) || t.push(this.lastKey()), t.join(" ") }; var Te = { Kibo: Ee }, be = '<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 16 16">\n  <path fill-rule="evenodd" clip-rule="evenodd" fill="#010101" d="M1.712 1.24h12.6v13.52h-12.6z"/>\n</svg>', ke = '<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 16 16">\n  <path fill-rule="evenodd" clip-rule="evenodd" fill="#010101" d="M11.5 11h-.002v1.502L7.798 10H4.5V6h3.297l3.7-2.502V4.5h.003V11zM11 4.49L7.953 6.5H5v3h2.953L11 11.51V4.49z"/>\n</svg>', Se = '<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 16 16">\n  <path fill="#010101" d="M7.156 8L4 11.156V8.5H3V13h4.5v-1H4.844L8 8.844 7.156 8zM8.5 3v1h2.657L8 7.157 8.846 8 12 4.844V7.5h1V3H8.5z"/>\n</svg>', _e = J.Config, Ce = J.Fullscreen, Le = J.formatTime, Re = J.extend, De = J.removeArrayItem, Ie = function (t) { ie(r, t); var e = le(r); function r(t) { var n; return ee(this, r), (n = e.call(this, t)).persistConfig = n.options.persistConfig, n.currentPositionValue = null, n.currentDurationValue = null, n.keepVisible = !1, n.fullScreenOnVideoTagSupported = null, n.setInitialVolume(), n.settings = { left: ["play", "stop", "pause"], right: ["volume"], default: ["position", "seekbar", "duration"] }, n.kibo = new Ee(n.options.focusElement), n.bindKeyEvents(), n.container ? D.isEmptyObject(n.container.settings) || (n.settings = D.extend({}, n.container.settings)) : n.settings = {}, n.userDisabled = !1, (n.container && n.container.mediaControlDisabled || n.options.chromeless) && n.disable(), n.stopDragHandler = function (t) { return n.stopDrag(t) }, n.updateDragHandler = function (t) { return n.updateDrag(t) }, D(document).bind("mouseup", n.stopDragHandler), D(document).bind("mousemove", n.updateDragHandler), n } return ne(r, [{ key: "name", get: function () { return "media_control" } }, { key: "supportedVersion", get: function () { return { min: "0.4.20" } } }, { key: "disabled", get: function () { var t = this.container && this.container.getPlaybackType() === Dt.NO_OP; return this.userDisabled || t } }, { key: "container", get: function () { return this.core && this.core.activeContainer } }, { key: "playback", get: function () { return this.core && this.core.activePlayback } }, { key: "attributes", get: function () { return { class: "media-control", "data-media-control": "" } } }, { key: "events", get: function () { return { "click [data-play]": "play", "click [data-pause]": "pause", "click [data-playpause]": "togglePlayPause", "click [data-stop]": "stop", "click [data-playstop]": "togglePlayStop", "click [data-fullscreen]": "toggleFullscreen", "click .bar-container[data-seekbar]": "seek", "click .bar-container[data-volume]": "onVolumeClick", "click .drawer-icon[data-volume]": "toggleMute", "mouseenter .drawer-container[data-volume]": "showVolumeBar", "mouseleave .drawer-container[data-volume]": "hideVolumeBar", "mousedown .bar-container[data-volume]": "startVolumeDrag", "mousemove .bar-container[data-volume]": "mousemoveOnVolumeBar", "mousedown .bar-scrubber[data-seekbar]": "startSeekDrag", "mousemove .bar-container[data-seekbar]": "mousemoveOnSeekBar", "mouseleave .bar-container[data-seekbar]": "mouseleaveOnSeekBar", "mouseenter .media-control-layer[data-controls]": "setUserKeepVisible", "mouseleave .media-control-layer[data-controls]": "resetUserKeepVisible" } } }, { key: "template", get: function () { return Tt('<div class="media-control-background" data-background></div>\n<div class="media-control-layer" data-controls>\n  <%  var renderBar = function(name) { %>\n      <div class="bar-container" data-<%= name %>>\n        <div class="bar-background" data-<%= name %>>\n          <div class="bar-fill-1" data-<%= name %>></div>\n          <div class="bar-fill-2" data-<%= name %>></div>\n          <div class="bar-hover" data-<%= name %>></div>\n        </div>\n        <div class="bar-scrubber" data-<%= name %>>\n          <div class="bar-scrubber-icon" data-<%= name %>></div>\n        </div>\n      </div>\n  <%  }; %>\n  <%  var renderSegmentedBar = function(name, segments) {\n      segments = segments || 10; %>\n    <div class="bar-container" data-<%= name %>>\n    <% for (var i = 0; i < segments; i++) { %>\n      <div class="segmented-bar-element" data-<%= name %>></div>\n    <% } %>\n    </div>\n  <% }; %>\n  <% var renderDrawer = function(name, renderContent) { %>\n      <div class="drawer-container" data-<%= name %>>\n        <div class="drawer-icon-container" data-<%= name %>>\n          <div class="drawer-icon media-control-icon" data-<%= name %>></div>\n          <span class="drawer-text" data-<%= name %>></span>\n        </div>\n        <% renderContent(name); %>\n      </div>\n  <% }; %>\n  <% var renderIndicator = function(name) { %>\n      <div class="media-control-indicator" data-<%= name %>></div>\n  <% }; %>\n  <% var renderButton = function(name) { %>\n    <button type="button" class="media-control-button media-control-icon" data-<%= name %> aria-label="<%= name %>"></button>\n  <% }; %>\n  <%  var templates = {\n        bar: renderBar,\n        segmentedBar: renderSegmentedBar,\n      };\n      var render = function(settingsList) {\n        settingsList.forEach(function(setting) {\n          if(setting === "seekbar") {\n            renderBar(setting);\n          } else if (setting === "volume") {\n            renderDrawer(setting, settings.volumeBarTemplate ? templates[settings.volumeBarTemplate] : function(name) { return renderSegmentedBar(name); });\n          } else if (setting === "duration" || setting === "position") {\n            renderIndicator(setting);\n          } else {\n            renderButton(setting);\n          }\n        });\n      }; %>\n  <% if (settings.default && settings.default.length) { %>\n  <div class="media-control-center-panel" data-media-control>\n    <% render(settings.default); %>\n  </div>\n  <% } %>\n  <% if (settings.left && settings.left.length) { %>\n  <div class="media-control-left-panel" data-media-control>\n    <% render(settings.left); %>\n  </div>\n  <% } %>\n  <% if (settings.right && settings.right.length) { %>\n  <div class="media-control-right-panel" data-media-control>\n    <% render(settings.right); %>\n  </div>\n  <% } %>\n</div>\n') } }, { key: "volume", get: function () { return this.container && this.container.isReady ? this.container.volume : this.intendedVolume } }, { key: "muted", get: function () { return 0 === this.volume } }, { key: "getExternalInterface", value: function () { var t = this; return { setVolume: this.setVolume, getVolume: function () { return t.volume } } } }, { key: "bindEvents", value: function () { var t = this; this.stopListening(), this.listenTo(this.core, ct.CORE_ACTIVE_CONTAINER_CHANGED, this.onActiveContainerChanged), this.listenTo(this.core, ct.CORE_MOUSE_MOVE, this.show), this.listenTo(this.core, ct.CORE_MOUSE_LEAVE, (function () { return t.hide(t.options.hideMediaControlDelay) })), this.listenTo(this.core, ct.CORE_FULLSCREEN, this.show), this.listenTo(this.core, ct.CORE_OPTIONS_CHANGE, this.configure), this.listenTo(this.core, ct.CORE_RESIZE, this.playerResize), this.bindContainerEvents() } }, { key: "bindContainerEvents", value: function () { this.container && (this.listenTo(this.container, ct.CONTAINER_PLAY, this.changeTogglePlay), this.listenTo(this.container, ct.CONTAINER_PAUSE, this.changeTogglePlay), this.listenTo(this.container, ct.CONTAINER_STOP, this.changeTogglePlay), this.listenTo(this.container, ct.CONTAINER_DBLCLICK, this.toggleFullscreen), this.listenTo(this.container, ct.CONTAINER_TIMEUPDATE, this.onTimeUpdate), this.listenTo(this.container, ct.CONTAINER_PROGRESS, this.updateProgressBar), this.listenTo(this.container, ct.CONTAINER_SETTINGSUPDATE, this.settingsUpdate), this.listenTo(this.container, ct.CONTAINER_PLAYBACKDVRSTATECHANGED, this.settingsUpdate), this.listenTo(this.container, ct.CONTAINER_HIGHDEFINITIONUPDATE, this.highDefinitionUpdate), this.listenTo(this.container, ct.CONTAINER_MEDIACONTROL_DISABLE, this.disable), this.listenTo(this.container, ct.CONTAINER_MEDIACONTROL_ENABLE, this.enable), this.listenTo(this.container, ct.CONTAINER_ENDED, this.ended), this.listenTo(this.container, ct.CONTAINER_VOLUME, this.onVolumeChanged), this.listenTo(this.container, ct.CONTAINER_OPTIONS_CHANGE, this.setInitialVolume), "video" === this.container.playback.el.nodeName.toLowerCase() && this.listenToOnce(this.container, ct.CONTAINER_LOADEDMETADATA, this.onLoadedMetadataOnVideoTag)) } }, { key: "disable", value: function () { this.userDisabled = !0, this.hide(), this.unbindKeyEvents(), this.$el.hide() } }, { key: "enable", value: function () { this.options.chromeless || (this.userDisabled = !1, this.bindKeyEvents(), this.show()) } }, { key: "play", value: function () { this.container && this.container.play() } }, { key: "pause", value: function () { this.container && this.container.pause() } }, { key: "stop", value: function () { this.container && this.container.stop() } }, { key: "setInitialVolume", value: function () { var t = this.persistConfig ? _e.restore("volume") : 100, e = this.container && this.container.options || this.options; this.setVolume(e.mute ? 0 : t, !0) } }, { key: "onVolumeChanged", value: function () { this.updateVolumeUI() } }, { key: "onLoadedMetadataOnVideoTag", value: function () { var t = this.playback && this.playback.el; !Ce.fullscreenEnabled() && t.webkitSupportsFullscreen && (this.fullScreenOnVideoTagSupported = !0, this.settingsUpdate()) } }, { key: "updateVolumeUI", value: function () { if (this.rendered) { this.$volumeBarContainer.find(".bar-fill-2").css({}); var t = this.$volumeBarContainer.width(), e = this.$volumeBarBackground.width(), r = (t - e) / 2, n = e * this.volume / 100 + r; this.$volumeBarFill.css({ width: "".concat(this.volume, "%") }), this.$volumeBarScrubber.css({ left: n }), this.$volumeBarContainer.find(".segmented-bar-element").removeClass("fill"); var i = Math.ceil(this.volume / 10); this.$volumeBarContainer.find(".segmented-bar-element").slice(0, i).addClass("fill"), this.$volumeIcon.html(""), this.$volumeIcon.removeClass("muted"), this.muted ? (this.$volumeIcon.append('<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 16 16">\n  <path fill-rule="evenodd" clip-rule="evenodd" fill="#010101" d="M9.75 11.51L6.7 9.5H3.75v-3H6.7L9.75 4.49v.664l.497.498V3.498L6.547 6H3.248v4h3.296l3.7 2.502v-2.154l-.497.5v.662zm3-5.165L12.404 6l-1.655 1.653L9.093 6l-.346.345L10.402 8 8.747 9.654l.346.347 1.655-1.653L12.403 10l.348-.346L11.097 8l1.655-1.655z"/>\n</svg>'), this.$volumeIcon.addClass("muted")) : this.$volumeIcon.append(ke), this.applyButtonStyle(this.$volumeIcon) } } }, { key: "changeTogglePlay", value: function () { this.$playPauseToggle.html(""), this.$playStopToggle.html(""), this.container && this.container.isPlaying() ? (this.$playPauseToggle.append(ve), this.$playStopToggle.append(be), this.trigger(ct.MEDIACONTROL_PLAYING)) : (this.$playPauseToggle.append(ge), this.$playStopToggle.append(ge), this.trigger(ct.MEDIACONTROL_NOTPLAYING), w.isMobile && this.show()), this.applyButtonStyle(this.$playPauseToggle), this.applyButtonStyle(this.$playStopToggle) } }, { key: "mousemoveOnSeekBar", value: function (t) { if (this.settings.seekEnabled) { var e = t.pageX - this.$seekBarContainer.offset().left - this.$seekBarHover.width() / 2; this.$seekBarHover.css({ left: e }) } this.trigger(ct.MEDIACONTROL_MOUSEMOVE_SEEKBAR, t) } }, { key: "mouseleaveOnSeekBar", value: function (t) { this.trigger(ct.MEDIACONTROL_MOUSELEAVE_SEEKBAR, t) } }, { key: "onVolumeClick", value: function (t) { this.setVolume(this.getVolumeFromUIEvent(t)) } }, { key: "mousemoveOnVolumeBar", value: function (t) { this.draggingVolumeBar && this.setVolume(this.getVolumeFromUIEvent(t)) } }, { key: "playerResize", value: function (t) { this.$fullscreenToggle.html(""); var e = this.core.isFullscreen() ? '<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 16 16">\n  <path fill="#010101" d="M13.5 3.344l-.844-.844L9.5 5.656V3h-1v4.5H13v-1h-2.656L13.5 3.344zM3 9.5h2.656L2.5 12.656l.844.844L6.5 10.344V13h1V8.5H3v1z"/>\n</svg>' : Se; this.$fullscreenToggle.append(e), this.applyButtonStyle(this.$fullscreenToggle), 0 !== this.$el.find(".media-control").length && this.$el.removeClass("w320"), (t.width <= 320 || this.options.hideVolumeBar) && this.$el.addClass("w320") } }, { key: "togglePlayPause", value: function () { return this.container.isPlaying() ? this.container.pause() : this.container.play(), !1 } }, { key: "togglePlayStop", value: function () { this.container.isPlaying() ? this.container.stop() : this.container.play() } }, { key: "startSeekDrag", value: function (t) { this.settings.seekEnabled && (this.draggingSeekBar = !0, this.$el.addClass("dragging"), this.$seekBarLoaded.addClass("media-control-notransition"), this.$seekBarPosition.addClass("media-control-notransition"), this.$seekBarScrubber.addClass("media-control-notransition"), t && t.preventDefault()) } }, { key: "startVolumeDrag", value: function (t) { this.draggingVolumeBar = !0, this.$el.addClass("dragging"), t && t.preventDefault() } }, { key: "stopDrag", value: function (t) { this.draggingSeekBar && this.seek(t), this.$el.removeClass("dragging"), this.$seekBarLoaded.removeClass("media-control-notransition"), this.$seekBarPosition.removeClass("media-control-notransition"), this.$seekBarScrubber.removeClass("media-control-notransition dragging"), this.draggingSeekBar = !1, this.draggingVolumeBar = !1 } }, { key: "updateDrag", value: function (t) { if (this.draggingSeekBar) { t.preventDefault(); var e = (t.pageX - this.$seekBarContainer.offset().left) / this.$seekBarContainer.width() * 100; e = Math.min(100, Math.max(e, 0)), this.setSeekPercentage(e) } else this.draggingVolumeBar && (t.preventDefault(), this.setVolume(this.getVolumeFromUIEvent(t))) } }, { key: "getVolumeFromUIEvent", value: function (t) { return (t.pageX - this.$volumeBarContainer.offset().left) / this.$volumeBarContainer.width() * 100 } }, { key: "toggleMute", value: function () { this.setVolume(this.muted ? 100 : 0) } }, { key: "setVolume", value: function (t) { var e = this, r = arguments.length > 1 && void 0 !== arguments[1] && arguments[1]; t = Math.min(100, Math.max(t, 0)), this.intendedVolume = t, this.persistConfig && !r && _e.persist("volume", t); var n = function () { e.container && e.container.isReady ? e.container.setVolume(t) : e.listenToOnce(e.container, ct.CONTAINER_READY, (function () { e.container.setVolume(t) })) }; this.container ? n() : this.listenToOnce(this, ct.MEDIACONTROL_CONTAINERCHANGED, (function () { return n() })) } }, { key: "toggleFullscreen", value: function () { this.trigger(ct.MEDIACONTROL_FULLSCREEN, this.name), this.container.fullscreen(), this.core.toggleFullscreen(), this.resetUserKeepVisible() } }, { key: "onActiveContainerChanged", value: function () { this.fullScreenOnVideoTagSupported = null, this.bindEvents(), this.setInitialVolume(), this.changeTogglePlay(), this.bindContainerEvents(), this.settingsUpdate(), this.container && this.container.trigger(ct.CONTAINER_PLAYBACKDVRSTATECHANGED, this.container.isDvrInUse()), this.container && this.container.mediaControlDisabled && this.disable(), this.trigger(ct.MEDIACONTROL_CONTAINERCHANGED) } }, { key: "showVolumeBar", value: function () { this.hideVolumeId && clearTimeout(this.hideVolumeId), this.$volumeBarContainer.removeClass("volume-bar-hide") } }, { key: "hideVolumeBar", value: function () { var t = this, e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : 400; this.$volumeBarContainer && (this.draggingVolumeBar ? this.hideVolumeId = setTimeout((function () { return t.hideVolumeBar() }), e) : (this.hideVolumeId && clearTimeout(this.hideVolumeId), this.hideVolumeId = setTimeout((function () { return t.$volumeBarContainer.addClass("volume-bar-hide") }), e))) } }, { key: "ended", value: function () { this.changeTogglePlay() } }, { key: "updateProgressBar", value: function (t) { var e = t.start / t.total * 100, r = t.current / t.total * 100; this.$seekBarLoaded.css({ left: "".concat(e, "%"), width: "".concat(r - e, "%") }) } }, { key: "onTimeUpdate", value: function (t) { if (!this.draggingSeekBar) { var e = t.current < 0 ? t.total : t.current; this.currentPositionValue = e, this.currentDurationValue = t.total, this.renderSeekBar() } } }, { key: "renderSeekBar", value: function () { if (null !== this.currentPositionValue && null !== this.currentDurationValue) { this.currentSeekBarPercentage = 100, this.container && (this.container.getPlaybackType() !== Dt.LIVE || this.container.isDvrInUse()) && (this.currentSeekBarPercentage = this.currentPositionValue / this.currentDurationValue * 100), this.setSeekPercentage(this.currentSeekBarPercentage); var t = Le(this.currentPositionValue), e = Le(this.currentDurationValue); t !== this.displayedPosition && (this.$position.text(t), this.displayedPosition = t), e !== this.displayedDuration && (this.$duration.text(e), this.displayedDuration = e) } } }, { key: "seek", value: function (t) { if (this.settings.seekEnabled) { var e = (t.pageX - this.$seekBarContainer.offset().left) / this.$seekBarContainer.width() * 100; return e = Math.min(100, Math.max(e, 0)), this.container && this.container.seekPercentage(e), this.setSeekPercentage(e), !1 } } }, { key: "setKeepVisible", value: function () { this.keepVisible = !0 } }, { key: "resetKeepVisible", value: function () { this.keepVisible = !1 } }, { key: "setUserKeepVisible", value: function () { this.userKeepVisible = !0 } }, { key: "resetUserKeepVisible", value: function () { this.userKeepVisible = !1 } }, { key: "isVisible", value: function () { return !this.$el.hasClass("media-control-hide") } }, { key: "show", value: function (t) { var e = this; if (!this.disabled) { var r = t && t.clientX !== this.lastMouseX && t.clientY !== this.lastMouseY; (!t || r || navigator.userAgent.match(/firefox/i)) && (clearTimeout(this.hideId), this.$el.show(), this.trigger(ct.MEDIACONTROL_SHOW, this.name), this.container && this.container.trigger(ct.CONTAINER_MEDIACONTROL_SHOW, this.name), this.$el.removeClass("media-control-hide"), this.hideId = setTimeout((function () { return e.hide() }), 2e3), t && (this.lastMouseX = t.clientX, this.lastMouseY = t.clientY)); this.updateCursorStyle(!0) } } }, { key: "hide", value: function () { var t = this, e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : 0; if (this.isVisible()) { var r = e || 2e3; if (clearTimeout(this.hideId), this.disabled || !1 !== this.options.hideMediaControl) { var n = this.userKeepVisible || this.keepVisible, i = this.draggingSeekBar || this.draggingVolumeBar; if (!this.disabled && (e || n || i)) this.hideId = setTimeout((function () { return t.hide() }), r); else { this.trigger(ct.MEDIACONTROL_HIDE, this.name), this.container && this.container.trigger(ct.CONTAINER_MEDIACONTROL_HIDE, this.name), this.$el.addClass("media-control-hide"), this.hideVolumeBar(0); var a = !1; this.updateCursorStyle(a) } } } } }, { key: "updateCursorStyle", value: function (t) { t ? this.core.$el.removeClass("nocursor") : this.core.isFullscreen() && this.core.$el.addClass("nocursor") } }, { key: "settingsUpdate", value: function () { var t = this.getSettings(); !t || this.fullScreenOnVideoTagSupported || Ce.fullscreenEnabled() || (t.default && De(t.default, "fullscreen"), t.left && De(t.left, "fullscreen"), t.right && De(t.right, "fullscreen")), JSON.stringify(this.settings) !== JSON.stringify(t) && (this.settings = t, this.render()) } }, { key: "getSettings", value: function () { return D.extend(!0, {}, this.container && this.container.settings) } }, { key: "highDefinitionUpdate", value: function (t) { this.isHD = t; var e = t ? "addClass" : "removeClass"; this.$hdIndicator[e]("enabled") } }, { key: "createCachedElements", value: function () { var t = this.$el.find(".media-control-layer"); this.$duration = t.find(".media-control-indicator[data-duration]"), this.$fullscreenToggle = t.find("button.media-control-button[data-fullscreen]"), this.$playPauseToggle = t.find("button.media-control-button[data-playpause]"), this.$playStopToggle = t.find("button.media-control-button[data-playstop]"), this.$position = t.find(".media-control-indicator[data-position]"), this.$seekBarContainer = t.find(".bar-container[data-seekbar]"), this.$seekBarHover = t.find(".bar-hover[data-seekbar]"), this.$seekBarLoaded = t.find(".bar-fill-1[data-seekbar]"), this.$seekBarPosition = t.find(".bar-fill-2[data-seekbar]"), this.$seekBarScrubber = t.find(".bar-scrubber[data-seekbar]"), this.$volumeBarContainer = t.find(".bar-container[data-volume]"), this.$volumeContainer = t.find(".drawer-container[data-volume]"), this.$volumeIcon = t.find(".drawer-icon[data-volume]"), this.$volumeBarBackground = this.$el.find(".bar-background[data-volume]"), this.$volumeBarFill = this.$el.find(".bar-fill-1[data-volume]"), this.$volumeBarScrubber = this.$el.find(".bar-scrubber[data-volume]"), this.$hdIndicator = this.$el.find("button.media-control-button[data-hd-indicator]"), this.resetIndicators(), this.initializeIcons() } }, { key: "resetIndicators", value: function () { this.displayedPosition = this.$position.text(), this.displayedDuration = this.$duration.text() } }, { key: "initializeIcons", value: function () { var t = this.$el.find(".media-control-layer"); t.find("button.media-control-button[data-play]").append(ge), t.find("button.media-control-button[data-pause]").append(ve), t.find("button.media-control-button[data-stop]").append(be), this.$playPauseToggle.append(ge), this.$playStopToggle.append(ge), this.$volumeIcon.append(ke), this.$fullscreenToggle.append(Se), this.$hdIndicator.append('<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 16 16">\n  <path fill="#010101" d="M5.375 7.062H2.637V4.26H.502v7.488h2.135V8.9h2.738v2.848h2.133V4.26H5.375v2.802zm5.97-2.81h-2.84v7.496h2.798c2.65 0 4.195-1.607 4.195-3.77v-.022c0-2.162-1.523-3.704-4.154-3.704zm2.06 3.758c0 1.21-.81 1.896-2.03 1.896h-.83V6.093h.83c1.22 0 2.03.696 2.03 1.896v.02z"/>\n</svg>') } }, { key: "setSeekPercentage", value: function (t) { t = Math.max(Math.min(t, 100), 0), this.displayedSeekBarPercentage !== t && (this.displayedSeekBarPercentage = t, this.$seekBarPosition.removeClass("media-control-notransition"), this.$seekBarScrubber.removeClass("media-control-notransition"), this.$seekBarPosition.css({ width: "".concat(t, "%") }), this.$seekBarScrubber.css({ left: "".concat(t, "%") })) } }, { key: "seekRelative", value: function (t) { if (this.settings.seekEnabled) { var e = this.container.getCurrentTime(), r = this.container.getDuration(), n = Math.min(Math.max(e + t, 0), r); n = Math.min(100 * n / r, 100), this.container.seekPercentage(n) } } }, { key: "bindKeyAndShow", value: function (t, e) { var r = this; this.kibo.down(t, (function () { return r.show(), e() })) } }, { key: "bindKeyEvents", value: function () { var t = this; if (!w.isMobile && !this.options.disableKeyboardShortcuts) { this.unbindKeyEvents(), this.kibo = new Ee(this.options.focusElement || this.options.parentElement), this.bindKeyAndShow("space", (function () { return t.togglePlayPause() })), this.bindKeyAndShow("left", (function () { return t.seekRelative(-5) })), this.bindKeyAndShow("right", (function () { return t.seekRelative(5) })), this.bindKeyAndShow("shift left", (function () { return t.seekRelative(-10) })), this.bindKeyAndShow("shift right", (function () { return t.seekRelative(10) })), this.bindKeyAndShow("shift ctrl left", (function () { return t.seekRelative(-15) })), this.bindKeyAndShow("shift ctrl right", (function () { return t.seekRelative(15) }));["1", "2", "3", "4", "5", "6", "7", "8", "9", "0"].forEach((function (e) { t.bindKeyAndShow(e, (function () { t.settings.seekEnabled && t.container && t.container.seekPercentage(10 * e) })) })) } } }, { key: "unbindKeyEvents", value: function () { this.kibo && (this.kibo.off("space"), this.kibo.off("left"), this.kibo.off("right"), this.kibo.off("shift left"), this.kibo.off("shift right"), this.kibo.off("shift ctrl left"), this.kibo.off("shift ctrl right"), this.kibo.off(["1", "2", "3", "4", "5", "6", "7", "8", "9", "0"])) } }, { key: "parseColors", value: function () { if (this.options.mediacontrol) { this.buttonsColor = this.options.mediacontrol.buttons; var t = this.options.mediacontrol.seekbar; this.$el.find(".bar-fill-2[data-seekbar]").css("background-color", t), this.$el.find(".media-control-icon svg path").css("fill", this.buttonsColor), this.$el.find(".segmented-bar-element[data-volume]").css("boxShadow", "inset 2px 0 0 " + this.buttonsColor) } } }, { key: "applyButtonStyle", value: function (t) { this.buttonsColor && t && D(t).find("svg path").css("fill", this.buttonsColor) } }, { key: "destroy", value: function () { D(document).unbind("mouseup", this.stopDragHandler), D(document).unbind("mousemove", this.updateDragHandler), this.unbindKeyEvents(), this.stopListening(), ue(ae(r.prototype), "destroy", this).call(this) } }, { key: "configure", value: function (t) { this.options.chromeless || t.source || t.sources ? this.disable() : this.enable(), this.trigger(ct.MEDIACONTROL_OPTIONS_CHANGE) } }, { key: "render", value: function () { var t = this, e = this.options.hideMediaControlDelay || 2e3; this.settings && this.$el.html(this.template({ settings: this.settings })); var r = bt.getStyleFor('.media-control-notransition {\n  transition: none !important; }\n\n.media-control[data-media-control] {\n  position: absolute;\n  width: 100%;\n  height: 100%;\n  z-index: 9999;\n  pointer-events: none; }\n  .media-control[data-media-control].dragging {\n    pointer-events: auto;\n    cursor: -webkit-grabbing !important;\n    cursor: grabbing !important;\n    cursor: url("closed-hand.cur"), move; }\n    .media-control[data-media-control].dragging * {\n      cursor: -webkit-grabbing !important;\n      cursor: grabbing !important;\n      cursor: url("closed-hand.cur"), move; }\n  .media-control[data-media-control] .media-control-background[data-background] {\n    position: absolute;\n    height: 40%;\n    width: 100%;\n    bottom: 0;\n    background: linear-gradient(transparent, rgba(0, 0, 0, 0.9));\n    will-change: transform, opacity;\n    transition: opacity 0.6s ease-out; }\n  .media-control[data-media-control] .media-control-icon {\n    line-height: 0;\n    letter-spacing: 0;\n    speak: none;\n    color: #fff;\n    opacity: 0.5;\n    vertical-align: middle;\n    text-align: left;\n    transition: all 0.1s ease; }\n  .media-control[data-media-control] .media-control-icon:hover {\n    color: white;\n    opacity: 0.75;\n    text-shadow: rgba(255, 255, 255, 0.8) 0 0 5px; }\n  .media-control[data-media-control].media-control-hide .media-control-background[data-background] {\n    opacity: 0; }\n  .media-control[data-media-control].media-control-hide .media-control-layer[data-controls] {\n    transform: translateY(50px); }\n    .media-control[data-media-control].media-control-hide .media-control-layer[data-controls] .bar-container[data-seekbar] .bar-scrubber[data-seekbar] {\n      opacity: 0; }\n  .media-control[data-media-control] .media-control-layer[data-controls] {\n    position: absolute;\n    transform: translateY(-7px);\n    bottom: 0;\n    width: 100%;\n    height: 32px;\n    font-size: 0;\n    vertical-align: middle;\n    pointer-events: auto;\n    transition: bottom 0.4s ease-out; }\n    .media-control[data-media-control] .media-control-layer[data-controls] .media-control-left-panel[data-media-control] {\n      position: absolute;\n      top: 0;\n      left: 4px;\n      height: 100%; }\n    .media-control[data-media-control] .media-control-layer[data-controls] .media-control-center-panel[data-media-control] {\n      height: 100%;\n      text-align: center;\n      line-height: 32px; }\n    .media-control[data-media-control] .media-control-layer[data-controls] .media-control-right-panel[data-media-control] {\n      position: absolute;\n      top: 0;\n      right: 4px;\n      height: 100%; }\n    .media-control[data-media-control] .media-control-layer[data-controls] button.media-control-button {\n      background-color: transparent;\n      border: 0;\n      margin: 0 6px;\n      padding: 0;\n      cursor: pointer;\n      display: inline-block;\n      width: 32px;\n      height: 100%; }\n      .media-control[data-media-control] .media-control-layer[data-controls] button.media-control-button svg {\n        width: 100%;\n        height: 22px; }\n        .media-control[data-media-control] .media-control-layer[data-controls] button.media-control-button svg path {\n          fill: white; }\n      .media-control[data-media-control] .media-control-layer[data-controls] button.media-control-button:focus {\n        outline: none; }\n      .media-control[data-media-control] .media-control-layer[data-controls] button.media-control-button[data-play] {\n        float: left;\n        height: 100%; }\n      .media-control[data-media-control] .media-control-layer[data-controls] button.media-control-button[data-pause] {\n        float: left;\n        height: 100%; }\n      .media-control[data-media-control] .media-control-layer[data-controls] button.media-control-button[data-stop] {\n        float: left;\n        height: 100%; }\n      .media-control[data-media-control] .media-control-layer[data-controls] button.media-control-button[data-fullscreen] {\n        float: right;\n        background-color: transparent;\n        border: 0;\n        height: 100%; }\n      .media-control[data-media-control] .media-control-layer[data-controls] button.media-control-button[data-hd-indicator] {\n        background-color: transparent;\n        border: 0;\n        cursor: default;\n        display: none;\n        float: right;\n        height: 100%; }\n        .media-control[data-media-control] .media-control-layer[data-controls] button.media-control-button[data-hd-indicator].enabled {\n          display: block;\n          opacity: 1.0; }\n          .media-control[data-media-control] .media-control-layer[data-controls] button.media-control-button[data-hd-indicator].enabled:hover {\n            opacity: 1.0;\n            text-shadow: none; }\n      .media-control[data-media-control] .media-control-layer[data-controls] button.media-control-button[data-playpause] {\n        float: left; }\n      .media-control[data-media-control] .media-control-layer[data-controls] button.media-control-button[data-playstop] {\n        float: left; }\n    .media-control[data-media-control] .media-control-layer[data-controls] .media-control-indicator[data-position], .media-control[data-media-control] .media-control-layer[data-controls] .media-control-indicator[data-duration] {\n      display: inline-block;\n      font-size: 10px;\n      color: white;\n      cursor: default;\n      line-height: 32px;\n      position: relative; }\n    .media-control[data-media-control] .media-control-layer[data-controls] .media-control-indicator[data-position] {\n      margin: 0 6px 0 7px; }\n    .media-control[data-media-control] .media-control-layer[data-controls] .media-control-indicator[data-duration] {\n      color: rgba(255, 255, 255, 0.5);\n      margin-right: 6px; }\n      .media-control[data-media-control] .media-control-layer[data-controls] .media-control-indicator[data-duration]:before {\n        content: "|";\n        margin-right: 7px; }\n    .media-control[data-media-control] .media-control-layer[data-controls] .bar-container[data-seekbar] {\n      position: absolute;\n      top: -20px;\n      left: 0;\n      display: inline-block;\n      vertical-align: middle;\n      width: 100%;\n      height: 25px;\n      cursor: pointer; }\n      .media-control[data-media-control] .media-control-layer[data-controls] .bar-container[data-seekbar] .bar-background[data-seekbar] {\n        width: 100%;\n        height: 1px;\n        position: relative;\n        top: 12px;\n        background-color: #666666; }\n        .media-control[data-media-control] .media-control-layer[data-controls] .bar-container[data-seekbar] .bar-background[data-seekbar] .bar-fill-1[data-seekbar] {\n          position: absolute;\n          top: 0;\n          left: 0;\n          width: 0;\n          height: 100%;\n          background-color: #c2c2c2;\n          transition: all 0.1s ease-out; }\n        .media-control[data-media-control] .media-control-layer[data-controls] .bar-container[data-seekbar] .bar-background[data-seekbar] .bar-fill-2[data-seekbar] {\n          position: absolute;\n          top: 0;\n          left: 0;\n          width: 0;\n          height: 100%;\n          background-color: #005aff;\n          transition: all 0.1s ease-out; }\n        .media-control[data-media-control] .media-control-layer[data-controls] .bar-container[data-seekbar] .bar-background[data-seekbar] .bar-hover[data-seekbar] {\n          opacity: 0;\n          position: absolute;\n          top: -3px;\n          width: 5px;\n          height: 7px;\n          background-color: rgba(255, 255, 255, 0.5);\n          transition: opacity 0.1s ease; }\n      .media-control[data-media-control] .media-control-layer[data-controls] .bar-container[data-seekbar]:hover .bar-background[data-seekbar] .bar-hover[data-seekbar] {\n        opacity: 1; }\n      .media-control[data-media-control] .media-control-layer[data-controls] .bar-container[data-seekbar].seek-disabled {\n        cursor: default; }\n        .media-control[data-media-control] .media-control-layer[data-controls] .bar-container[data-seekbar].seek-disabled:hover .bar-background[data-seekbar] .bar-hover[data-seekbar] {\n          opacity: 0; }\n      .media-control[data-media-control] .media-control-layer[data-controls] .bar-container[data-seekbar] .bar-scrubber[data-seekbar] {\n        position: absolute;\n        transform: translateX(-50%);\n        top: 2px;\n        left: 0;\n        width: 20px;\n        height: 20px;\n        opacity: 1;\n        transition: all 0.1s ease-out; }\n        .media-control[data-media-control] .media-control-layer[data-controls] .bar-container[data-seekbar] .bar-scrubber[data-seekbar] .bar-scrubber-icon[data-seekbar] {\n          position: absolute;\n          left: 6px;\n          top: 6px;\n          width: 8px;\n          height: 8px;\n          border-radius: 10px;\n          box-shadow: 0 0 0 6px rgba(255, 255, 255, 0.2);\n          background-color: white; }\n    .media-control[data-media-control] .media-control-layer[data-controls] .drawer-container[data-volume] {\n      float: right;\n      display: inline-block;\n      height: 32px;\n      cursor: pointer;\n      margin: 0 6px;\n      box-sizing: border-box; }\n      .media-control[data-media-control] .media-control-layer[data-controls] .drawer-container[data-volume] .drawer-icon-container[data-volume] {\n        float: left;\n        bottom: 0; }\n        .media-control[data-media-control] .media-control-layer[data-controls] .drawer-container[data-volume] .drawer-icon-container[data-volume] .drawer-icon[data-volume] {\n          background-color: transparent;\n          border: 0;\n          box-sizing: content-box;\n          width: 32px;\n          height: 32px;\n          opacity: 0.5; }\n          .media-control[data-media-control] .media-control-layer[data-controls] .drawer-container[data-volume] .drawer-icon-container[data-volume] .drawer-icon[data-volume]:hover {\n            opacity: 0.75; }\n          .media-control[data-media-control] .media-control-layer[data-controls] .drawer-container[data-volume] .drawer-icon-container[data-volume] .drawer-icon[data-volume] svg {\n            height: 24px;\n            position: relative;\n            top: 3px; }\n            .media-control[data-media-control] .media-control-layer[data-controls] .drawer-container[data-volume] .drawer-icon-container[data-volume] .drawer-icon[data-volume] svg path {\n              fill: white; }\n          .media-control[data-media-control] .media-control-layer[data-controls] .drawer-container[data-volume] .drawer-icon-container[data-volume] .drawer-icon[data-volume].muted svg {\n            margin-left: 2px; }\n      .media-control[data-media-control] .media-control-layer[data-controls] .drawer-container[data-volume] .bar-container[data-volume] {\n        float: left;\n        position: relative;\n        overflow: hidden;\n        top: 6px;\n        width: 42px;\n        height: 18px;\n        padding: 3px 0;\n        transition: width .2s ease-out; }\n        .media-control[data-media-control] .media-control-layer[data-controls] .drawer-container[data-volume] .bar-container[data-volume] .bar-background[data-volume] {\n          height: 1px;\n          position: relative;\n          top: 7px;\n          margin: 0 3px;\n          background-color: #666666; }\n          .media-control[data-media-control] .media-control-layer[data-controls] .drawer-container[data-volume] .bar-container[data-volume] .bar-background[data-volume] .bar-fill-1[data-volume] {\n            position: absolute;\n            top: 0;\n            left: 0;\n            width: 0;\n            height: 100%;\n            background-color: #c2c2c2;\n            transition: all 0.1s ease-out; }\n          .media-control[data-media-control] .media-control-layer[data-controls] .drawer-container[data-volume] .bar-container[data-volume] .bar-background[data-volume] .bar-fill-2[data-volume] {\n            position: absolute;\n            top: 0;\n            left: 0;\n            width: 0;\n            height: 100%;\n            background-color: #005aff;\n            transition: all 0.1s ease-out; }\n          .media-control[data-media-control] .media-control-layer[data-controls] .drawer-container[data-volume] .bar-container[data-volume] .bar-background[data-volume] .bar-hover[data-volume] {\n            opacity: 0;\n            position: absolute;\n            top: -3px;\n            width: 5px;\n            height: 7px;\n            background-color: rgba(255, 255, 255, 0.5);\n            transition: opacity 0.1s ease; }\n        .media-control[data-media-control] .media-control-layer[data-controls] .drawer-container[data-volume] .bar-container[data-volume] .bar-scrubber[data-volume] {\n          position: absolute;\n          transform: translateX(-50%);\n          top: 0px;\n          left: 0;\n          width: 20px;\n          height: 20px;\n          opacity: 1;\n          transition: all 0.1s ease-out; }\n          .media-control[data-media-control] .media-control-layer[data-controls] .drawer-container[data-volume] .bar-container[data-volume] .bar-scrubber[data-volume] .bar-scrubber-icon[data-volume] {\n            position: absolute;\n            left: 6px;\n            top: 6px;\n            width: 8px;\n            height: 8px;\n            border-radius: 10px;\n            box-shadow: 0 0 0 6px rgba(255, 255, 255, 0.2);\n            background-color: white; }\n        .media-control[data-media-control] .media-control-layer[data-controls] .drawer-container[data-volume] .bar-container[data-volume] .segmented-bar-element[data-volume] {\n          float: left;\n          width: 4px;\n          padding-left: 2px;\n          height: 12px;\n          opacity: 0.5;\n          box-shadow: inset 2px 0 0 white;\n          transition: transform .2s ease-out; }\n          .media-control[data-media-control] .media-control-layer[data-controls] .drawer-container[data-volume] .bar-container[data-volume] .segmented-bar-element[data-volume].fill {\n            box-shadow: inset 2px 0 0 #fff;\n            opacity: 1; }\n          .media-control[data-media-control] .media-control-layer[data-controls] .drawer-container[data-volume] .bar-container[data-volume] .segmented-bar-element[data-volume]:nth-of-type(1) {\n            padding-left: 0; }\n          .media-control[data-media-control] .media-control-layer[data-controls] .drawer-container[data-volume] .bar-container[data-volume] .segmented-bar-element[data-volume]:hover {\n            transform: scaleY(1.5); }\n  .media-control[data-media-control].w320 .media-control-layer[data-controls] .drawer-container[data-volume] .bar-container[data-volume].volume-bar-hide {\n    width: 0;\n    height: 12px;\n    top: 9px;\n    padding: 0; }\n', { baseUrl: this.options.baseUrl }); this.$el.append(r[0]), this.createCachedElements(), this.$playPauseToggle.addClass("paused"), this.$playStopToggle.addClass("stopped"), this.changeTogglePlay(), this.container && (this.hideId = setTimeout((function () { return t.hide() }), e), this.disabled && this.hide()), w.isSafari && w.isMobile && (w.version < 10 ? this.$volumeContainer.css("display", "none") : this.$volumeBarContainer.css("display", "none")), this.$seekBarPosition.addClass("media-control-notransition"), this.$seekBarScrubber.addClass("media-control-notransition"); var n = 0; return this.displayedSeekBarPercentage && (n = this.displayedSeekBarPercentage), this.displayedSeekBarPercentage = null, this.setSeekPercentage(n), setTimeout((function () { !t.settings.seekEnabled && t.$seekBarContainer.addClass("seek-disabled"), !w.isMobile && !t.options.disableKeyboardShortcuts && t.bindKeyEvents(), t.playerResize({ width: t.options.width, height: t.options.height }), t.hideVolumeBar(0) }), 0), this.parseColors(), this.highDefinitionUpdate(this.isHD), this.core.$el.append(this.el), this.rendered = !0, this.updateVolumeUI(), this.trigger(ct.MEDIACONTROL_RENDERED), this } }]), r }(Lt); Ie.extend = function (t) { return Re(Ie, t) }; for (var Oe = function (t) { ie(r, t); var e = le(r); function r(t) { var n; return ee(this, r), (n = e.call(this, t)).hasStartedPlaying = !1, n.playRequested = !1, n.render(), setTimeout((function () { return n.update() }), 0), n } return ne(r, [{ key: "name", get: function () { return "poster" } }, { key: "supportedVersion", get: function () { return { min: "0.4.20" } } }, { key: "template", get: function () { return Tt('<div class="play-wrapper" data-poster></div>\n') } }, { key: "shouldRender", get: function () { var t = !(!this.options.poster || !this.options.poster.showForNoOp); return "html_img" !== this.container.playback.name && (this.container.playback.getPlaybackType() !== Dt.NO_OP || t) } }, { key: "attributes", get: function () { return { class: "player-poster", "data-poster": "" } } }, { key: "events", get: function () { return { click: "clicked" } } }, { key: "showOnVideoEnd", get: function () { return !this.options.poster || this.options.poster.showOnVideoEnd || void 0 === this.options.poster.showOnVideoEnd } }, { key: "bindEvents", value: function () { this.listenTo(this.container, ct.CONTAINER_STOP, this.onStop), this.listenTo(this.container, ct.CONTAINER_PLAY, this.onPlay), this.listenTo(this.container, ct.CONTAINER_STATE_BUFFERING, this.update), this.listenTo(this.container, ct.CONTAINER_STATE_BUFFERFULL, this.update), this.listenTo(this.container, ct.CONTAINER_OPTIONS_CHANGE, this.render), this.listenTo(this.container, ct.CONTAINER_ERROR, this.onError), this.showOnVideoEnd && this.listenTo(this.container, ct.CONTAINER_ENDED, this.onStop) } }, { key: "onError", value: function (t) { this.hasFatalError = t.level === _t.Levels.FATAL, this.hasFatalError && (this.hasStartedPlaying = !1, this.playRequested = !1, this.showPlayButton()) } }, { key: "onPlay", value: function () { this.hasStartedPlaying = !0, this.update() } }, { key: "onStop", value: function () { this.hasStartedPlaying = !1, this.playRequested = !1, this.update() } }, { key: "updatePlayButton", value: function (t) { !t || this.options.chromeless && !this.options.allowUserInteraction ? this.hidePlayButton() : this.showPlayButton() } }, { key: "showPlayButton", value: function () { this.hasFatalError && !this.options.disableErrorScreen || (this.$playButton.show(), this.$el.addClass("clickable")) } }, { key: "hidePlayButton", value: function () { this.$playButton.hide(), this.$el.removeClass("clickable") } }, { key: "clicked", value: function () { if (!this.hasStartedPlaying) return this.options.chromeless && !this.options.allowUserInteraction || (this.playRequested = !0, this.update(), this.container.playback && (this.container.playback._consented = !0), this.container.play()), !1 } }, { key: "shouldHideOnPlay", value: function () { return !this.container.playback.isAudioOnly } }, { key: "update", value: function () { if (this.shouldRender) { var t = !this.playRequested && !this.hasStartedPlaying && !this.container.buffering; this.updatePlayButton(t), this.updatePoster() } } }, { key: "updatePoster", value: function () { this.hasStartedPlaying ? this.hidePoster() : this.showPoster() } }, { key: "showPoster", value: function () { this.container.disableMediaControl(), this.$el.show() } }, { key: "hidePoster", value: function () { this.container.enableMediaControl(), this.shouldHideOnPlay() && this.$el.hide() } }, { key: "render", value: function () { if (this.shouldRender) { var t = bt.getStyleFor(".player-poster[data-poster] {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  position: absolute;\n  height: 100%;\n  width: 100%;\n  z-index: 998;\n  top: 0;\n  left: 0;\n  background-color: transparent;\n  background-size: cover;\n  background-repeat: no-repeat;\n  background-position: 50% 50%; }\n  .player-poster[data-poster].clickable {\n    cursor: pointer; }\n  .player-poster[data-poster]:hover .play-wrapper[data-poster] {\n    opacity: 1; }\n  .player-poster[data-poster] .play-wrapper[data-poster] {\n    width: 100%;\n    height: 25%;\n    margin: 0 auto;\n    opacity: 0.75;\n    transition: opacity 0.1s ease; }\n    .player-poster[data-poster] .play-wrapper[data-poster] svg {\n      height: 100%; }\n      .player-poster[data-poster] .play-wrapper[data-poster] svg path {\n        fill: #fff; }\n", { baseUrl: this.options.baseUrl }); if (this.$el.html(this.template()), this.$el.append(t[0]), this.options.poster && void 0 === this.options.poster.custom) { var e = this.options.poster.url || this.options.poster; this.$el.css({ "background-image": "url(" + e + ")" }), this.removeVideoElementPoster() } else this.options.poster && (this.$el.css({ background: this.options.poster.custom }), this.removeVideoElementPoster()); this.container.$el.append(this.el), this.$playWrapper = this.$el.find(".play-wrapper"), this.$playWrapper.append(ge), this.$playButton = this.$playWrapper.find("svg"), this.$playButton.addClass("poster-icon"), this.$playButton.attr("data-poster", ""); var r = this.options.mediacontrol && this.options.mediacontrol.buttons; return r && this.$el.find("svg path").css("fill", r), this.options.mediacontrol && this.options.mediacontrol.buttons && (r = this.options.mediacontrol.buttons, this.$playButton.css("color", r)), this.update(), this } } }, { key: "removeVideoElementPoster", value: function () { this.container.playback && this.container.playback.$el && this.container.playback.$el[0] && this.container.playback.$el[0].removeAttribute && this.container.playback.$el[0].removeAttribute("poster") } }]), r }(Kt), we = J.formatTime, Pe = function (t) { ie(r, t); var e = le(r); function r(t) { var n; return ee(this, r), (n = e.call(this, t)).hoveringOverSeekBar = !1, n.hoverPosition = null, n.duration = null, n.firstFragDateTime = null, n.actualLiveTime = !!n.mediaControl.options.actualLiveTime, n.actualLiveTime && (n.mediaControl.options.actualLiveServerTime ? n.actualLiveServerTimeDiff = (new Date).getTime() - new Date(n.mediaControl.options.actualLiveServerTime).getTime() : n.actualLiveServerTimeDiff = 0), n } return ne(r, [{ key: "name", get: function () { return "seek_time" } }, { key: "supportedVersion", get: function () { return { min: "0.4.20" } } }, { key: "template", get: function () { return Tt("<span data-seek-time></span>\n<span data-duration></span>\n") } }, { key: "attributes", get: function () { return { class: "seek-time", "data-seek-time": "" } } }, { key: "mediaControl", get: function () { return this.core.mediaControl } }, { key: "mediaControlContainer", get: function () { return this.mediaControl.container } }, { key: "isLiveStreamWithDvr", get: function () { return this.mediaControlContainer && this.mediaControlContainer.getPlaybackType() === Dt.LIVE && this.mediaControlContainer.isDvrEnabled() } }, { key: "durationShown", get: function () { return this.isLiveStreamWithDvr && !this.actualLiveTime } }, { key: "useActualLiveTime", get: function () { return this.actualLiveTime && this.isLiveStreamWithDvr } }, { key: "bindEvents", value: function () { this.listenTo(this.mediaControl, ct.MEDIACONTROL_RENDERED, this.render), this.listenTo(this.mediaControl, ct.MEDIACONTROL_MOUSEMOVE_SEEKBAR, this.showTime), this.listenTo(this.mediaControl, ct.MEDIACONTROL_MOUSELEAVE_SEEKBAR, this.hideTime), this.listenTo(this.mediaControl, ct.MEDIACONTROL_CONTAINERCHANGED, this.onContainerChanged), this.mediaControlContainer && (this.listenTo(this.mediaControlContainer, ct.CONTAINER_PLAYBACKDVRSTATECHANGED, this.update), this.listenTo(this.mediaControlContainer, ct.CONTAINER_TIMEUPDATE, this.updateDuration)) } }, { key: "onContainerChanged", value: function () { this.stopListening(), this.bindEvents() } }, { key: "updateDuration", value: function (t) { this.duration = t.total, this.firstFragDateTime = t.firstFragDateTime, this.update() } }, { key: "showTime", value: function (t) { this.hoveringOverSeekBar = !0, this.calculateHoverPosition(t), this.update() } }, { key: "hideTime", value: function () { this.hoveringOverSeekBar = !1, this.update() } }, { key: "calculateHoverPosition", value: function (t) { var e = t.pageX - this.mediaControl.$seekBarContainer.offset().left; this.hoverPosition = Math.min(1, Math.max(e / this.mediaControl.$seekBarContainer.width(), 0)) } }, { key: "getSeekTime", value: function () { var t, e, r, n; return this.useActualLiveTime ? (this.firstFragDateTime ? (n = new Date(this.firstFragDateTime), (r = new Date(this.firstFragDateTime)).setHours(0, 0, 0, 0), e = (n.getTime() - r.getTime()) / 1e3 + this.duration) : (r = new Date((new Date).getTime() - this.actualLiveServerTimeDiff), e = ((n = new Date(r)) - r.setHours(0, 0, 0, 0)) / 1e3), (t = e - this.duration + this.hoverPosition * this.duration) < 0 && (t += 86400)) : t = this.hoverPosition * this.duration, { seekTime: t, secondsSinceMidnight: e } } }, { key: "update", value: function () { if (this.rendered) if (this.shouldBeVisible()) { var t = this.getSeekTime(), e = we(t.seekTime, this.useActualLiveTime); if (e !== this.displayedSeekTime && (this.$seekTimeEl.text(e), this.displayedSeekTime = e), this.durationShown) { this.$durationEl.show(); var r = we(this.actualLiveTime ? t.secondsSinceMidnight : this.duration, this.actualLiveTime); r !== this.displayedDuration && (this.$durationEl.text(r), this.displayedDuration = r) } else this.$durationEl.hide(); this.$el.show(); var n = this.mediaControl.$seekBarContainer.width(), i = this.$el.width(), a = this.hoverPosition * n; a -= i / 2, a = Math.max(0, Math.min(a, n - i)), this.$el.css("left", a) } else this.$el.hide(), this.$el.css("left", "-100%") } }, { key: "shouldBeVisible", value: function () { return this.mediaControlContainer && this.mediaControlContainer.settings.seekEnabled && this.hoveringOverSeekBar && null !== this.hoverPosition && null !== this.duration } }, { key: "render", value: function () { var t = bt.getStyleFor('.seek-time[data-seek-time] {\n  position: absolute;\n  white-space: nowrap;\n  height: 20px;\n  line-height: 20px;\n  font-size: 0;\n  left: -100%;\n  bottom: 55px;\n  background-color: rgba(2, 2, 2, 0.5);\n  z-index: 9999;\n  transition: opacity 0.1s ease; }\n  .seek-time[data-seek-time].hidden[data-seek-time] {\n    opacity: 0; }\n  .seek-time[data-seek-time] [data-seek-time] {\n    display: inline-block;\n    color: white;\n    font-size: 10px;\n    padding-left: 7px;\n    padding-right: 7px;\n    vertical-align: top; }\n  .seek-time[data-seek-time] [data-duration] {\n    display: inline-block;\n    color: rgba(255, 255, 255, 0.5);\n    font-size: 10px;\n    padding-right: 7px;\n    vertical-align: top; }\n    .seek-time[data-seek-time] [data-duration]:before {\n      content: "|";\n      margin-right: 7px; }\n', { baseUrl: this.options.baseUrl }); this.rendered = !0, this.displayedDuration = null, this.displayedSeekTime = null, this.$el.html(this.template()), this.$el.append(t[0]), this.$el.hide(), this.mediaControl.$el.append(this.el), this.$seekTimeEl = this.$el.find("[data-seek-time]"), this.$durationEl = this.$el.find("[data-duration]"), this.$durationEl.hide(), this.update() } }]), r }(Lt), xe = { ClickToPause: ce, ClosedCaptions: de, DVRControls: he, EndVideo: fe, ErrorScreen: pe, Favicon: ye, GoogleAnalytics: Ae, MediaControl: Ie, Poster: Oe, SeekTime: Pe, SpinnerThreeBounce: function (t) { ie(r, t); var e = le(r); function r(t) { var n; return ee(this, r), (n = e.call(this, t)).template = Tt("<div data-bounce1></div><div data-bounce2></div><div data-bounce3></div>\n"), n.showTimeout = null, n.listenTo(n.container, ct.CONTAINER_STATE_BUFFERING, n.onBuffering), n.listenTo(n.container, ct.CONTAINER_STATE_BUFFERFULL, n.onBufferFull), n.listenTo(n.container, ct.CONTAINER_STOP, n.onStop), n.listenTo(n.container, ct.CONTAINER_ENDED, n.onStop), n.listenTo(n.container, ct.CONTAINER_ERROR, n.onStop), n.render(), n } return ne(r, [{ key: "name", get: function () { return "spinner" } }, { key: "supportedVersion", get: function () { return { min: "0.4.20" } } }, { key: "attributes", get: function () { return { "data-spinner": "", class: "spinner-three-bounce" } } }, { key: "onBuffering", value: function () { this.show() } }, { key: "onBufferFull", value: function () { this.hide() } }, { key: "onStop", value: function () { this.hide() } }, { key: "show", value: function () { var t = this; null === this.showTimeout && (this.showTimeout = setTimeout((function () { return t.$el.show() }), 300)) } }, { key: "hide", value: function () { null !== this.showTimeout && (clearTimeout(this.showTimeout), this.showTimeout = null), this.$el.hide() } }, { key: "render", value: function () { var t = bt.getStyleFor(".spinner-three-bounce[data-spinner] {\n  position: absolute;\n  margin: 0 auto;\n  width: 70px;\n  text-align: center;\n  z-index: 999;\n  left: 0;\n  right: 0;\n  margin-left: auto;\n  margin-right: auto;\n  /* center vertically */\n  top: 50%;\n  transform: translateY(-50%); }\n  .spinner-three-bounce[data-spinner] > div {\n    width: 18px;\n    height: 18px;\n    background-color: #FFFFFF;\n    border-radius: 100%;\n    display: inline-block;\n    -webkit-animation: bouncedelay 1.4s infinite ease-in-out;\n            animation: bouncedelay 1.4s infinite ease-in-out;\n    /* Prevent first frame from flickering when animation starts */\n    -webkit-animation-fill-mode: both;\n            animation-fill-mode: both; }\n  .spinner-three-bounce[data-spinner] [data-bounce1] {\n    -webkit-animation-delay: -0.32s;\n            animation-delay: -0.32s; }\n  .spinner-three-bounce[data-spinner] [data-bounce2] {\n    -webkit-animation-delay: -0.16s;\n            animation-delay: -0.16s; }\n\n@-webkit-keyframes bouncedelay {\n  0%, 80%, 100% {\n    transform: scale(0); }\n  40% {\n    transform: scale(1); } }\n\n@keyframes bouncedelay {\n  0%, 80%, 100% {\n    transform: scale(0); }\n  40% {\n    transform: scale(1); } }\n", { baseUrl: this.options.baseUrl }); return this.$el.html(this.template()), this.$el.append(t[0]), this.container.$el.append(this.$el), this.$el.hide(), this.container.buffering && this.onBuffering(), this } }]), r }(Kt), Stats: function (t) { ie(r, t); var e = le(r); function r(t) { var n; return ee(this, r), (n = e.call(this, t)).setInitialAttrs(), n.reportInterval = n.options.reportInterval || 5e3, n.state = "IDLE", n } return ne(r, [{ key: "name", get: function () { return "stats" } }, { key: "supportedVersion", get: function () { return { min: "0.4.20" } } }, { key: "bindEvents", value: function () { this.listenTo(this.container.playback, ct.PLAYBACK_PLAY, this.onPlay), this.listenTo(this.container, ct.CONTAINER_STOP, this.onStop), this.listenTo(this.container, ct.CONTAINER_ENDED, this.onStop), this.listenTo(this.container, ct.CONTAINER_DESTROYED, this.onStop), this.listenTo(this.container, ct.CONTAINER_STATE_BUFFERING, this.onBuffering), this.listenTo(this.container, ct.CONTAINER_STATE_BUFFERFULL, this.onBufferFull), this.listenTo(this.container, ct.CONTAINER_STATS_ADD, this.onStatsAdd), this.listenTo(this.container, ct.CONTAINER_BITRATE, this.onStatsAdd), this.listenTo(this.container.playback, ct.PLAYBACK_STATS_ADD, this.onStatsAdd) } }, { key: "setInitialAttrs", value: function () { this.firstPlay = !0, this.startupTime = 0, this.rebufferingTime = 0, this.watchingTime = 0, this.rebuffers = 0, this.externalMetrics = {} } }, { key: "onPlay", value: function () { this.state = "PLAYING", this.watchingTimeInit = Date.now(), this.intervalId || (this.intervalId = setInterval(this.report.bind(this), this.reportInterval)) } }, { key: "onStop", value: function () { clearInterval(this.intervalId), this.report(), this.intervalId = void 0, this.state = "STOPPED" } }, { key: "onBuffering", value: function () { this.firstPlay ? this.startupTimeInit = Date.now() : this.rebufferingTimeInit = Date.now(), this.state = "BUFFERING", this.rebuffers++ } }, { key: "onBufferFull", value: function () { this.firstPlay && this.startupTimeInit ? (this.firstPlay = !1, this.startupTime = Date.now() - this.startupTimeInit, this.watchingTimeInit = Date.now()) : this.rebufferingTimeInit && (this.rebufferingTime += this.getRebufferingTime()), this.rebufferingTimeInit = void 0, this.state = "PLAYING" } }, { key: "getRebufferingTime", value: function () { return Date.now() - this.rebufferingTimeInit } }, { key: "getWatchingTime", value: function () { return Date.now() - this.watchingTimeInit - this.rebufferingTime } }, { key: "isRebuffering", value: function () { return !!this.rebufferingTimeInit } }, { key: "onStatsAdd", value: function (t) { D.extend(this.externalMetrics, t) } }, { key: "getStats", value: function () { var t = { startupTime: this.startupTime, rebuffers: this.rebuffers, rebufferingTime: this.isRebuffering() ? this.rebufferingTime + this.getRebufferingTime() : this.rebufferingTime, watchingTime: this.isRebuffering() ? this.getWatchingTime() - this.getRebufferingTime() : this.getWatchingTime() }; return D.extend(t, this.externalMetrics), t } }, { key: "report", value: function () { this.container.statsReport(this.getStats()) } }]), r }(Gt), WaterMark: function (t) { ie(r, t); var e = le(r); function r(t) { var n; return ee(this, r), (n = e.call(this, t)).configure(), n } return ne(r, [{ key: "name", get: function () { return "watermark" } }, { key: "supportedVersion", get: function () { return { min: "0.4.20" } } }, { key: "template", get: function () { return Tt('<div class="clappr-watermark" data-watermark data-watermark-<%=position %>>\n<% if(typeof imageLink !== \'undefined\') { %>\n<a target="_blank" href="<%= imageLink %>">\n<% } %>\n<img src="<%= imageUrl %>">\n<% if(typeof imageLink !== \'undefined\') { %>\n</a>\n<% } %>\n</div>\n') } }, { key: "bindEvents", value: function () { this.listenTo(this.container, ct.CONTAINER_PLAY, this.onPlay), this.listenTo(this.container, ct.CONTAINER_STOP, this.onStop), this.listenTo(this.container, ct.CONTAINER_OPTIONS_CHANGE, this.configure) } }, { key: "configure", value: function () { this.position = this.options.position || "bottom-right", this.options.watermark ? (this.imageUrl = this.options.watermark, this.imageLink = this.options.watermarkLink, this.render()) : this.$el.remove() } }, { key: "onPlay", value: function () { this.hidden || this.$el.show() } }, { key: "onStop", value: function () { this.$el.hide() } }, { key: "render", value: function () { this.$el.hide(); var t = bt.getStyleFor(".clappr-watermark[data-watermark] {\n  position: absolute;\n  min-width: 70px;\n  max-width: 200px;\n  width: 12%;\n  text-align: center;\n  z-index: 10; }\n\n.clappr-watermark[data-watermark] a {\n  outline: none;\n  cursor: pointer; }\n\n.clappr-watermark[data-watermark] img {\n  max-width: 100%; }\n\n.clappr-watermark[data-watermark-bottom-left] {\n  bottom: 10px;\n  left: 10px; }\n\n.clappr-watermark[data-watermark-bottom-right] {\n  bottom: 10px;\n  right: 42px; }\n\n.clappr-watermark[data-watermark-top-left] {\n  top: 10px;\n  left: 10px; }\n\n.clappr-watermark[data-watermark-top-right] {\n  top: 10px;\n  right: 37px; }\n", { baseUrl: this.options.baseUrl }), e = { position: this.position, imageUrl: this.imageUrl, imageLink: this.imageLink }; return this.$el.html(this.template(e)), this.$el.append(t[0]), this.container.$el.append(this.$el), this } }]), r }(Kt) }, Ne = 0, Me = Object.values(xe); Ne < Me.length; Ne++) { var Fe = Me[Ne]; Bt.registerPlugin(Fe) } var Be = xe.ClickToPause, Ue = xe.ClosedCaptions, je = xe.DVRControls, Ge = xe.EndVideo, Ve = xe.ErrorScreen, Ke = xe.Favicon, He = xe.GoogleAnalytics, Ye = xe.MediaControl, We = xe.Poster, $e = xe.SeekTime, ze = xe.SpinnerThreeBounce, qe = xe.Stats, Xe = xe.WaterMark, Ze = e(e({}, te), {}, { ClickToPause: Be, ClosedCaptions: Ue, DVRControls: je, EndVideo: Ge, ErrorScreen: Ve, Favicon: Ke, GoogleAnalytics: He, MediaControl: Ye, Poster: We, SeekTime: $e, SpinnerThreeBounce: ze, Stats: qe, WaterMark: Xe, Vendor: Te, Plugins: xe, version: "0.4.2-cdnvideo" }); function Qe(t, e) { if (!(t instanceof e)) throw new TypeError("Cannot call a class as a function") } function Je(t, e) { for (var r = 0; r < e.length; r++) { var n = e[r]; n.enumerable = n.enumerable || !1, n.configurable = !0, "value" in n && (n.writable = !0), Object.defineProperty(t, n.key, n) } } function tr(t, e, r) { return e in t ? Object.defineProperty(t, e, { value: r, enumerable: !0, configurable: !0, writable: !0 }) : t[e] = r, t } function er(t, e) { var r = Object.keys(t); if (Object.getOwnPropertySymbols) { var n = Object.getOwnPropertySymbols(t); e && (n = n.filter((function (e) { return Object.getOwnPropertyDescriptor(t, e).enumerable }))), r.push.apply(r, n) } return r } function rr(t) { for (var e = 1; e < arguments.length; e++) { var r = null != arguments[e] ? arguments[e] : {}; e % 2 ? er(Object(r), !0).forEach((function (e) { tr(t, e, r[e]) })) : Object.getOwnPropertyDescriptors ? Object.defineProperties(t, Object.getOwnPropertyDescriptors(r)) : er(Object(r)).forEach((function (e) { Object.defineProperty(t, e, Object.getOwnPropertyDescriptor(r, e)) })) } return t } function nr(t) { return nr = Object.setPrototypeOf ? Object.getPrototypeOf : function (t) { return t.__proto__ || Object.getPrototypeOf(t) }, nr(t) } function ir(t, e) { return ir = Object.setPrototypeOf || function (t, e) { return t.__proto__ = e, t }, ir(t, e) } function ar(t, e) { return !e || "object" != typeof e && "function" != typeof e ? function (t) { if (void 0 === t) throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); return t }(t) : e } function sr(t) { var e = function () { if ("undefined" == typeof Reflect || !Reflect.construct) return !1; if (Reflect.construct.sham) return !1; if ("function" == typeof Proxy) return !0; try { return Date.prototype.toString.call(Reflect.construct(Date, [], (function () { }))), !0 } catch (t) { return !1 } }(); return function () { var r, n = nr(t); if (e) { var i = nr(this).constructor; r = Reflect.construct(n, arguments, i) } else r = n.apply(this, arguments); return ar(this, r) } } function or(t, e, r) { return or = "undefined" != typeof Reflect && Reflect.get ? Reflect.get : function (t, e, r) { var n = function (t, e) { for (; !Object.prototype.hasOwnProperty.call(t, e) && null !== (t = nr(t));); return t }(t, e); if (n) { var i = Object.getOwnPropertyDescriptor(n, e); return i.get ? i.get.call(r) : i.value } }, or(t, e, r || t) } function lr(t) { return function (t) { if (Array.isArray(t)) return ur(t) }(t) || function (t) { if ("undefined" != typeof Symbol && Symbol.iterator in Object(t)) return Array.from(t) }(t) || function (t, e) { if (!t) return; if ("string" == typeof t) return ur(t, e); var r = Object.prototype.toString.call(t).slice(8, -1); "Object" === r && t.constructor && (r = t.constructor.name); if ("Map" === r || "Set" === r) return Array.from(t); if ("Arguments" === r || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)) return ur(t, e) }(t) || function () { throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.") }() } function ur(t, e) { (null == e || e > t.length) && (e = t.length); for (var r = 0, n = new Array(e); r < e; r++)n[r] = t[r]; return n } "undefined" != typeof globalThis ? globalThis : "undefined" != typeof window ? window : "undefined" != typeof global ? global : "undefined" != typeof self && self; function cr(t) { return t && t.__esModule && Object.prototype.hasOwnProperty.call(t, "default") ? t.default : t } var dr, hr, fr, pr = (dr = function (t, e) {
        var r; "undefined" != typeof window && (r = function () {
            return function (t) { var e = {}; function r(n) { if (e[n]) return e[n].exports; var i = e[n] = { i: n, l: !1, exports: {} }; return t[n].call(i.exports, i, i.exports, r), i.l = !0, i.exports } return r.m = t, r.c = e, r.d = function (t, e, n) { r.o(t, e) || Object.defineProperty(t, e, { enumerable: !0, get: n }) }, r.r = function (t) { "undefined" != typeof Symbol && Symbol.toStringTag && Object.defineProperty(t, Symbol.toStringTag, { value: "Module" }), Object.defineProperty(t, "__esModule", { value: !0 }) }, r.t = function (t, e) { if (1 & e && (t = r(t)), 8 & e) return t; if (4 & e && "object" == typeof t && t && t.__esModule) return t; var n = Object.create(null); if (r.r(n), Object.defineProperty(n, "default", { enumerable: !0, value: t }), 2 & e && "string" != typeof t) for (var i in t) r.d(n, i, function (e) { return t[e] }.bind(null, i)); return n }, r.n = function (t) { var e = t && t.__esModule ? function () { return t.default } : function () { return t }; return r.d(e, "a", e), e }, r.o = function (t, e) { return Object.prototype.hasOwnProperty.call(t, e) }, r.p = "/dist/", r(r.s = "./src/hls.ts") }({
                "./node_modules/eventemitter3/index.js":
/*!*********************************************!*\
    !*** ./node_modules/eventemitter3/index.js ***!
    \*********************************************/
/*! no static exports found */function (t, e, r) { var n = Object.prototype.hasOwnProperty, i = "~"; function a() { } function s(t, e, r) { this.fn = t, this.context = e, this.once = r || !1 } function o(t, e, r, n, a) { if ("function" != typeof r) throw new TypeError("The listener must be a function"); var o = new s(r, n || t, a), l = i ? i + e : e; return t._events[l] ? t._events[l].fn ? t._events[l] = [t._events[l], o] : t._events[l].push(o) : (t._events[l] = o, t._eventsCount++), t } function l(t, e) { 0 == --t._eventsCount ? t._events = new a : delete t._events[e] } function u() { this._events = new a, this._eventsCount = 0 } Object.create && (a.prototype = Object.create(null), (new a).__proto__ || (i = !1)), u.prototype.eventNames = function () { var t, e, r = []; if (0 === this._eventsCount) return r; for (e in t = this._events) n.call(t, e) && r.push(i ? e.slice(1) : e); return Object.getOwnPropertySymbols ? r.concat(Object.getOwnPropertySymbols(t)) : r }, u.prototype.listeners = function (t) { var e = i ? i + t : t, r = this._events[e]; if (!r) return []; if (r.fn) return [r.fn]; for (var n = 0, a = r.length, s = new Array(a); n < a; n++)s[n] = r[n].fn; return s }, u.prototype.listenerCount = function (t) { var e = i ? i + t : t, r = this._events[e]; return r ? r.fn ? 1 : r.length : 0 }, u.prototype.emit = function (t, e, r, n, a, s) { var o = i ? i + t : t; if (!this._events[o]) return !1; var l, u, c = this._events[o], d = arguments.length; if (c.fn) { switch (c.once && this.removeListener(t, c.fn, void 0, !0), d) { case 1: return c.fn.call(c.context), !0; case 2: return c.fn.call(c.context, e), !0; case 3: return c.fn.call(c.context, e, r), !0; case 4: return c.fn.call(c.context, e, r, n), !0; case 5: return c.fn.call(c.context, e, r, n, a), !0; case 6: return c.fn.call(c.context, e, r, n, a, s), !0 }for (u = 1, l = new Array(d - 1); u < d; u++)l[u - 1] = arguments[u]; c.fn.apply(c.context, l) } else { var h, f = c.length; for (u = 0; u < f; u++)switch (c[u].once && this.removeListener(t, c[u].fn, void 0, !0), d) { case 1: c[u].fn.call(c[u].context); break; case 2: c[u].fn.call(c[u].context, e); break; case 3: c[u].fn.call(c[u].context, e, r); break; case 4: c[u].fn.call(c[u].context, e, r, n); break; default: if (!l) for (h = 1, l = new Array(d - 1); h < d; h++)l[h - 1] = arguments[h]; c[u].fn.apply(c[u].context, l) } } return !0 }, u.prototype.on = function (t, e, r) { return o(this, t, e, r, !1) }, u.prototype.once = function (t, e, r) { return o(this, t, e, r, !0) }, u.prototype.removeListener = function (t, e, r, n) { var a = i ? i + t : t; if (!this._events[a]) return this; if (!e) return l(this, a), this; var s = this._events[a]; if (s.fn) s.fn !== e || n && !s.once || r && s.context !== r || l(this, a); else { for (var o = 0, u = [], c = s.length; o < c; o++)(s[o].fn !== e || n && !s[o].once || r && s[o].context !== r) && u.push(s[o]); u.length ? this._events[a] = 1 === u.length ? u[0] : u : l(this, a) } return this }, u.prototype.removeAllListeners = function (t) { var e; return t ? (e = i ? i + t : t, this._events[e] && l(this, e)) : (this._events = new a, this._eventsCount = 0), this }, u.prototype.off = u.prototype.removeListener, u.prototype.addListener = u.prototype.on, u.prefixed = i, u.EventEmitter = u, t.exports = u }, "./node_modules/url-toolkit/src/url-toolkit.js":
/*!*****************************************************!*\
    !*** ./node_modules/url-toolkit/src/url-toolkit.js ***!
    \*****************************************************/
/*! no static exports found */function (t, e, r) { var n, i, a, s, o; n = /^((?:[a-zA-Z0-9+\-.]+:)?)(\/\/[^\/?#]*)?((?:[^\/?#]*\/)*[^;?#]*)?(;[^?#]*)?(\?[^#]*)?(#[^]*)?$/, i = /^([^\/?#]*)([^]*)$/, a = /(?:\/|^)\.(?=\/)/g, s = /(?:\/|^)\.\.\/(?!\.\.\/)[^\/]*(?=\/)/g, o = { buildAbsoluteURL: function (t, e, r) { if (r = r || {}, t = t.trim(), !(e = e.trim())) { if (!r.alwaysNormalize) return t; var n = o.parseURL(t); if (!n) throw new Error("Error trying to parse base URL."); return n.path = o.normalizePath(n.path), o.buildURLFromParts(n) } var a = o.parseURL(e); if (!a) throw new Error("Error trying to parse relative URL."); if (a.scheme) return r.alwaysNormalize ? (a.path = o.normalizePath(a.path), o.buildURLFromParts(a)) : e; var s = o.parseURL(t); if (!s) throw new Error("Error trying to parse base URL."); if (!s.netLoc && s.path && "/" !== s.path[0]) { var l = i.exec(s.path); s.netLoc = l[1], s.path = l[2] } s.netLoc && !s.path && (s.path = "/"); var u = { scheme: s.scheme, netLoc: a.netLoc, path: null, params: a.params, query: a.query, fragment: a.fragment }; if (!a.netLoc && (u.netLoc = s.netLoc, "/" !== a.path[0])) if (a.path) { var c = s.path, d = c.substring(0, c.lastIndexOf("/") + 1) + a.path; u.path = o.normalizePath(d) } else u.path = s.path, a.params || (u.params = s.params, a.query || (u.query = s.query)); return null === u.path && (u.path = r.alwaysNormalize ? o.normalizePath(a.path) : a.path), o.buildURLFromParts(u) }, parseURL: function (t) { var e = n.exec(t); return e ? { scheme: e[1] || "", netLoc: e[2] || "", path: e[3] || "", params: e[4] || "", query: e[5] || "", fragment: e[6] || "" } : null }, normalizePath: function (t) { for (t = t.split("").reverse().join("").replace(a, ""); t.length !== (t = t.replace(s, "")).length;); return t.split("").reverse().join("") }, buildURLFromParts: function (t) { return t.scheme + t.netLoc + t.path + t.params + t.query + t.fragment } }, t.exports = o }, "./node_modules/webworkify-webpack/index.js":
/*!**************************************************!*\
    !*** ./node_modules/webworkify-webpack/index.js ***!
    \**************************************************/
/*! no static exports found */function (t, e, r) { function n(t) { var e = {}; function r(n) { if (e[n]) return e[n].exports; var i = e[n] = { i: n, l: !1, exports: {} }; return t[n].call(i.exports, i, i.exports, r), i.l = !0, i.exports } r.m = t, r.c = e, r.i = function (t) { return t }, r.d = function (t, e, n) { r.o(t, e) || Object.defineProperty(t, e, { configurable: !1, enumerable: !0, get: n }) }, r.r = function (t) { Object.defineProperty(t, "__esModule", { value: !0 }) }, r.n = function (t) { var e = t && t.__esModule ? function () { return t.default } : function () { return t }; return r.d(e, "a", e), e }, r.o = function (t, e) { return Object.prototype.hasOwnProperty.call(t, e) }, r.p = "/", r.oe = function (t) { throw console.error(t), t }; var n = r(r.s = ENTRY_MODULE); return n.default || n } var i = "[\\.|\\-|\\+|\\w|/|@]+", a = "\\(\\s*(/\\*.*?\\*/)?\\s*.*?([\\.|\\-|\\+|\\w|/|@]+).*?\\)"; function s(t) { return (t + "").replace(/[.?*+^$[\]\\(){}|-]/g, "\\$&") } function o(t, e, n) { var o = {}; o[n] = []; var l = e.toString(), u = l.match(/^function\s?\w*\(\w+,\s*\w+,\s*(\w+)\)/); if (!u) return o; for (var c, d = u[1], h = new RegExp("(\\\\n|\\W)" + s(d) + a, "g"); c = h.exec(l);)"dll-reference" !== c[3] && o[n].push(c[3]); for (h = new RegExp("\\(" + s(d) + '\\("(dll-reference\\s(' + i + '))"\\)\\)' + a, "g"); c = h.exec(l);)t[c[2]] || (o[n].push(c[1]), t[c[2]] = r(c[1]).m), o[c[2]] = o[c[2]] || [], o[c[2]].push(c[4]); for (var f, p = Object.keys(o), g = 0; g < p.length; g++)for (var v = 0; v < o[p[g]].length; v++)f = o[p[g]][v], isNaN(1 * f) || (o[p[g]][v] = 1 * o[p[g]][v]); return o } function l(t) { return Object.keys(t).reduce((function (e, r) { return e || t[r].length > 0 }), !1) } t.exports = function (t, e) { e = e || {}; var i = { main: r.m }, a = e.all ? { main: Object.keys(i.main) } : function (t, e) { for (var r = { main: [e] }, n = { main: [] }, i = { main: {} }; l(r);)for (var a = Object.keys(r), s = 0; s < a.length; s++) { var u = a[s], c = r[u].pop(); if (i[u] = i[u] || {}, !i[u][c] && t[u][c]) { i[u][c] = !0, n[u] = n[u] || [], n[u].push(c); for (var d = o(t, t[u][c], u), h = Object.keys(d), f = 0; f < h.length; f++)r[h[f]] = r[h[f]] || [], r[h[f]] = r[h[f]].concat(d[h[f]]) } } return n }(i, t), s = ""; Object.keys(a).filter((function (t) { return "main" !== t })).forEach((function (t) { for (var e = 0; a[t][e];)e++; a[t].push(e), i[t][e] = "(function(module, exports, __webpack_require__) { module.exports = __webpack_require__; })", s = s + "var " + t + " = (" + n.toString().replace("ENTRY_MODULE", JSON.stringify(e)) + ")({" + a[t].map((function (e) { return JSON.stringify(e) + ": " + i[t][e].toString() })).join(",") + "});\n" })), s = s + "new ((" + n.toString().replace("ENTRY_MODULE", JSON.stringify(t)) + ")({" + a.main.map((function (t) { return JSON.stringify(t) + ": " + i.main[t].toString() })).join(",") + "}))(self);"; var u = new window.Blob([s], { type: "text/javascript" }); if (e.bare) return u; var c = (window.URL || window.webkitURL || window.mozURL || window.msURL).createObjectURL(u), d = new window.Worker(c); return d.objectURL = c, d } }, "./src/config.ts":
/*!***********************!*\
    !*** ./src/config.ts ***!
    \***********************/
/*! exports provided: hlsDefaultConfig, mergeConfig, enableStreamingMode */function (t, e, r) { r.r(e), r.d(e, "hlsDefaultConfig", (function () { return k })), r.d(e, "mergeConfig", (function () { return S })), r.d(e, "enableStreamingMode", (function () { return _ })); var n = r(/*! ./controller/abr-controller */"./src/controller/abr-controller.ts"), i = r(/*! ./controller/audio-stream-controller */"./src/controller/audio-stream-controller.ts"), a = r(/*! ./controller/audio-track-controller */"./src/controller/audio-track-controller.ts"), s = r(/*! ./controller/subtitle-stream-controller */"./src/controller/subtitle-stream-controller.ts"), o = r(/*! ./controller/subtitle-track-controller */"./src/controller/subtitle-track-controller.ts"), l = r(/*! ./controller/buffer-controller */"./src/controller/buffer-controller.ts"), u = r(/*! ./controller/timeline-controller */"./src/controller/timeline-controller.ts"), c = r(/*! ./controller/cap-level-controller */"./src/controller/cap-level-controller.ts"), d = r(/*! ./controller/fps-controller */"./src/controller/fps-controller.ts"), h = r(/*! ./controller/eme-controller */"./src/controller/eme-controller.ts"), f = r(/*! ./controller/cmcd-controller */"./src/controller/cmcd-controller.ts"), p = r(/*! ./utils/xhr-loader */"./src/utils/xhr-loader.ts"), g = r(/*! ./utils/fetch-loader */"./src/utils/fetch-loader.ts"), v = r(/*! ./utils/cues */"./src/utils/cues.ts"), m = r(/*! ./utils/mediakeys-helper */"./src/utils/mediakeys-helper.ts"), y = r(/*! ./utils/logger */"./src/utils/logger.ts"); function A() { return A = Object.assign || function (t) { for (var e = 1; e < arguments.length; e++) { var r = arguments[e]; for (var n in r) Object.prototype.hasOwnProperty.call(r, n) && (t[n] = r[n]) } return t }, A.apply(this, arguments) } function E(t, e) { var r = Object.keys(t); if (Object.getOwnPropertySymbols) { var n = Object.getOwnPropertySymbols(t); e && (n = n.filter((function (e) { return Object.getOwnPropertyDescriptor(t, e).enumerable }))), r.push.apply(r, n) } return r } function T(t) { for (var e = 1; e < arguments.length; e++) { var r = null != arguments[e] ? arguments[e] : {}; e % 2 ? E(Object(r), !0).forEach((function (e) { b(t, e, r[e]) })) : Object.getOwnPropertyDescriptors ? Object.defineProperties(t, Object.getOwnPropertyDescriptors(r)) : E(Object(r)).forEach((function (e) { Object.defineProperty(t, e, Object.getOwnPropertyDescriptor(r, e)) })) } return t } function b(t, e, r) { return e in t ? Object.defineProperty(t, e, { value: r, enumerable: !0, configurable: !0, writable: !0 }) : t[e] = r, t } var k = T(T({ autoStartLoad: !0, startPosition: -1, defaultAudioCodec: void 0, debug: !1, capLevelOnFPSDrop: !1, capLevelToPlayerSize: !1, initialLiveManifestSize: 1, maxBufferLength: 30, backBufferLength: 1 / 0, maxBufferSize: 6e7, maxBufferHole: .1, highBufferWatchdogPeriod: 2, nudgeOffset: .1, nudgeMaxRetry: 3, maxFragLookUpTolerance: .25, liveSyncDurationCount: 3, liveMaxLatencyDurationCount: 1 / 0, liveSyncDuration: void 0, liveMaxLatencyDuration: void 0, maxLiveSyncPlaybackRate: 1, liveDurationInfinity: !1, liveBackBufferLength: null, maxMaxBufferLength: 600, enableWorker: !0, enableSoftwareAES: !0, manifestLoadingTimeOut: 1e4, manifestLoadingMaxRetry: 1, manifestLoadingRetryDelay: 1e3, manifestLoadingMaxRetryTimeout: 64e3, startLevel: void 0, levelLoadingTimeOut: 1e4, levelLoadingMaxRetry: 4, levelLoadingRetryDelay: 1e3, levelLoadingMaxRetryTimeout: 64e3, fragLoadingTimeOut: 2e4, fragLoadingMaxRetry: 6, fragLoadingRetryDelay: 1e3, fragLoadingMaxRetryTimeout: 64e3, startFragPrefetch: !1, fpsDroppedMonitoringPeriod: 5e3, fpsDroppedMonitoringThreshold: .2, appendErrorMaxRetry: 3, loader: p.default, fLoader: void 0, pLoader: void 0, xhrSetup: void 0, licenseXhrSetup: void 0, licenseResponseCallback: void 0, abrController: n.default, bufferController: l.default, capLevelController: c.default, fpsController: d.default, stretchShortVideoTrack: !1, maxAudioFramesDrift: 1, forceKeyFrameOnDiscontinuity: !0, abrEwmaFastLive: 3, abrEwmaSlowLive: 9, abrEwmaFastVoD: 3, abrEwmaSlowVoD: 9, abrEwmaDefaultEstimate: 5e5, abrBandWidthFactor: .95, abrBandWidthUpFactor: .7, abrMaxWithRealBitrate: !1, maxStarvationDelay: 4, maxLoadingDelay: 4, minAutoBitrate: 0, emeEnabled: !1, widevineLicenseUrl: void 0, drmSystemOptions: {}, requestMediaKeySystemAccessFunc: m.requestMediaKeySystemAccess, testBandwidth: !0, progressive: !1, lowLatencyMode: !0, cmcd: void 0 }, { cueHandler: v.default, enableCEA708Captions: !0, enableWebVTT: !0, enableIMSC1: !0, captionsTextTrack1Label: "English", captionsTextTrack1LanguageCode: "en", captionsTextTrack2Label: "Spanish", captionsTextTrack2LanguageCode: "es", captionsTextTrack3Label: "Unknown CC", captionsTextTrack3LanguageCode: "", captionsTextTrack4Label: "Unknown CC", captionsTextTrack4LanguageCode: "", renderTextTracksNatively: !0 }), {}, { subtitleStreamController: s.SubtitleStreamController, subtitleTrackController: o.default, timelineController: u.TimelineController, audioStreamController: i.default, audioTrackController: a.default, emeController: h.default, cmcdController: f.default }); function S(t, e) { if ((e.liveSyncDurationCount || e.liveMaxLatencyDurationCount) && (e.liveSyncDuration || e.liveMaxLatencyDuration)) throw new Error("Illegal hls.js config: don't mix up liveSyncDurationCount/liveMaxLatencyDurationCount and liveSyncDuration/liveMaxLatencyDuration"); if (void 0 !== e.liveMaxLatencyDurationCount && (void 0 === e.liveSyncDurationCount || e.liveMaxLatencyDurationCount <= e.liveSyncDurationCount)) throw new Error('Illegal hls.js config: "liveMaxLatencyDurationCount" must be greater than "liveSyncDurationCount"'); if (void 0 !== e.liveMaxLatencyDuration && (void 0 === e.liveSyncDuration || e.liveMaxLatencyDuration <= e.liveSyncDuration)) throw new Error('Illegal hls.js config: "liveMaxLatencyDuration" must be greater than "liveSyncDuration"'); return A({}, t, e) } function _(t) { var e = t.loader; e !== g.default && e !== p.default ? (y.logger.log("[config]: Custom loader detected, cannot enable progressive streaming"), t.progressive = !1) : Object(g.fetchSupported)() && (t.loader = g.default, t.progressive = !0, t.enableSoftwareAES = !0, y.logger.log("[config]: Progressive streaming enabled, using FetchLoader")) } }, "./src/controller/abr-controller.ts":
/*!******************************************!*\
    !*** ./src/controller/abr-controller.ts ***!
    \******************************************/
/*! exports provided: default */function (t, e, r) { r.r(e); var n = r(/*! ./src/polyfills/number */"./src/polyfills/number.ts"), i = r(/*! ../utils/ewma-bandwidth-estimator */"./src/utils/ewma-bandwidth-estimator.ts"), a = r(/*! ../events */"./src/events.ts"), s = r(/*! ../utils/buffer-helper */"./src/utils/buffer-helper.ts"), o = r(/*! ../errors */"./src/errors.ts"), l = r(/*! ../types/loader */"./src/types/loader.ts"), u = r(/*! ../utils/logger */"./src/utils/logger.ts"); function c(t, e) { for (var r = 0; r < e.length; r++) { var n = e[r]; n.enumerable = n.enumerable || !1, n.configurable = !0, "value" in n && (n.writable = !0), Object.defineProperty(t, n.key, n) } } var d = function () { function t(t) { this.hls = void 0, this.lastLoadedFragLevel = 0, this._nextAutoLevel = -1, this.timer = void 0, this.onCheck = this._abandonRulesCheck.bind(this), this.fragCurrent = null, this.partCurrent = null, this.bitrateTestDelay = 0, this.bwEstimator = void 0, this.hls = t; var e = t.config; this.bwEstimator = new i.default(e.abrEwmaSlowVoD, e.abrEwmaFastVoD, e.abrEwmaDefaultEstimate), this.registerListeners() } var e, r, d, h = t.prototype; return h.registerListeners = function () { var t = this.hls; t.on(a.Events.FRAG_LOADING, this.onFragLoading, this), t.on(a.Events.FRAG_LOADED, this.onFragLoaded, this), t.on(a.Events.FRAG_BUFFERED, this.onFragBuffered, this), t.on(a.Events.LEVEL_LOADED, this.onLevelLoaded, this), t.on(a.Events.ERROR, this.onError, this) }, h.unregisterListeners = function () { var t = this.hls; t.off(a.Events.FRAG_LOADING, this.onFragLoading, this), t.off(a.Events.FRAG_LOADED, this.onFragLoaded, this), t.off(a.Events.FRAG_BUFFERED, this.onFragBuffered, this), t.off(a.Events.LEVEL_LOADED, this.onLevelLoaded, this), t.off(a.Events.ERROR, this.onError, this) }, h.destroy = function () { this.unregisterListeners(), this.clearTimer(), this.hls = this.onCheck = null, this.fragCurrent = this.partCurrent = null }, h.onFragLoading = function (t, e) { var r, n = e.frag; n.type === l.PlaylistLevelType.MAIN && (this.timer || (this.fragCurrent = n, this.partCurrent = null != (r = e.part) ? r : null, this.timer = self.setInterval(this.onCheck, 100))) }, h.onLevelLoaded = function (t, e) { var r = this.hls.config; e.details.live ? this.bwEstimator.update(r.abrEwmaSlowLive, r.abrEwmaFastLive) : this.bwEstimator.update(r.abrEwmaSlowVoD, r.abrEwmaFastVoD) }, h._abandonRulesCheck = function () { var t = this.fragCurrent, e = this.partCurrent, r = this.hls, i = r.autoLevelEnabled, o = r.config, l = r.media; if (t && l) { var c = e ? e.stats : t.stats, d = e ? e.duration : t.duration; if (c.aborted) return u.logger.warn("frag loader destroy or aborted, disarm abandonRules"), this.clearTimer(), void (this._nextAutoLevel = -1); if (i && !l.paused && l.playbackRate && l.readyState) { var h = performance.now() - c.loading.start, f = Math.abs(l.playbackRate); if (!(h <= 500 * d / f)) { var p = r.levels, g = r.minAutoLevel, v = p[t.level], m = c.total || Math.max(c.loaded, Math.round(d * v.maxBitrate / 8)), y = Math.max(1, c.bwEstimate ? c.bwEstimate / 8 : 1e3 * c.loaded / h), A = (m - c.loaded) / y, E = l.currentTime, T = (s.BufferHelper.bufferInfo(l, E, o.maxBufferHole).end - E) / f; if (!(T >= 2 * d / f || A <= T)) { var b, k = Number.POSITIVE_INFINITY; for (b = t.level - 1; b > g && !((k = d * p[b].maxBitrate / (6.4 * y)) < T); b--); if (!(k >= A)) { var S = this.bwEstimator.getEstimate(); u.logger.warn("Fragment " + t.sn + (e ? " part " + e.index : "") + " of level " + t.level + " is loading too slowly and will cause an underbuffer; aborting and switching to level " + b + "\n      Current BW estimate: " + (Object(n.isFiniteNumber)(S) ? (S / 1024).toFixed(3) : "Unknown") + " Kb/s\n      Estimated load time for current fragment: " + A.toFixed(3) + " s\n      Estimated load time for the next fragment: " + k.toFixed(3) + " s\n      Time to underbuffer: " + T.toFixed(3) + " s"), r.nextLoadLevel = b, this.bwEstimator.sample(h, c.loaded), this.clearTimer(), t.loader && (this.fragCurrent = this.partCurrent = null, t.loader.abort()), r.trigger(a.Events.FRAG_LOAD_EMERGENCY_ABORTED, { frag: t, part: e, stats: c }) } } } } } }, h.onFragLoaded = function (t, e) { var r = e.frag, i = e.part; if (r.type === l.PlaylistLevelType.MAIN && Object(n.isFiniteNumber)(r.sn)) { var s = i ? i.stats : r.stats, o = i ? i.duration : r.duration; if (this.clearTimer(), this.lastLoadedFragLevel = r.level, this._nextAutoLevel = -1, this.hls.config.abrMaxWithRealBitrate) { var u = this.hls.levels[r.level], c = (u.loaded ? u.loaded.bytes : 0) + s.loaded, d = (u.loaded ? u.loaded.duration : 0) + o; u.loaded = { bytes: c, duration: d }, u.realBitrate = Math.round(8 * c / d) } if (r.bitrateTest) { var h = { stats: s, frag: r, part: i, id: r.type }; this.onFragBuffered(a.Events.FRAG_BUFFERED, h), r.bitrateTest = !1 } } }, h.onFragBuffered = function (t, e) { var r = e.frag, n = e.part, i = n ? n.stats : r.stats; if (!i.aborted && r.type === l.PlaylistLevelType.MAIN && "initSegment" !== r.sn) { var a = i.parsing.end - i.loading.start; this.bwEstimator.sample(a, i.loaded), i.bwEstimate = this.bwEstimator.getEstimate(), r.bitrateTest ? this.bitrateTestDelay = a / 1e3 : this.bitrateTestDelay = 0 } }, h.onError = function (t, e) { switch (e.details) { case o.ErrorDetails.FRAG_LOAD_ERROR: case o.ErrorDetails.FRAG_LOAD_TIMEOUT: this.clearTimer() } }, h.clearTimer = function () { self.clearInterval(this.timer), this.timer = void 0 }, h.getNextABRAutoLevel = function () { var t = this.fragCurrent, e = this.partCurrent, r = this.hls, n = r.maxAutoLevel, i = r.config, a = r.minAutoLevel, o = r.media, l = e ? e.duration : t ? t.duration : 0, c = o ? o.currentTime : 0, d = o && 0 !== o.playbackRate ? Math.abs(o.playbackRate) : 1, h = this.bwEstimator ? this.bwEstimator.getEstimate() : i.abrEwmaDefaultEstimate, f = (s.BufferHelper.bufferInfo(o, c, i.maxBufferHole).end - c) / d, p = this.findBestLevel(h, a, n, f, i.abrBandWidthFactor, i.abrBandWidthUpFactor); if (p >= 0) return p; u.logger.trace((f ? "rebuffering expected" : "buffer is empty") + ", finding optimal quality level"); var g = l ? Math.min(l, i.maxStarvationDelay) : i.maxStarvationDelay, v = i.abrBandWidthFactor, m = i.abrBandWidthUpFactor; if (!f) { var y = this.bitrateTestDelay; y && (g = (l ? Math.min(l, i.maxLoadingDelay) : i.maxLoadingDelay) - y, u.logger.trace("bitrate test took " + Math.round(1e3 * y) + "ms, set first fragment max fetchDuration to " + Math.round(1e3 * g) + " ms"), v = m = 1) } return p = this.findBestLevel(h, a, n, f + g, v, m), Math.max(p, 0) }, h.findBestLevel = function (t, e, r, n, i, a) { for (var s, o = this.fragCurrent, l = this.partCurrent, c = this.lastLoadedFragLevel, d = this.hls.levels, h = d[c], f = !(null == h || null === (s = h.details) || void 0 === s || !s.live), p = null == h ? void 0 : h.codecSet, g = l ? l.duration : o ? o.duration : 0, v = r; v >= e; v--) { var m = d[v]; if (m && (!p || m.codecSet === p)) { var y = m.details, A = (l ? null == y ? void 0 : y.partTarget : null == y ? void 0 : y.averagetargetduration) || g, E = void 0; E = v <= c ? i * t : a * t; var T = d[v].maxBitrate, b = T * A / E; if (u.logger.trace("level/adjustedbw/bitrate/avgDuration/maxFetchDuration/fetchDuration: " + v + "/" + Math.round(E) + "/" + T + "/" + A + "/" + n + "/" + b), E > T && (!b || f && !this.bitrateTestDelay || b < n)) return v } } return -1 }, e = t, (r = [{ key: "nextAutoLevel", get: function () { var t = this._nextAutoLevel, e = this.bwEstimator; if (!(-1 === t || e && e.canEstimate())) return t; var r = this.getNextABRAutoLevel(); return -1 !== t && (r = Math.min(t, r)), r }, set: function (t) { this._nextAutoLevel = t } }]) && c(e.prototype, r), d && c(e, d), t }(); e.default = d }, "./src/controller/audio-stream-controller.ts":
/*!***************************************************!*\
    !*** ./src/controller/audio-stream-controller.ts ***!
    \***************************************************/
/*! exports provided: default */function (t, e, r) { r.r(e); var n = r(/*! ./src/polyfills/number */"./src/polyfills/number.ts"), i = r(/*! ./base-stream-controller */"./src/controller/base-stream-controller.ts"), a = r(/*! ../events */"./src/events.ts"), s = r(/*! ../utils/buffer-helper */"./src/utils/buffer-helper.ts"), o = r(/*! ./fragment-tracker */"./src/controller/fragment-tracker.ts"), l = r(/*! ../types/level */"./src/types/level.ts"), u = r(/*! ../types/loader */"./src/types/loader.ts"), c = r(/*! ../loader/fragment */"./src/loader/fragment.ts"), d = r(/*! ../demux/chunk-cache */"./src/demux/chunk-cache.ts"), h = r(/*! ../demux/transmuxer-interface */"./src/demux/transmuxer-interface.ts"), f = r(/*! ../types/transmuxer */"./src/types/transmuxer.ts"), p = r(/*! ./fragment-finders */"./src/controller/fragment-finders.ts"), g = r(/*! ../utils/discontinuities */"./src/utils/discontinuities.ts"), v = r(/*! ../errors */"./src/errors.ts"), m = r(/*! ../utils/logger */"./src/utils/logger.ts"); function y() { return y = Object.assign || function (t) { for (var e = 1; e < arguments.length; e++) { var r = arguments[e]; for (var n in r) Object.prototype.hasOwnProperty.call(r, n) && (t[n] = r[n]) } return t }, y.apply(this, arguments) } function A(t, e) { return A = Object.setPrototypeOf || function (t, e) { return t.__proto__ = e, t }, A(t, e) } var E = function (t) { var e, r; function E(e, r) { var n; return (n = t.call(this, e, r, "[audio-stream-controller]") || this).videoBuffer = null, n.videoTrackCC = -1, n.waitingVideoCC = -1, n.audioSwitch = !1, n.trackId = -1, n.waitingData = null, n.mainDetails = null, n.bufferFlushed = !1, n._registerListeners(), n } r = t, (e = E).prototype = Object.create(r.prototype), e.prototype.constructor = e, A(e, r); var T = E.prototype; return T.onHandlerDestroying = function () { this._unregisterListeners(), this.mainDetails = null }, T._registerListeners = function () { var t = this.hls; t.on(a.Events.MEDIA_ATTACHED, this.onMediaAttached, this), t.on(a.Events.MEDIA_DETACHING, this.onMediaDetaching, this), t.on(a.Events.MANIFEST_LOADING, this.onManifestLoading, this), t.on(a.Events.LEVEL_LOADED, this.onLevelLoaded, this), t.on(a.Events.AUDIO_TRACKS_UPDATED, this.onAudioTracksUpdated, this), t.on(a.Events.AUDIO_TRACK_SWITCHING, this.onAudioTrackSwitching, this), t.on(a.Events.AUDIO_TRACK_LOADED, this.onAudioTrackLoaded, this), t.on(a.Events.ERROR, this.onError, this), t.on(a.Events.BUFFER_RESET, this.onBufferReset, this), t.on(a.Events.BUFFER_CREATED, this.onBufferCreated, this), t.on(a.Events.BUFFER_FLUSHED, this.onBufferFlushed, this), t.on(a.Events.INIT_PTS_FOUND, this.onInitPtsFound, this), t.on(a.Events.FRAG_BUFFERED, this.onFragBuffered, this) }, T._unregisterListeners = function () { var t = this.hls; t.off(a.Events.MEDIA_ATTACHED, this.onMediaAttached, this), t.off(a.Events.MEDIA_DETACHING, this.onMediaDetaching, this), t.off(a.Events.MANIFEST_LOADING, this.onManifestLoading, this), t.off(a.Events.LEVEL_LOADED, this.onLevelLoaded, this), t.off(a.Events.AUDIO_TRACKS_UPDATED, this.onAudioTracksUpdated, this), t.off(a.Events.AUDIO_TRACK_SWITCHING, this.onAudioTrackSwitching, this), t.off(a.Events.AUDIO_TRACK_LOADED, this.onAudioTrackLoaded, this), t.off(a.Events.ERROR, this.onError, this), t.off(a.Events.BUFFER_RESET, this.onBufferReset, this), t.off(a.Events.BUFFER_CREATED, this.onBufferCreated, this), t.off(a.Events.BUFFER_FLUSHED, this.onBufferFlushed, this), t.off(a.Events.INIT_PTS_FOUND, this.onInitPtsFound, this), t.off(a.Events.FRAG_BUFFERED, this.onFragBuffered, this) }, T.onInitPtsFound = function (t, e) { var r = e.frag, n = e.id, a = e.initPTS; if ("main" === n) { var s = r.cc; this.initPTS[r.cc] = a, this.log("InitPTS for cc: " + s + " found from main: " + a), this.videoTrackCC = s, this.state === i.State.WAITING_INIT_PTS && this.tick() } }, T.startLoad = function (t) { if (!this.levels) return this.startPosition = t, void (this.state = i.State.STOPPED); var e = this.lastCurrentTime; this.stopLoad(), this.setInterval(100), this.fragLoadError = 0, e > 0 && -1 === t ? (this.log("Override startPosition with lastCurrentTime @" + e.toFixed(3)), this.state = i.State.IDLE) : (this.loadedmetadata = !1, this.state = i.State.WAITING_TRACK), this.nextLoadPosition = this.startPosition = this.lastCurrentTime = t, this.tick() }, T.doTick = function () { switch (this.state) { case i.State.IDLE: this.doTickIdle(); break; case i.State.WAITING_TRACK: var e, r = this.levels, n = this.trackId, a = null == r || null === (e = r[n]) || void 0 === e ? void 0 : e.details; if (a) { if (this.waitForCdnTuneIn(a)) break; this.state = i.State.WAITING_INIT_PTS } break; case i.State.FRAG_LOADING_WAITING_RETRY: var o, l = performance.now(), u = this.retryDate; (!u || l >= u || null !== (o = this.media) && void 0 !== o && o.seeking) && (this.log("RetryDate reached, switch back to IDLE state"), this.state = i.State.IDLE); break; case i.State.WAITING_INIT_PTS: var c = this.waitingData; if (c) { var d = c.frag, h = c.part, f = c.cache, g = c.complete; if (void 0 !== this.initPTS[d.cc]) { this.waitingData = null, this.waitingVideoCC = -1, this.state = i.State.FRAG_LOADING; var v = { frag: d, part: h, payload: f.flush(), networkDetails: null }; this._handleFragmentLoadProgress(v), g && t.prototype._handleFragmentLoadComplete.call(this, v) } else if (this.videoTrackCC !== this.waitingVideoCC) m.logger.log("Waiting fragment cc (" + d.cc + ") cancelled because video is at cc " + this.videoTrackCC), this.clearWaitingFragment(); else { var y = this.getLoadPosition(), A = s.BufferHelper.bufferInfo(this.mediaBuffer, y, this.config.maxBufferHole); Object(p.fragmentWithinToleranceTest)(A.end, this.config.maxFragLookUpTolerance, d) < 0 && (m.logger.log("Waiting fragment cc (" + d.cc + ") @ " + d.start + " cancelled because another fragment at " + A.end + " is needed"), this.clearWaitingFragment()) } } else this.state = i.State.IDLE }this.onTickEnd() }, T.clearWaitingFragment = function () { var t = this.waitingData; t && (this.fragmentTracker.removeFragment(t.frag), this.waitingData = null, this.waitingVideoCC = -1, this.state = i.State.IDLE) }, T.onTickEnd = function () { var t = this.media; if (t && t.readyState) { var e = (this.mediaBuffer ? this.mediaBuffer : t).buffered; !this.loadedmetadata && e.length && (this.loadedmetadata = !0), this.lastCurrentTime = t.currentTime } }, T.doTickIdle = function () { var t, e, r = this.hls, n = this.levels, s = this.media, o = this.trackId, l = r.config; if (n && n[o] && (s || !this.startFragRequested && l.startFragPrefetch)) { var d = n[o].details; if (!d || d.live && this.levelLastLoaded !== o || this.waitForCdnTuneIn(d)) this.state = i.State.WAITING_TRACK; else { this.bufferFlushed && (this.bufferFlushed = !1, this.afterBufferFlushed(this.mediaBuffer ? this.mediaBuffer : this.media, c.ElementaryStreamTypes.AUDIO, u.PlaylistLevelType.AUDIO)); var h = this.getFwdBufferInfo(this.mediaBuffer ? this.mediaBuffer : this.media, u.PlaylistLevelType.AUDIO); if (null !== h) { var f = h.len, p = this.getMaxBufferLength(), g = this.audioSwitch; if (!(f >= p) || g) { if (!g && this._streamEnded(h, d)) return r.trigger(a.Events.BUFFER_EOS, { type: "audio" }), void (this.state = i.State.ENDED); var v = d.fragments[0].start, m = h.end; if (g) { var y = this.getLoadPosition(); m = y, d.PTSKnown && y < v && (h.end > v || h.nextStart) && (this.log("Alt audio track ahead of main track, seek to start of alt audio track"), s.currentTime = v + .05) } var A = this.getNextFragment(m, d); A ? "identity" !== (null === (t = A.decryptdata) || void 0 === t ? void 0 : t.keyFormat) || null !== (e = A.decryptdata) && void 0 !== e && e.key ? this.loadFragment(A, d, m) : this.loadKey(A, d) : this.bufferFlushed = !0 } } } } }, T.getMaxBufferLength = function () { var e = t.prototype.getMaxBufferLength.call(this), r = this.getFwdBufferInfo(this.videoBuffer ? this.videoBuffer : this.media, u.PlaylistLevelType.MAIN); return null === r ? e : Math.max(e, r.len) }, T.onMediaDetaching = function () { this.videoBuffer = null, t.prototype.onMediaDetaching.call(this) }, T.onAudioTracksUpdated = function (t, e) { var r = e.audioTracks; this.resetTransmuxer(), this.levels = r.map((function (t) { return new l.Level(t) })) }, T.onAudioTrackSwitching = function (t, e) { var r = !!e.url; this.trackId = e.id; var n = this.fragCurrent; null != n && n.loader && n.loader.abort(), this.fragCurrent = null, this.clearWaitingFragment(), r ? this.setInterval(100) : this.resetTransmuxer(), r ? (this.audioSwitch = !0, this.state = i.State.IDLE) : this.state = i.State.STOPPED, this.tick() }, T.onManifestLoading = function () { this.mainDetails = null, this.fragmentTracker.removeAllFragments(), this.startPosition = this.lastCurrentTime = 0, this.bufferFlushed = !1 }, T.onLevelLoaded = function (t, e) { this.mainDetails = e.details }, T.onAudioTrackLoaded = function (t, e) { var r, n = this.levels, a = e.details, s = e.id; if (n) { this.log("Track " + s + " loaded [" + a.startSN + "," + a.endSN + "],duration:" + a.totalduration); var o = n[s], l = 0; if (a.live || null !== (r = o.details) && void 0 !== r && r.live) { var u = this.mainDetails; if (a.fragments[0] || (a.deltaUpdateFailed = !0), a.deltaUpdateFailed || !u) return; !o.details && a.hasProgramDateTime && u.hasProgramDateTime ? (Object(g.alignMediaPlaylistByPDT)(a, u), l = a.fragments[0].start) : l = this.alignPlaylists(a, o.details) } o.details = a, this.levelLastLoaded = s, this.startFragRequested || !this.mainDetails && a.live || this.setStartPosition(o.details, l), this.state !== i.State.WAITING_TRACK || this.waitForCdnTuneIn(a) || (this.state = i.State.IDLE), this.tick() } else this.warn("Audio tracks were reset while loading level " + s) }, T._handleFragmentLoadProgress = function (t) { var e, r = t.frag, n = t.part, a = t.payload, s = this.config, o = this.trackId, l = this.levels; if (l) { var c = l[o]; console.assert(c, "Audio track is defined on fragment load progress"); var p = c.details; console.assert(p, "Audio track details are defined on fragment load progress"); var g = s.defaultAudioCodec || c.audioCodec || "mp4a.40.2", v = this.transmuxer; v || (v = this.transmuxer = new h.default(this.hls, u.PlaylistLevelType.AUDIO, this._handleTransmuxComplete.bind(this), this._handleTransmuxerFlush.bind(this))); var y = this.initPTS[r.cc], A = null === (e = r.initSegment) || void 0 === e ? void 0 : e.data; if (void 0 !== y) { var E = n ? n.index : -1, T = -1 !== E, b = new f.ChunkMetadata(r.level, r.sn, r.stats.chunkCount, a.byteLength, E, T); v.push(a, A, g, "", r, n, p.totalduration, !1, b, y) } else m.logger.log("Unknown video PTS for cc " + r.cc + ", waiting for video PTS before demuxing audio frag " + r.sn + " of [" + p.startSN + " ," + p.endSN + "],track " + o), (this.waitingData = this.waitingData || { frag: r, part: n, cache: new d.default, complete: !1 }).cache.push(new Uint8Array(a)), this.waitingVideoCC = this.videoTrackCC, this.state = i.State.WAITING_INIT_PTS } else this.warn("Audio tracks were reset while fragment load was in progress. Fragment " + r.sn + " of level " + r.level + " will not be buffered") }, T._handleFragmentLoadComplete = function (e) { this.waitingData ? this.waitingData.complete = !0 : t.prototype._handleFragmentLoadComplete.call(this, e) }, T.onBufferReset = function () { this.mediaBuffer = this.videoBuffer = null, this.loadedmetadata = !1 }, T.onBufferCreated = function (t, e) { var r = e.tracks.audio; r && (this.mediaBuffer = r.buffer), e.tracks.video && (this.videoBuffer = e.tracks.video.buffer) }, T.onFragBuffered = function (t, e) { var r = e.frag, n = e.part; r.type === u.PlaylistLevelType.AUDIO && (this.fragContextChanged(r) ? this.warn("Fragment " + r.sn + (n ? " p: " + n.index : "") + " of level " + r.level + " finished buffering, but was aborted. state: " + this.state + ", audioSwitch: " + this.audioSwitch) : ("initSegment" !== r.sn && (this.fragPrevious = r, this.audioSwitch && (this.audioSwitch = !1, this.hls.trigger(a.Events.AUDIO_TRACK_SWITCHED, { id: this.trackId }))), this.fragBufferedComplete(r, n))) }, T.onError = function (e, r) { switch (r.details) { case v.ErrorDetails.FRAG_LOAD_ERROR: case v.ErrorDetails.FRAG_LOAD_TIMEOUT: case v.ErrorDetails.KEY_LOAD_ERROR: case v.ErrorDetails.KEY_LOAD_TIMEOUT: this.onFragmentOrKeyLoadError(u.PlaylistLevelType.AUDIO, r); break; case v.ErrorDetails.AUDIO_TRACK_LOAD_ERROR: case v.ErrorDetails.AUDIO_TRACK_LOAD_TIMEOUT: this.state !== i.State.ERROR && this.state !== i.State.STOPPED && (this.state = r.fatal ? i.State.ERROR : i.State.IDLE, this.warn(r.details + " while loading frag, switching to " + this.state + " state")); break; case v.ErrorDetails.BUFFER_FULL_ERROR: if ("audio" === r.parent && (this.state === i.State.PARSING || this.state === i.State.PARSED)) { var n = !0, a = this.getFwdBufferInfo(this.mediaBuffer, u.PlaylistLevelType.AUDIO); a && a.len > .5 && (n = !this.reduceMaxBufferLength(a.len)), n && (this.warn("Buffer full error also media.currentTime is not buffered, flush audio buffer"), this.fragCurrent = null, t.prototype.flushMainBuffer.call(this, 0, Number.POSITIVE_INFINITY, "audio")), this.resetLoadingState() } } }, T.onBufferFlushed = function (t, e) { e.type === c.ElementaryStreamTypes.AUDIO && (this.bufferFlushed = !0) }, T._handleTransmuxComplete = function (t) { var e, r = "audio", n = this.hls, s = t.remuxResult, o = t.chunkMeta, l = this.getCurrentContext(o); if (!l) return this.warn("The loading context changed while buffering fragment " + o.sn + " of level " + o.level + ". This chunk will not be buffered."), void this.resetLiveStartWhenNotLoaded(o.level); var u = l.frag, d = l.part, h = s.audio, f = s.text, p = s.id3, g = s.initSegment; if (!this.fragContextChanged(u)) { if (this.state = i.State.PARSING, this.audioSwitch && h && this.completeAudioSwitch(), null != g && g.tracks && (this._bufferInitSegment(g.tracks, u, o), n.trigger(a.Events.FRAG_PARSING_INIT_SEGMENT, { frag: u, id: r, tracks: g.tracks })), h) { var v = h.startPTS, m = h.endPTS, A = h.startDTS, E = h.endDTS; d && (d.elementaryStreams[c.ElementaryStreamTypes.AUDIO] = { startPTS: v, endPTS: m, startDTS: A, endDTS: E }), u.setElementaryStreamInfo(c.ElementaryStreamTypes.AUDIO, v, m, A, E), this.bufferFragmentData(h, u, d, o) } if (null != p && null !== (e = p.samples) && void 0 !== e && e.length) { var T = y({ frag: u, id: r }, p); n.trigger(a.Events.FRAG_PARSING_METADATA, T) } if (f) { var b = y({ frag: u, id: r }, f); n.trigger(a.Events.FRAG_PARSING_USERDATA, b) } } }, T._bufferInitSegment = function (t, e, r) { if (this.state === i.State.PARSING) { t.video && delete t.video; var n = t.audio; if (n) { n.levelCodec = n.codec, n.id = "audio", this.log("Init audio buffer, container:" + n.container + ", codecs[parsed]=[" + n.codec + "]"), this.hls.trigger(a.Events.BUFFER_CODECS, t); var s = n.initSegment; if (null != s && s.byteLength) { var o = { type: "audio", frag: e, part: null, chunkMeta: r, parent: e.type, data: s }; this.hls.trigger(a.Events.BUFFER_APPENDING, o) } this.tick() } } }, T.loadFragment = function (e, r, a) { var s = this.fragmentTracker.getState(e); this.fragCurrent = e, (this.audioSwitch || s === o.FragmentState.NOT_LOADED || s === o.FragmentState.PARTIAL) && ("initSegment" === e.sn ? this._loadInitSegment(e) : r.live && !Object(n.isFiniteNumber)(this.initPTS[e.cc]) ? (this.log("Waiting for video PTS in continuity counter " + e.cc + " of live stream before loading audio fragment " + e.sn + " of level " + this.trackId), this.state = i.State.WAITING_INIT_PTS) : (this.startFragRequested = !0, t.prototype.loadFragment.call(this, e, r, a))) }, T.completeAudioSwitch = function () { var e = this.hls, r = this.media, n = this.trackId; r && (this.log("Switching audio track : flushing all audio"), t.prototype.flushMainBuffer.call(this, 0, Number.POSITIVE_INFINITY, "audio")), this.audioSwitch = !1, e.trigger(a.Events.AUDIO_TRACK_SWITCHED, { id: n }) }, E }(i.default); e.default = E }, "./src/controller/audio-track-controller.ts":
/*!**************************************************!*\
    !*** ./src/controller/audio-track-controller.ts ***!
    \**************************************************/
/*! exports provided: default */function (t, e, r) { r.r(e); var n = r(/*! ../events */"./src/events.ts"), i = r(/*! ../errors */"./src/errors.ts"), a = r(/*! ./base-playlist-controller */"./src/controller/base-playlist-controller.ts"), s = r(/*! ../types/loader */"./src/types/loader.ts"); function o(t, e) { for (var r = 0; r < e.length; r++) { var n = e[r]; n.enumerable = n.enumerable || !1, n.configurable = !0, "value" in n && (n.writable = !0), Object.defineProperty(t, n.key, n) } } function l(t, e) { return l = Object.setPrototypeOf || function (t, e) { return t.__proto__ = e, t }, l(t, e) } var u = function (t) { var e, r; function a(e) { var r; return (r = t.call(this, e, "[audio-track-controller]") || this).tracks = [], r.groupId = null, r.tracksInGroup = [], r.trackId = -1, r.trackName = "", r.selectDefaultTrack = !0, r.registerListeners(), r } r = t, (e = a).prototype = Object.create(r.prototype), e.prototype.constructor = e, l(e, r); var u, c, d, h = a.prototype; return h.registerListeners = function () { var t = this.hls; t.on(n.Events.MANIFEST_LOADING, this.onManifestLoading, this), t.on(n.Events.MANIFEST_PARSED, this.onManifestParsed, this), t.on(n.Events.LEVEL_LOADING, this.onLevelLoading, this), t.on(n.Events.LEVEL_SWITCHING, this.onLevelSwitching, this), t.on(n.Events.AUDIO_TRACK_LOADED, this.onAudioTrackLoaded, this), t.on(n.Events.ERROR, this.onError, this) }, h.unregisterListeners = function () { var t = this.hls; t.off(n.Events.MANIFEST_LOADING, this.onManifestLoading, this), t.off(n.Events.MANIFEST_PARSED, this.onManifestParsed, this), t.off(n.Events.LEVEL_LOADING, this.onLevelLoading, this), t.off(n.Events.LEVEL_SWITCHING, this.onLevelSwitching, this), t.off(n.Events.AUDIO_TRACK_LOADED, this.onAudioTrackLoaded, this), t.off(n.Events.ERROR, this.onError, this) }, h.destroy = function () { this.unregisterListeners(), this.tracks.length = 0, this.tracksInGroup.length = 0, t.prototype.destroy.call(this) }, h.onManifestLoading = function () { this.tracks = [], this.groupId = null, this.tracksInGroup = [], this.trackId = -1, this.trackName = "", this.selectDefaultTrack = !0 }, h.onManifestParsed = function (t, e) { this.tracks = e.audioTracks || [] }, h.onAudioTrackLoaded = function (t, e) { var r = e.id, n = e.details, i = this.tracksInGroup[r]; if (i) { var a = i.details; i.details = e.details, this.log("audioTrack " + r + " loaded [" + n.startSN + "-" + n.endSN + "]"), r === this.trackId && (this.retryCount = 0, this.playlistLoaded(r, e, a)) } else this.warn("Invalid audio track id " + r) }, h.onLevelLoading = function (t, e) { this.switchLevel(e.level) }, h.onLevelSwitching = function (t, e) { this.switchLevel(e.level) }, h.switchLevel = function (t) { var e = this.hls.levels[t]; if (null != e && e.audioGroupIds) { var r = e.audioGroupIds[e.urlId]; if (this.groupId !== r) { this.groupId = r; var i = this.tracks.filter((function (t) { return !r || t.groupId === r })); this.selectDefaultTrack && !i.some((function (t) { return t.default })) && (this.selectDefaultTrack = !1), this.tracksInGroup = i; var a = { audioTracks: i }; this.log("Updating audio tracks, " + i.length + ' track(s) found in "' + r + '" group-id'), this.hls.trigger(n.Events.AUDIO_TRACKS_UPDATED, a), this.selectInitialTrack() } } }, h.onError = function (e, r) { t.prototype.onError.call(this, e, r), !r.fatal && r.context && r.context.type === s.PlaylistContextType.AUDIO_TRACK && r.context.id === this.trackId && r.context.groupId === this.groupId && this.retryLoadingOrFail(r) }, h.setAudioTrack = function (t) { var e = this.tracksInGroup; if (t < 0 || t >= e.length) this.warn("Invalid id passed to audio-track controller"); else { this.clearTimer(); var r = e[this.trackId]; this.log("Now switching to audio-track index " + t); var i = e[t], a = i.id, s = i.groupId, o = void 0 === s ? "" : s, l = i.name, u = i.type, c = i.url; if (this.trackId = t, this.trackName = l, this.selectDefaultTrack = !1, this.hls.trigger(n.Events.AUDIO_TRACK_SWITCHING, { id: a, groupId: o, name: l, type: u, url: c }), !i.details || i.details.live) { var d = this.switchParams(i.url, null == r ? void 0 : r.details); this.loadPlaylist(d) } } }, h.selectInitialTrack = function () { var t = this.tracksInGroup; console.assert(t.length, "Initial audio track should be selected when tracks are known"); var e = this.trackName, r = this.findTrackId(e) || this.findTrackId(); -1 !== r ? this.setAudioTrack(r) : (this.warn("No track found for running audio group-ID: " + this.groupId), this.hls.trigger(n.Events.ERROR, { type: i.ErrorTypes.MEDIA_ERROR, details: i.ErrorDetails.AUDIO_TRACK_LOAD_ERROR, fatal: !0 })) }, h.findTrackId = function (t) { for (var e = this.tracksInGroup, r = 0; r < e.length; r++) { var n = e[r]; if ((!this.selectDefaultTrack || n.default) && (!t || t === n.name)) return n.id } return -1 }, h.loadPlaylist = function (t) { var e = this.tracksInGroup[this.trackId]; if (this.shouldLoadTrack(e)) { var r = e.id, i = e.groupId, a = e.url; if (t) try { a = t.addDirectives(a) } catch (t) { this.warn("Could not construct new URL with HLS Delivery Directives: " + t) } this.log("loading audio-track playlist for id: " + r), this.clearTimer(), this.hls.trigger(n.Events.AUDIO_TRACK_LOADING, { url: a, id: r, groupId: i, deliveryDirectives: t || null }) } }, u = a, (c = [{ key: "audioTracks", get: function () { return this.tracksInGroup } }, { key: "audioTrack", get: function () { return this.trackId }, set: function (t) { this.selectDefaultTrack = !1, this.setAudioTrack(t) } }]) && o(u.prototype, c), d && o(u, d), a }(a.default); e.default = u }, "./src/controller/base-playlist-controller.ts":
/*!****************************************************!*\
    !*** ./src/controller/base-playlist-controller.ts ***!
    \****************************************************/
/*! exports provided: default */function (t, e, r) { r.r(e), r.d(e, "default", (function () { return l })); var n = r(/*! ./src/polyfills/number */"./src/polyfills/number.ts"), i = r(/*! ../types/level */"./src/types/level.ts"), a = r(/*! ./level-helper */"./src/controller/level-helper.ts"), s = r(/*! ../utils/logger */"./src/utils/logger.ts"), o = r(/*! ../errors */"./src/errors.ts"), l = function () { function t(t, e) { this.hls = void 0, this.timer = -1, this.canLoad = !1, this.retryCount = 0, this.log = void 0, this.warn = void 0, this.log = s.logger.log.bind(s.logger, e + ":"), this.warn = s.logger.warn.bind(s.logger, e + ":"), this.hls = t } var e = t.prototype; return e.destroy = function () { this.clearTimer(), this.hls = this.log = this.warn = null }, e.onError = function (t, e) { e.fatal && e.type === o.ErrorTypes.NETWORK_ERROR && this.clearTimer() }, e.clearTimer = function () { clearTimeout(this.timer), this.timer = -1 }, e.startLoad = function () { this.canLoad = !0, this.retryCount = 0, this.loadPlaylist() }, e.stopLoad = function () { this.canLoad = !1, this.clearTimer() }, e.switchParams = function (t, e) { var r = null == e ? void 0 : e.renditionReports; if (r) for (var a = 0; a < r.length; a++) { var s = r[a], o = "" + s.URI; if (o === t.substr(-o.length)) { var l = parseInt(s["LAST-MSN"]), u = parseInt(s["LAST-PART"]); if (e && this.hls.config.lowLatencyMode) { var c = Math.min(e.age - e.partTarget, e.targetduration); void 0 !== u && c > e.partTarget && (u += 1) } if (Object(n.isFiniteNumber)(l)) return new i.HlsUrlParameters(l, Object(n.isFiniteNumber)(u) ? u : void 0, i.HlsSkip.No) } } }, e.loadPlaylist = function (t) { }, e.shouldLoadTrack = function (t) { return this.canLoad && t && !!t.url && (!t.details || t.details.live) }, e.playlistLoaded = function (t, e, r) { var n = this, i = e.details, s = e.stats, o = s.loading.end ? Math.max(0, self.performance.now() - s.loading.end) : 0; if (i.advancedDateTime = Date.now() - o, i.live || null != r && r.live) { if (i.reloaded(r), r && this.log("live playlist " + t + " " + (i.advanced ? "REFRESHED " + i.lastPartSn + "-" + i.lastPartIndex : "MISSED")), r && i.fragments.length > 0 && Object(a.mergeDetails)(r, i), !this.canLoad || !i.live) return; var l, u = void 0, c = void 0; if (i.canBlockReload && i.endSN && i.advanced) { var d = this.hls.config.lowLatencyMode, h = i.lastPartSn, f = i.endSN, p = i.lastPartIndex, g = h === f; -1 !== p ? (u = g ? f + 1 : h, c = g ? d ? 0 : p : p + 1) : u = f + 1; var v = i.age, m = v + i.ageHeader, y = Math.min(m - i.partTarget, 1.5 * i.targetduration); if (y > 0) { if (r && y > r.tuneInGoal) this.warn("CDN Tune-in goal increased from: " + r.tuneInGoal + " to: " + y + " with playlist age: " + i.age), y = 0; else { var A = Math.floor(y / i.targetduration); u += A, void 0 !== c && (c += Math.round(y % i.targetduration / i.partTarget)), this.log("CDN Tune-in age: " + i.ageHeader + "s last advanced " + v.toFixed(2) + "s goal: " + y + " skip sn " + A + " to part " + c) } i.tuneInGoal = y } if (l = this.getDeliveryDirectives(i, e.deliveryDirectives, u, c), d || !g) return void this.loadPlaylist(l) } else l = this.getDeliveryDirectives(i, e.deliveryDirectives, u, c); var E = Object(a.computeReloadInterval)(i, s); void 0 !== u && i.canBlockReload && (E -= i.partTarget || 1), this.log("reload live playlist " + t + " in " + Math.round(E) + " ms"), this.timer = self.setTimeout((function () { return n.loadPlaylist(l) }), E) } else this.clearTimer() }, e.getDeliveryDirectives = function (t, e, r, n) { var a = Object(i.getSkipValue)(t, r); return null != e && e.skip && t.deltaUpdateFailed && (r = e.msn, n = e.part, a = i.HlsSkip.No), new i.HlsUrlParameters(r, n, a) }, e.retryLoadingOrFail = function (t) { var e, r = this, n = this.hls.config, i = this.retryCount < n.levelLoadingMaxRetry; if (i) if (this.retryCount++, t.details.indexOf("LoadTimeOut") > -1 && null !== (e = t.context) && void 0 !== e && e.deliveryDirectives) this.warn("retry playlist loading #" + this.retryCount + ' after "' + t.details + '"'), this.loadPlaylist(); else { var a = Math.min(Math.pow(2, this.retryCount) * n.levelLoadingRetryDelay, n.levelLoadingMaxRetryTimeout); this.timer = self.setTimeout((function () { return r.loadPlaylist() }), a), this.warn("retry playlist loading #" + this.retryCount + " in " + a + ' ms after "' + t.details + '"') } else this.warn('cannot recover from error "' + t.details + '"'), this.clearTimer(), t.fatal = !0; return i }, t }() }, "./src/controller/base-stream-controller.ts":
/*!**************************************************!*\
    !*** ./src/controller/base-stream-controller.ts ***!
    \**************************************************/
/*! exports provided: State, default */function (t, e, r) { r.r(e), r.d(e, "State", (function () { return T })), r.d(e, "default", (function () { return b })); var n = r(/*! ./src/polyfills/number */"./src/polyfills/number.ts"), i = r(/*! ../task-loop */"./src/task-loop.ts"), a = r(/*! ./fragment-tracker */"./src/controller/fragment-tracker.ts"), s = r(/*! ../utils/buffer-helper */"./src/utils/buffer-helper.ts"), o = r(/*! ../utils/logger */"./src/utils/logger.ts"), l = r(/*! ../events */"./src/events.ts"), u = r(/*! ../errors */"./src/errors.ts"), c = r(/*! ../types/transmuxer */"./src/types/transmuxer.ts"), d = r(/*! ../utils/mp4-tools */"./src/utils/mp4-tools.ts"), h = r(/*! ../utils/discontinuities */"./src/utils/discontinuities.ts"), f = r(/*! ./fragment-finders */"./src/controller/fragment-finders.ts"), p = r(/*! ./level-helper */"./src/controller/level-helper.ts"), g = r(/*! ../loader/fragment-loader */"./src/loader/fragment-loader.ts"), v = r(/*! ../crypt/decrypter */"./src/crypt/decrypter.ts"), m = r(/*! ../utils/time-ranges */"./src/utils/time-ranges.ts"), y = r(/*! ../types/loader */"./src/types/loader.ts"); function A(t, e) { for (var r = 0; r < e.length; r++) { var n = e[r]; n.enumerable = n.enumerable || !1, n.configurable = !0, "value" in n && (n.writable = !0), Object.defineProperty(t, n.key, n) } } function E(t, e) { return E = Object.setPrototypeOf || function (t, e) { return t.__proto__ = e, t }, E(t, e) } var T = { STOPPED: "STOPPED", IDLE: "IDLE", KEY_LOADING: "KEY_LOADING", FRAG_LOADING: "FRAG_LOADING", FRAG_LOADING_WAITING_RETRY: "FRAG_LOADING_WAITING_RETRY", WAITING_TRACK: "WAITING_TRACK", PARSING: "PARSING", PARSED: "PARSED", BACKTRACKING: "BACKTRACKING", ENDED: "ENDED", ERROR: "ERROR", WAITING_INIT_PTS: "WAITING_INIT_PTS", WAITING_LEVEL: "WAITING_LEVEL" }, b = function (t) { var e, r; function i(e, r, n) { var i; return (i = t.call(this) || this).hls = void 0, i.fragPrevious = null, i.fragCurrent = null, i.fragmentTracker = void 0, i.transmuxer = null, i._state = T.STOPPED, i.media = void 0, i.mediaBuffer = void 0, i.config = void 0, i.bitrateTest = !1, i.lastCurrentTime = 0, i.nextLoadPosition = 0, i.startPosition = 0, i.loadedmetadata = !1, i.fragLoadError = 0, i.retryDate = 0, i.levels = null, i.fragmentLoader = void 0, i.levelLastLoaded = null, i.startFragRequested = !1, i.decrypter = void 0, i.initPTS = [], i.onvseeking = null, i.onvended = null, i.logPrefix = "", i.log = void 0, i.warn = void 0, i.logPrefix = n, i.log = o.logger.log.bind(o.logger, n + ":"), i.warn = o.logger.warn.bind(o.logger, n + ":"), i.hls = e, i.fragmentLoader = new g.default(e.config), i.fragmentTracker = r, i.config = e.config, i.decrypter = new v.default(e, e.config), e.on(l.Events.KEY_LOADED, i.onKeyLoaded, function (t) { if (void 0 === t) throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); return t }(i)), i } r = t, (e = i).prototype = Object.create(r.prototype), e.prototype.constructor = e, E(e, r); var b, k, S, _ = i.prototype; return _.doTick = function () { this.onTickEnd() }, _.onTickEnd = function () { }, _.startLoad = function (t) { }, _.stopLoad = function () { this.fragmentLoader.abort(); var t = this.fragCurrent; t && this.fragmentTracker.removeFragment(t), this.resetTransmuxer(), this.fragCurrent = null, this.fragPrevious = null, this.clearInterval(), this.clearNextTick(), this.state = T.STOPPED }, _._streamEnded = function (t, e) { var r = this.fragCurrent, n = this.fragmentTracker; if (!e.live && r && r.sn >= e.endSN && !t.nextStart) { var i = e.partList; if (null != i && i.length) { var o = i[i.length - 1]; return s.BufferHelper.isBuffered(this.media, o.start + o.duration / 2) } var l = n.getState(r); return l === a.FragmentState.PARTIAL || l === a.FragmentState.OK } return !1 }, _.onMediaAttached = function (t, e) { var r = this.media = this.mediaBuffer = e.media; this.onvseeking = this.onMediaSeeking.bind(this), this.onvended = this.onMediaEnded.bind(this), r.addEventListener("seeking", this.onvseeking), r.addEventListener("ended", this.onvended); var n = this.config; this.levels && n.autoStartLoad && this.state === T.STOPPED && this.startLoad(n.startPosition) }, _.onMediaDetaching = function () { var t = this.media; null != t && t.ended && (this.log("MSE detaching and video ended, reset startPosition"), this.startPosition = this.lastCurrentTime = 0), t && (t.removeEventListener("seeking", this.onvseeking), t.removeEventListener("ended", this.onvended), this.onvseeking = this.onvended = null), this.media = this.mediaBuffer = null, this.loadedmetadata = !1, this.fragmentTracker.removeAllFragments(), this.stopLoad() }, _.onMediaSeeking = function () { var t = this.config, e = this.fragCurrent, r = this.media, i = this.mediaBuffer, a = this.state, o = r ? r.currentTime : 0, l = s.BufferHelper.bufferInfo(i || r, o, t.maxBufferHole); if (this.log("media seeking to " + (Object(n.isFiniteNumber)(o) ? o.toFixed(3) : o) + ", state: " + a), a === T.ENDED) this.resetLoadingState(); else if (e && !l.len) { var u = t.maxFragLookUpTolerance, c = e.start - u, d = o > e.start + e.duration + u; (o < c || d) && (d && e.loader && (this.log("seeking outside of buffer while fragment load in progress, cancel fragment load"), e.loader.abort()), this.resetLoadingState()) } r && (this.lastCurrentTime = o), this.loadedmetadata || l.len || (this.nextLoadPosition = this.startPosition = o), this.tickImmediate() }, _.onMediaEnded = function () { this.startPosition = this.lastCurrentTime = 0 }, _.onKeyLoaded = function (t, e) { if (this.state === T.KEY_LOADING && e.frag === this.fragCurrent && this.levels) { this.state = T.IDLE; var r = this.levels[e.frag.level].details; r && this.loadFragment(e.frag, r, e.frag.start) } }, _.onHandlerDestroying = function () { this.stopLoad(), t.prototype.onHandlerDestroying.call(this) }, _.onHandlerDestroyed = function () { this.state = T.STOPPED, this.hls.off(l.Events.KEY_LOADED, this.onKeyLoaded, this), this.fragmentLoader && this.fragmentLoader.destroy(), this.decrypter && this.decrypter.destroy(), this.hls = this.log = this.warn = this.decrypter = this.fragmentLoader = this.fragmentTracker = null, t.prototype.onHandlerDestroyed.call(this) }, _.loadKey = function (t, e) { this.log("Loading key for " + t.sn + " of [" + e.startSN + "-" + e.endSN + "], " + ("[stream-controller]" === this.logPrefix ? "level" : "track") + " " + t.level), this.state = T.KEY_LOADING, this.fragCurrent = t, this.hls.trigger(l.Events.KEY_LOADING, { frag: t }) }, _.loadFragment = function (t, e, r) { this._loadFragForPlayback(t, e, r) }, _._loadFragForPlayback = function (t, e, r) { var n = this; this._doFragLoad(t, e, r, (function (e) { if (n.fragContextChanged(t)) return n.warn("Fragment " + t.sn + (e.part ? " p: " + e.part.index : "") + " of level " + t.level + " was dropped during download."), void n.fragmentTracker.removeFragment(t); t.stats.chunkCount++, n._handleFragmentLoadProgress(e) })).then((function (e) { if (e) { n.fragLoadError = 0; var r = n.state; if (!n.fragContextChanged(t)) return "payload" in e && (n.log("Loaded fragment " + t.sn + " of level " + t.level), n.hls.trigger(l.Events.FRAG_LOADED, e), n.state === T.BACKTRACKING) ? (n.fragmentTracker.backtrack(t, e), void n.resetFragmentLoading(t)) : void n._handleFragmentLoadComplete(e); (r === T.FRAG_LOADING || r === T.BACKTRACKING || !n.fragCurrent && r === T.PARSING) && (n.fragmentTracker.removeFragment(t), n.state = T.IDLE) } })).catch((function (e) { n.warn(e), n.resetFragmentLoading(t) })) }, _.flushMainBuffer = function (t, e, r) { if (void 0 === r && (r = null), t - e) { var n = { startOffset: t, endOffset: e, type: r }; this.fragLoadError = 0, this.hls.trigger(l.Events.BUFFER_FLUSHING, n) } }, _._loadInitSegment = function (t) { var e = this; this._doFragLoad(t).then((function (r) { if (!r || e.fragContextChanged(t) || !e.levels) throw new Error("init load aborted"); return r })).then((function (r) { var n = e.hls, i = r.payload, a = t.decryptdata; if (i && i.byteLength > 0 && a && a.key && a.iv && "AES-128" === a.method) { var s = self.performance.now(); return e.decrypter.webCryptoDecrypt(new Uint8Array(i), a.key.buffer, a.iv.buffer).then((function (e) { var i = self.performance.now(); return n.trigger(l.Events.FRAG_DECRYPTED, { frag: t, payload: e, stats: { tstart: s, tdecrypt: i } }), r.payload = e, r })) } return r })).then((function (r) { var n = e.fragCurrent, i = e.hls, a = e.levels; if (!a) throw new Error("init load aborted, missing levels"); var s = a[t.level].details; console.assert(s, "Level details are defined when init segment is loaded"); var o = t.stats; e.state = T.IDLE, e.fragLoadError = 0, t.data = new Uint8Array(r.payload), o.parsing.start = o.buffering.start = self.performance.now(), o.parsing.end = o.buffering.end = self.performance.now(), r.frag === n && i.trigger(l.Events.FRAG_BUFFERED, { stats: o, frag: n, part: null, id: t.type }), e.tick() })).catch((function (r) { e.warn(r), e.resetFragmentLoading(t) })) }, _.fragContextChanged = function (t) { var e = this.fragCurrent; return !t || !e || t.level !== e.level || t.sn !== e.sn || t.urlId !== e.urlId }, _.fragBufferedComplete = function (t, e) { var r = this.mediaBuffer ? this.mediaBuffer : this.media; this.log("Buffered " + t.type + " sn: " + t.sn + (e ? " part: " + e.index : "") + " of " + ("[stream-controller]" === this.logPrefix ? "level" : "track") + " " + t.level + " " + m.default.toString(s.BufferHelper.getBuffered(r))), this.state = T.IDLE, this.tick() }, _._handleFragmentLoadComplete = function (t) { var e = this.transmuxer; if (e) { var r = t.frag, n = t.part, i = t.partsLoaded, a = !i || 0 === i.length || i.some((function (t) { return !t })), s = new c.ChunkMetadata(r.level, r.sn, r.stats.chunkCount + 1, 0, n ? n.index : -1, !a); e.flush(s) } }, _._handleFragmentLoadProgress = function (t) { }, _._doFragLoad = function (t, e, r, i) { var a = this; if (void 0 === r && (r = null), !this.levels) throw new Error("frag load aborted, missing levels"); if (r = Math.max(t.start, r || 0), this.config.lowLatencyMode && e) { var s = e.partList; if (s && i) { r > t.end && e.fragmentHint && (t = e.fragmentHint); var o = this.getNextPart(s, t, r); if (o > -1) { var u = s[o]; return this.log("Loading part sn: " + t.sn + " p: " + u.index + " cc: " + t.cc + " of playlist [" + e.startSN + "-" + e.endSN + "] parts [0-" + o + "-" + (s.length - 1) + "] " + ("[stream-controller]" === this.logPrefix ? "level" : "track") + ": " + t.level + ", target: " + parseFloat(r.toFixed(3))), this.nextLoadPosition = u.start + u.duration, this.state = T.FRAG_LOADING, this.hls.trigger(l.Events.FRAG_LOADING, { frag: t, part: s[o], targetBufferTime: r }), this.doFragPartsLoad(t, s, o, i).catch((function (t) { return a.handleFragLoadError(t) })) } if (!t.url || this.loadedEndOfParts(s, r)) return Promise.resolve(null) } } return this.log("Loading fragment " + t.sn + " cc: " + t.cc + " " + (e ? "of [" + e.startSN + "-" + e.endSN + "] " : "") + ("[stream-controller]" === this.logPrefix ? "level" : "track") + ": " + t.level + ", target: " + parseFloat(r.toFixed(3))), Object(n.isFiniteNumber)(t.sn) && !this.bitrateTest && (this.nextLoadPosition = t.start + t.duration), this.state = T.FRAG_LOADING, this.hls.trigger(l.Events.FRAG_LOADING, { frag: t, targetBufferTime: r }), this.fragmentLoader.load(t, i).catch((function (t) { return a.handleFragLoadError(t) })) }, _.doFragPartsLoad = function (t, e, r, n) { var i = this; return new Promise((function (a, s) { var o = []; !function r(u) { var c = e[u]; i.fragmentLoader.loadPart(t, c, n).then((function (n) { o[c.index] = n; var s = n.part; i.hls.trigger(l.Events.FRAG_LOADED, n); var d = e[u + 1]; if (!d || d.fragment !== t) return a({ frag: t, part: s, partsLoaded: o }); r(u + 1) })).catch(s) }(r) })) }, _.handleFragLoadError = function (t) { var e = t.data; return e && e.details === u.ErrorDetails.INTERNAL_ABORTED ? this.handleFragLoadAborted(e.frag, e.part) : this.hls.trigger(l.Events.ERROR, e), null }, _._handleTransmuxerFlush = function (t) { var e = this.getCurrentContext(t); if (e && this.state === T.PARSING) { var r = e.frag, n = e.part, i = e.level, a = self.performance.now(); r.stats.parsing.end = a, n && (n.stats.parsing.end = a), this.updateLevelTiming(r, n, i, t.partial) } else this.fragCurrent || (this.state = T.IDLE) }, _.getCurrentContext = function (t) { var e = this.levels, r = t.level, n = t.sn, i = t.part; if (!e || !e[r]) return this.warn("Levels object was unset while buffering fragment " + n + " of level " + r + ". The current chunk will not be buffered."), null; var a = e[r], s = i > -1 ? Object(p.getPartWith)(a, n, i) : null, o = s ? s.fragment : Object(p.getFragmentWithSN)(a, n, this.fragCurrent); return o ? { frag: o, part: s, level: a } : null }, _.bufferFragmentData = function (t, e, r, n) { if (t && this.state === T.PARSING) { var i = t.data1, a = t.data2, s = i; if (i && a && (s = Object(d.appendUint8Array)(i, a)), s && s.length) { var o = { type: t.type, frag: e, part: r, chunkMeta: n, parent: e.type, data: s }; this.hls.trigger(l.Events.BUFFER_APPENDING, o), t.dropped && t.independent && !r && this.flushBufferGap(e) } } }, _.flushBufferGap = function (t) { var e = this.media; if (e) if (s.BufferHelper.isBuffered(e, e.currentTime)) { var r = e.currentTime, n = s.BufferHelper.bufferInfo(e, r, 0), i = t.duration, a = Math.min(2 * this.config.maxFragLookUpTolerance, .25 * i), o = Math.max(Math.min(t.start - a, n.end - a), r + a); t.start - o > a && this.flushMainBuffer(o, t.start) } else this.flushMainBuffer(0, t.start) }, _.getFwdBufferInfo = function (t, e) { var r = this.config, i = this.getLoadPosition(); if (!Object(n.isFiniteNumber)(i)) return null; var a = s.BufferHelper.bufferInfo(t, i, r.maxBufferHole); if (0 === a.len && void 0 !== a.nextStart) { var o = this.fragmentTracker.getBufferedFrag(i, e); if (o && a.nextStart < o.end) return s.BufferHelper.bufferInfo(t, i, Math.max(a.nextStart, r.maxBufferHole)) } return a }, _.getMaxBufferLength = function (t) { var e, r = this.config; return e = t ? Math.max(8 * r.maxBufferSize / t, r.maxBufferLength) : r.maxBufferLength, Math.min(e, r.maxMaxBufferLength) }, _.reduceMaxBufferLength = function (t) { var e = this.config, r = t || e.maxBufferLength; return e.maxMaxBufferLength >= r && (e.maxMaxBufferLength /= 2, this.warn("Reduce max buffer length to " + e.maxMaxBufferLength + "s"), !0) }, _.getNextFragment = function (t, e) { var r, n, i = e.fragments, a = i.length; if (!a) return null; var s, o = this.config, l = i[0].start; if (e.live) { var u = o.initialLiveManifestSize; if (a < u) return this.warn("Not enough fragments to start playback (have: " + a + ", need: " + u + ")"), null; e.PTSKnown || this.startFragRequested || -1 !== this.startPosition || (s = this.getInitialLiveFragment(e, i), this.startPosition = s ? this.hls.liveSyncPosition || s.start : t) } else t <= l && (s = i[0]); if (!s) { var c = o.lowLatencyMode ? e.partEnd : e.fragmentEnd; s = this.getFragmentAtPosition(t, c, e) } return null === (r = s) || void 0 === r || !r.initSegment || null !== (n = s) && void 0 !== n && n.initSegment.data || this.bitrateTest || (s = s.initSegment), s }, _.getNextPart = function (t, e, r) { for (var n = -1, i = !1, a = !0, s = 0, o = t.length; s < o; s++) { var l = t[s]; if (a = a && !l.independent, n > -1 && r < l.start) break; var u = l.loaded; !u && (i || l.independent || a) && l.fragment === e && (n = s), i = u } return n }, _.loadedEndOfParts = function (t, e) { var r = t[t.length - 1]; return r && e > r.start && r.loaded }, _.getInitialLiveFragment = function (t, e) { var r = this.fragPrevious, n = null; if (r) { if (t.hasProgramDateTime && (this.log("Live playlist, switching playlist, load frag with same PDT: " + r.programDateTime), n = Object(f.findFragmentByPDT)(e, r.endProgramDateTime, this.config.maxFragLookUpTolerance)), !n) { var i = r.sn + 1; if (i >= t.startSN && i <= t.endSN) { var a = e[i - t.startSN]; r.cc === a.cc && (n = a, this.log("Live playlist, switching playlist, load frag with next SN: " + n.sn)) } n || (n = Object(f.findFragWithCC)(e, r.cc)) && this.log("Live playlist, switching playlist, load frag with same CC: " + n.sn) } } else { var s = this.hls.liveSyncPosition; null !== s && (n = this.getFragmentAtPosition(s, this.bitrateTest ? t.fragmentEnd : t.edge, t)) } return n }, _.getFragmentAtPosition = function (t, e, r) { var n, i = this.config, s = this.fragPrevious, o = r.fragments, l = r.endSN, u = r.fragmentHint, c = i.maxFragLookUpTolerance, d = !!(i.lowLatencyMode && r.partList && u); if (d && u && !this.bitrateTest && (o = o.concat(u), l = u.sn), t < e) { var h = t > e - c ? 0 : c; n = Object(f.findFragmentByPTS)(s, o, t, h) } else n = o[o.length - 1]; if (n) { var p = n.sn - r.startSN, g = s && n.level === s.level, v = o[p + 1]; if (this.fragmentTracker.getState(n) === a.FragmentState.BACKTRACKED) { n = null; for (var m = p; o[m] && this.fragmentTracker.getState(o[m]) === a.FragmentState.BACKTRACKED;)n = s ? o[m--] : o[--m]; n || (n = v) } else s && n.sn === s.sn && !d && g && (n.sn < l && this.fragmentTracker.getState(v) !== a.FragmentState.OK ? (this.log("SN " + n.sn + " just loaded, load next one: " + v.sn), n = v) : n = null) } return n }, _.synchronizeToLiveEdge = function (t) { var e = this.config, r = this.media; if (r) { var n = this.hls.liveSyncPosition, i = r.currentTime, a = t.fragments[0].start, s = t.edge, o = i >= a - e.maxFragLookUpTolerance && i <= s; if (null !== n && r.duration > n && (i < n || !o)) { var l = void 0 !== e.liveMaxLatencyDuration ? e.liveMaxLatencyDuration : e.liveMaxLatencyDurationCount * t.targetduration; (!o && r.readyState < 4 || i < s - l) && (this.loadedmetadata || (this.nextLoadPosition = n), r.readyState && (this.warn("Playback: " + i.toFixed(3) + " is located too far from the end of live sliding playlist: " + s + ", reset currentTime to : " + n.toFixed(3)), r.currentTime = n)) } } }, _.alignPlaylists = function (t, e) { var r = this.levels, i = this.levelLastLoaded, a = this.fragPrevious, s = null !== i ? r[i] : null, o = t.fragments.length; if (!o) return this.warn("No fragments in live playlist"), 0; var l = t.fragments[0].start, u = !e, c = t.alignedSliding && Object(n.isFiniteNumber)(l); if (u || !c && !l) { Object(h.alignStream)(a, s, t); var d = t.fragments[0].start; return this.log("Live playlist sliding: " + d.toFixed(2) + " start-sn: " + (e ? e.startSN : "na") + "->" + t.startSN + " prev-sn: " + (a ? a.sn : "na") + " fragments: " + o), d } return l }, _.waitForCdnTuneIn = function (t) { return t.live && t.canBlockReload && t.tuneInGoal > Math.max(t.partHoldBack, 3 * t.partTarget) }, _.setStartPosition = function (t, e) { var r = this.startPosition; if (r < e && (r = -1), -1 === r || -1 === this.lastCurrentTime) { var i = t.startTimeOffset; Object(n.isFiniteNumber)(i) ? (r = e + i, i < 0 && (r += t.totalduration), r = Math.min(Math.max(e, r), e + t.totalduration), this.log("Start time offset " + i + " found in playlist, adjust startPosition to " + r), this.startPosition = r) : t.live ? r = this.hls.liveSyncPosition || e : this.startPosition = r = 0, this.lastCurrentTime = r } this.nextLoadPosition = r }, _.getLoadPosition = function () { var t = this.media, e = 0; return this.loadedmetadata && t ? e = t.currentTime : this.nextLoadPosition && (e = this.nextLoadPosition), e }, _.handleFragLoadAborted = function (t, e) { this.transmuxer && "initSegment" !== t.sn && t.stats.aborted && (this.warn("Fragment " + t.sn + (e ? " part" + e.index : "") + " of level " + t.level + " was aborted"), this.resetFragmentLoading(t)) }, _.resetFragmentLoading = function (t) { this.fragCurrent && this.fragContextChanged(t) || (this.state = T.IDLE) }, _.onFragmentOrKeyLoadError = function (t, e) { if (!e.fatal) { var r = e.frag; if (r && r.type === t) { var n = this.fragCurrent; console.assert(n && r.sn === n.sn && r.level === n.level && r.urlId === n.urlId, "Frag load error must match current frag to retry"); var i = this.config; if (this.fragLoadError + 1 <= i.fragLoadingMaxRetry) { if (this.resetLiveStartWhenNotLoaded(r.level)) return; var a = Math.min(Math.pow(2, this.fragLoadError) * i.fragLoadingRetryDelay, i.fragLoadingMaxRetryTimeout); this.warn("Fragment " + r.sn + " of " + t + " " + r.level + " failed to load, retrying in " + a + "ms"), this.retryDate = self.performance.now() + a, this.fragLoadError++, this.state = T.FRAG_LOADING_WAITING_RETRY } else e.levelRetry ? (t === y.PlaylistLevelType.AUDIO && (this.fragCurrent = null), this.fragLoadError = 0, this.state = T.IDLE) : (o.logger.error(e.details + " reaches max retry, redispatch as fatal ..."), e.fatal = !0, this.hls.stopLoad(), this.state = T.ERROR) } } }, _.afterBufferFlushed = function (t, e, r) { if (t) { var n = s.BufferHelper.getBuffered(t); this.fragmentTracker.detectEvictedFragments(e, n, r), this.state === T.ENDED && this.resetLoadingState() } }, _.resetLoadingState = function () { this.fragCurrent = null, this.fragPrevious = null, this.state = T.IDLE }, _.resetLiveStartWhenNotLoaded = function (t) { if (!this.loadedmetadata) { this.startFragRequested = !1; var e = this.levels ? this.levels[t].details : null; if (null != e && e.live) return this.startPosition = -1, this.setStartPosition(e, 0), this.resetLoadingState(), !0; this.nextLoadPosition = this.startPosition } return !1 }, _.updateLevelTiming = function (t, e, r, n) { var i = this, a = r.details; console.assert(!!a, "level.details must be defined"), Object.keys(t.elementaryStreams).reduce((function (e, s) { var o = t.elementaryStreams[s]; if (o) { var u = o.endPTS - o.startPTS; if (u <= 0) return i.warn("Could not parse fragment " + t.sn + " " + s + " duration reliably (" + u + ") resetting transmuxer to fallback to playlist timing"), i.resetTransmuxer(), e || !1; var c = n ? 0 : Object(p.updateFragPTSDTS)(a, t, o.startPTS, o.endPTS, o.startDTS, o.endDTS); return i.hls.trigger(l.Events.LEVEL_PTS_UPDATED, { details: a, level: r, drift: c, type: s, frag: t, start: o.startPTS, end: o.endPTS }), !0 } return e }), !1) ? (this.state = T.PARSED, this.hls.trigger(l.Events.FRAG_PARSED, { frag: t, part: e })) : this.resetLoadingState() }, _.resetTransmuxer = function () { this.transmuxer && (this.transmuxer.destroy(), this.transmuxer = null) }, b = i, (k = [{ key: "state", get: function () { return this._state }, set: function (t) { var e = this._state; e !== t && (this._state = t, this.log(e + "->" + t)) } }]) && A(b.prototype, k), S && A(b, S), i }(i.default) }, "./src/controller/buffer-controller.ts":
/*!*********************************************!*\
    !*** ./src/controller/buffer-controller.ts ***!
    \*********************************************/
/*! exports provided: default */function (t, e, r) { r.r(e), r.d(e, "default", (function () { return f })); var n = r(/*! ./src/polyfills/number */"./src/polyfills/number.ts"), i = r(/*! ../events */"./src/events.ts"), a = r(/*! ../utils/logger */"./src/utils/logger.ts"), s = r(/*! ../errors */"./src/errors.ts"), o = r(/*! ../utils/buffer-helper */"./src/utils/buffer-helper.ts"), l = r(/*! ../utils/mediasource-helper */"./src/utils/mediasource-helper.ts"), u = r(/*! ../loader/fragment */"./src/loader/fragment.ts"), c = r(/*! ./buffer-operation-queue */"./src/controller/buffer-operation-queue.ts"), d = Object(l.getMediaSource)(), h = /([ha]vc.)(?:\.[^.,]+)+/, f = function () { function t(t) { var e = this; this.details = null, this._objectUrl = null, this.operationQueue = void 0, this.listeners = void 0, this.hls = void 0, this.bufferCodecEventsExpected = 0, this._bufferCodecEventsTotal = 0, this.media = null, this.mediaSource = null, this.appendError = 0, this.tracks = {}, this.pendingTracks = {}, this.sourceBuffer = void 0, this._onMediaSourceOpen = function () { var t = e.hls, r = e.media, n = e.mediaSource; a.logger.log("[buffer-controller]: Media source opened"), r && (e.updateMediaElementDuration(), t.trigger(i.Events.MEDIA_ATTACHED, { media: r })), n && n.removeEventListener("sourceopen", e._onMediaSourceOpen), e.checkPendingTracks() }, this._onMediaSourceClose = function () { a.logger.log("[buffer-controller]: Media source closed") }, this._onMediaSourceEnded = function () { a.logger.log("[buffer-controller]: Media source ended") }, this.hls = t, this._initSourceBuffer(), this.registerListeners() } var e = t.prototype; return e.hasSourceTypes = function () { return this.getSourceBufferTypes().length > 0 || Object.keys(this.pendingTracks).length > 0 }, e.destroy = function () { this.unregisterListeners(), this.details = null }, e.registerListeners = function () { var t = this.hls; t.on(i.Events.MEDIA_ATTACHING, this.onMediaAttaching, this), t.on(i.Events.MEDIA_DETACHING, this.onMediaDetaching, this), t.on(i.Events.MANIFEST_PARSED, this.onManifestParsed, this), t.on(i.Events.BUFFER_RESET, this.onBufferReset, this), t.on(i.Events.BUFFER_APPENDING, this.onBufferAppending, this), t.on(i.Events.BUFFER_CODECS, this.onBufferCodecs, this), t.on(i.Events.BUFFER_EOS, this.onBufferEos, this), t.on(i.Events.BUFFER_FLUSHING, this.onBufferFlushing, this), t.on(i.Events.LEVEL_UPDATED, this.onLevelUpdated, this), t.on(i.Events.FRAG_PARSED, this.onFragParsed, this), t.on(i.Events.FRAG_CHANGED, this.onFragChanged, this) }, e.unregisterListeners = function () { var t = this.hls; t.off(i.Events.MEDIA_ATTACHING, this.onMediaAttaching, this), t.off(i.Events.MEDIA_DETACHING, this.onMediaDetaching, this), t.off(i.Events.MANIFEST_PARSED, this.onManifestParsed, this), t.off(i.Events.BUFFER_RESET, this.onBufferReset, this), t.off(i.Events.BUFFER_APPENDING, this.onBufferAppending, this), t.off(i.Events.BUFFER_CODECS, this.onBufferCodecs, this), t.off(i.Events.BUFFER_EOS, this.onBufferEos, this), t.off(i.Events.BUFFER_FLUSHING, this.onBufferFlushing, this), t.off(i.Events.LEVEL_UPDATED, this.onLevelUpdated, this), t.off(i.Events.FRAG_PARSED, this.onFragParsed, this), t.off(i.Events.FRAG_CHANGED, this.onFragChanged, this) }, e._initSourceBuffer = function () { this.sourceBuffer = {}, this.operationQueue = new c.default(this.sourceBuffer), this.listeners = { audio: [], video: [], audiovideo: [] } }, e.onManifestParsed = function (t, e) { var r = 2; (e.audio && !e.video || !e.altAudio) && (r = 1), this.bufferCodecEventsExpected = this._bufferCodecEventsTotal = r, this.details = null, a.logger.log(this.bufferCodecEventsExpected + " bufferCodec event(s) expected") }, e.onMediaAttaching = function (t, e) { var r = this.media = e.media; if (r && d) { var n = this.mediaSource = new d; n.addEventListener("sourceopen", this._onMediaSourceOpen), n.addEventListener("sourceended", this._onMediaSourceEnded), n.addEventListener("sourceclose", this._onMediaSourceClose), r.src = self.URL.createObjectURL(n), this._objectUrl = r.src } }, e.onMediaDetaching = function () { var t = this.media, e = this.mediaSource, r = this._objectUrl; if (e) { if (a.logger.log("[buffer-controller]: media source detaching"), "open" === e.readyState) try { e.endOfStream() } catch (t) { a.logger.warn("[buffer-controller]: onMediaDetaching: " + t.message + " while calling endOfStream") } this.onBufferReset(), e.removeEventListener("sourceopen", this._onMediaSourceOpen), e.removeEventListener("sourceended", this._onMediaSourceEnded), e.removeEventListener("sourceclose", this._onMediaSourceClose), t && (r && self.URL.revokeObjectURL(r), t.src === r ? (t.removeAttribute("src"), t.load()) : a.logger.warn("[buffer-controller]: media.src was changed by a third party - skip cleanup")), this.mediaSource = null, this.media = null, this._objectUrl = null, this.bufferCodecEventsExpected = this._bufferCodecEventsTotal, this.pendingTracks = {}, this.tracks = {} } this.hls.trigger(i.Events.MEDIA_DETACHED, void 0) }, e.onBufferReset = function () { var t = this; this.getSourceBufferTypes().forEach((function (e) { var r = t.sourceBuffer[e]; try { r && (t.removeBufferListeners(e), t.mediaSource && t.mediaSource.removeSourceBuffer(r), t.sourceBuffer[e] = void 0) } catch (t) { a.logger.warn("[buffer-controller]: Failed to reset the " + e + " buffer", t) } })), this._initSourceBuffer() }, e.onBufferCodecs = function (t, e) { var r = this, n = this.getSourceBufferTypes().length; Object.keys(e).forEach((function (t) { if (n) { var i = r.tracks[t]; if (i && "function" == typeof i.buffer.changeType) { var a = e[t], s = a.codec, o = a.levelCodec, l = a.container; if ((i.levelCodec || i.codec).replace(h, "$1") !== (o || s).replace(h, "$1")) { var u = l + ";codecs=" + (o || s); r.appendChangeType(t, u) } } } else r.pendingTracks[t] = e[t] })), n || (this.bufferCodecEventsExpected = Math.max(this.bufferCodecEventsExpected - 1, 0), this.mediaSource && "open" === this.mediaSource.readyState && this.checkPendingTracks()) }, e.appendChangeType = function (t, e) { var r = this, n = this.operationQueue, i = { execute: function () { var i = r.sourceBuffer[t]; i && (a.logger.log("[buffer-controller]: changing " + t + " sourceBuffer type to " + e), i.changeType(e)), n.shiftAndExecuteNext(t) }, onStart: function () { }, onComplete: function () { }, onError: function (e) { a.logger.warn("[buffer-controller]: Failed to change " + t + " SourceBuffer type", e) } }; n.append(i, t) }, e.onBufferAppending = function (t, e) { var r = this, n = this.hls, l = this.operationQueue, u = this.tracks, c = e.data, d = e.type, h = e.frag, f = e.part, p = e.chunkMeta, g = p.buffering[d], v = self.performance.now(); g.start = v; var m = h.stats.buffering, y = f ? f.stats.buffering : null; 0 === m.start && (m.start = v), y && 0 === y.start && (y.start = v); var A = u.audio, E = "audio" === d && 1 === p.id && "audio/mpeg" === (null == A ? void 0 : A.container), T = { execute: function () { if (g.executeStart = self.performance.now(), E) { var t = r.sourceBuffer[d]; if (t) { var e = h.start - t.timestampOffset; Math.abs(e) >= .1 && (a.logger.log("[buffer-controller]: Updating audio SourceBuffer timestampOffset to " + h.start + " (delta: " + e + ") sn: " + h.sn + ")"), t.timestampOffset = h.start) } } r.appendExecutor(c, d) }, onStart: function () { }, onComplete: function () { var t = self.performance.now(); g.executeEnd = g.end = t, 0 === m.first && (m.first = t), y && 0 === y.first && (y.first = t); var e = r.sourceBuffer, n = {}; for (var a in e) n[a] = o.BufferHelper.getBuffered(e[a]); r.appendError = 0, r.hls.trigger(i.Events.BUFFER_APPENDED, { type: d, frag: h, part: f, chunkMeta: p, parent: h.type, timeRanges: n }) }, onError: function (t) { a.logger.error("[buffer-controller]: Error encountered while trying to append to the " + d + " SourceBuffer", t); var e = { type: s.ErrorTypes.MEDIA_ERROR, parent: h.type, details: s.ErrorDetails.BUFFER_APPEND_ERROR, err: t, fatal: !1 }; t.code === DOMException.QUOTA_EXCEEDED_ERR ? e.details = s.ErrorDetails.BUFFER_FULL_ERROR : (r.appendError++, e.details = s.ErrorDetails.BUFFER_APPEND_ERROR, r.appendError > n.config.appendErrorMaxRetry && (a.logger.error("[buffer-controller]: Failed " + n.config.appendErrorMaxRetry + " times to append segment in sourceBuffer"), e.fatal = !0)), n.trigger(i.Events.ERROR, e) } }; l.append(T, d) }, e.onBufferFlushing = function (t, e) { var r = this, n = this.operationQueue, s = function (t) { return { execute: r.removeExecutor.bind(r, t, e.startOffset, e.endOffset), onStart: function () { }, onComplete: function () { r.hls.trigger(i.Events.BUFFER_FLUSHED, { type: t }) }, onError: function (e) { a.logger.warn("[buffer-controller]: Failed to remove from " + t + " SourceBuffer", e) } } }; e.type ? n.append(s(e.type), e.type) : this.getSourceBufferTypes().forEach((function (t) { n.append(s(t), t) })) }, e.onFragParsed = function (t, e) { var r = this, n = e.frag, s = e.part, o = [], l = s ? s.elementaryStreams : n.elementaryStreams; l[u.ElementaryStreamTypes.AUDIOVIDEO] ? o.push("audiovideo") : (l[u.ElementaryStreamTypes.AUDIO] && o.push("audio"), l[u.ElementaryStreamTypes.VIDEO] && o.push("video")), 0 === o.length && a.logger.warn("Fragments must have at least one ElementaryStreamType set. type: " + n.type + " level: " + n.level + " sn: " + n.sn), this.blockBuffers((function () { var t = self.performance.now(); n.stats.buffering.end = t, s && (s.stats.buffering.end = t); var e = s ? s.stats : n.stats; r.hls.trigger(i.Events.FRAG_BUFFERED, { frag: n, part: s, stats: e, id: n.type }) }), o) }, e.onFragChanged = function (t, e) { this.flushBackBuffer() }, e.onBufferEos = function (t, e) { var r = this; this.getSourceBufferTypes().reduce((function (t, n) { var i = r.sourceBuffer[n]; return e.type && e.type !== n || i && !i.ended && (i.ended = !0, a.logger.log("[buffer-controller]: " + n + " sourceBuffer now EOS")), t && !(i && !i.ended) }), !0) && this.blockBuffers((function () { var t = r.mediaSource; t && "open" === t.readyState && t.endOfStream() })) }, e.onLevelUpdated = function (t, e) { var r = e.details; r.fragments.length && (this.details = r, this.getSourceBufferTypes().length ? this.blockBuffers(this.updateMediaElementDuration.bind(this)) : this.updateMediaElementDuration()) }, e.flushBackBuffer = function () { var t = this.hls, e = this.details, r = this.media, a = this.sourceBuffer; if (r && null !== e) { var s = this.getSourceBufferTypes(); if (s.length) { var l = e.live && null !== t.config.liveBackBufferLength ? t.config.liveBackBufferLength : t.config.backBufferLength; if (Object(n.isFiniteNumber)(l) && !(l < 0)) { var u = r.currentTime, c = e.levelTargetDuration, d = Math.max(l, c), h = Math.floor(u / c) * c - d; s.forEach((function (r) { var n = a[r]; if (n) { var s = o.BufferHelper.getBuffered(n); s.length > 0 && h > s.start(0) && (t.trigger(i.Events.BACK_BUFFER_REACHED, { bufferEnd: h }), e.live && t.trigger(i.Events.LIVE_BACK_BUFFER_REACHED, { bufferEnd: h }), t.trigger(i.Events.BUFFER_FLUSHING, { startOffset: 0, endOffset: h, type: r })) } })) } } } }, e.updateMediaElementDuration = function () { if (this.details && this.media && this.mediaSource && "open" === this.mediaSource.readyState) { var t = this.details, e = this.hls, r = this.media, i = this.mediaSource, s = t.fragments[0].start + t.totalduration, o = r.duration, l = Object(n.isFiniteNumber)(i.duration) ? i.duration : 0; t.live && e.config.liveDurationInfinity ? (a.logger.log("[buffer-controller]: Media Source duration is set to Infinity"), i.duration = 1 / 0, this.updateSeekableRange(t)) : (s > l && s > o || !Object(n.isFiniteNumber)(o)) && (a.logger.log("[buffer-controller]: Updating Media Source duration to " + s.toFixed(3)), i.duration = s) } }, e.updateSeekableRange = function (t) { var e = this.mediaSource, r = t.fragments; if (r.length && t.live && null != e && e.setLiveSeekableRange) { var n = Math.max(0, r[0].start), i = Math.max(n, n + t.totalduration); e.setLiveSeekableRange(n, i) } }, e.checkPendingTracks = function () { var t = this.bufferCodecEventsExpected, e = this.operationQueue, r = this.pendingTracks, n = Object.keys(r).length; if (n && !t || 2 === n) { this.createSourceBuffers(r), this.pendingTracks = {}; var a = this.getSourceBufferTypes(); if (0 === a.length) return void this.hls.trigger(i.Events.ERROR, { type: s.ErrorTypes.MEDIA_ERROR, details: s.ErrorDetails.BUFFER_INCOMPATIBLE_CODECS_ERROR, fatal: !0, reason: "could not create source buffer for media codec(s)" }); a.forEach((function (t) { e.executeNext(t) })) } }, e.createSourceBuffers = function (t) { var e = this.sourceBuffer, r = this.mediaSource; if (!r) throw Error("createSourceBuffers called when mediaSource was null"); var n = 0; for (var o in t) if (!e[o]) { var l = t[o]; if (!l) throw Error("source buffer exists for track " + o + ", however track does not"); var u = l.levelCodec || l.codec, c = l.container + ";codecs=" + u; a.logger.log("[buffer-controller]: creating sourceBuffer(" + c + ")"); try { var d = e[o] = r.addSourceBuffer(c), h = o; this.addBufferListener(h, "updatestart", this._onSBUpdateStart), this.addBufferListener(h, "updateend", this._onSBUpdateEnd), this.addBufferListener(h, "error", this._onSBUpdateError), this.tracks[o] = { buffer: d, codec: u, container: l.container, levelCodec: l.levelCodec, id: l.id }, n++ } catch (t) { a.logger.error("[buffer-controller]: error while trying to add sourceBuffer: " + t.message), this.hls.trigger(i.Events.ERROR, { type: s.ErrorTypes.MEDIA_ERROR, details: s.ErrorDetails.BUFFER_ADD_CODEC_ERROR, fatal: !1, error: t, mimeType: c }) } } n && this.hls.trigger(i.Events.BUFFER_CREATED, { tracks: this.tracks }) }, e._onSBUpdateStart = function (t) { this.operationQueue.current(t).onStart() }, e._onSBUpdateEnd = function (t) { var e = this.operationQueue; e.current(t).onComplete(), e.shiftAndExecuteNext(t) }, e._onSBUpdateError = function (t, e) { a.logger.error("[buffer-controller]: " + t + " SourceBuffer error", e), this.hls.trigger(i.Events.ERROR, { type: s.ErrorTypes.MEDIA_ERROR, details: s.ErrorDetails.BUFFER_APPENDING_ERROR, fatal: !1 }); var r = this.operationQueue.current(t); r && r.onError(e) }, e.removeExecutor = function (t, e, r) { var i = this.media, s = this.mediaSource, o = this.operationQueue, l = this.sourceBuffer[t]; if (!i || !s || !l) return a.logger.warn("[buffer-controller]: Attempting to remove from the " + t + " SourceBuffer, but it does not exist"), void o.shiftAndExecuteNext(t); var u = Object(n.isFiniteNumber)(i.duration) ? i.duration : 1 / 0, c = Object(n.isFiniteNumber)(s.duration) ? s.duration : 1 / 0, d = Math.max(0, e), h = Math.min(r, u, c); h > d ? (a.logger.log("[buffer-controller]: Removing [" + d + "," + h + "] from the " + t + " SourceBuffer"), console.assert(!l.updating, t + " sourceBuffer must not be updating"), l.remove(d, h)) : o.shiftAndExecuteNext(t) }, e.appendExecutor = function (t, e) { var r = this.operationQueue, n = this.sourceBuffer[e]; if (!n) return a.logger.warn("[buffer-controller]: Attempting to append to the " + e + " SourceBuffer, but it does not exist"), void r.shiftAndExecuteNext(e); n.ended = !1, console.assert(!n.updating, e + " sourceBuffer must not be updating"), n.appendBuffer(t) }, e.blockBuffers = function (t, e) { var r = this; if (void 0 === e && (e = this.getSourceBufferTypes()), e.length) { var n = this.operationQueue, i = e.map((function (t) { return n.appendBlocker(t) })); Promise.all(i).then((function () { t(), e.forEach((function (t) { var e = r.sourceBuffer[t]; e && e.updating || n.shiftAndExecuteNext(t) })) })) } else a.logger.log("[buffer-controller]: Blocking operation requested, but no SourceBuffers exist") }, e.getSourceBufferTypes = function () { return Object.keys(this.sourceBuffer) }, e.addBufferListener = function (t, e, r) { var n = this.sourceBuffer[t]; if (n) { var i = r.bind(this, t); this.listeners[t].push({ event: e, listener: i }), n.addEventListener(e, i) } }, e.removeBufferListeners = function (t) { var e = this.sourceBuffer[t]; e && this.listeners[t].forEach((function (t) { e.removeEventListener(t.event, t.listener) })) }, t }() }, "./src/controller/buffer-operation-queue.ts":
/*!**************************************************!*\
    !*** ./src/controller/buffer-operation-queue.ts ***!
    \**************************************************/
/*! exports provided: default */function (t, e, r) { r.r(e), r.d(e, "default", (function () { return i })); var n = r(/*! ../utils/logger */"./src/utils/logger.ts"), i = function () { function t(t) { this.buffers = void 0, this.queues = { video: [], audio: [], audiovideo: [] }, this.buffers = t } var e = t.prototype; return e.append = function (t, e) { var r = this.queues[e]; r.push(t), 1 === r.length && this.buffers[e] && this.executeNext(e) }, e.insertAbort = function (t, e) { this.queues[e].unshift(t), this.executeNext(e) }, e.appendBlocker = function (t) { var e, r = new Promise((function (t) { e = t })), n = { execute: e, onStart: function () { }, onComplete: function () { }, onError: function () { } }; return this.append(n, t), r }, e.executeNext = function (t) { var e = this.buffers, r = this.queues, i = e[t], a = r[t]; if (a.length) { var s = a[0]; try { s.execute() } catch (e) { n.logger.warn("[buffer-operation-queue]: Unhandled exception executing the current operation"), s.onError(e), i && i.updating || (a.shift(), this.executeNext(t)) } } }, e.shiftAndExecuteNext = function (t) { this.queues[t].shift(), this.executeNext(t) }, e.current = function (t) { return this.queues[t][0] }, t }() }, "./src/controller/cap-level-controller.ts":
/*!************************************************!*\
    !*** ./src/controller/cap-level-controller.ts ***!
    \************************************************/
/*! exports provided: default */function (t, e, r) { r.r(e); var n = r(/*! ../events */"./src/events.ts"); function i(t, e) { for (var r = 0; r < e.length; r++) { var n = e[r]; n.enumerable = n.enumerable || !1, n.configurable = !0, "value" in n && (n.writable = !0), Object.defineProperty(t, n.key, n) } } var a = function () { function t(t) { this.autoLevelCapping = void 0, this.firstLevel = void 0, this.media = void 0, this.restrictedLevels = void 0, this.timer = void 0, this.hls = void 0, this.streamController = void 0, this.clientRect = void 0, this.hls = t, this.autoLevelCapping = Number.POSITIVE_INFINITY, this.firstLevel = -1, this.media = null, this.restrictedLevels = [], this.timer = void 0, this.clientRect = null, this.registerListeners() } var e, r, a, s = t.prototype; return s.setStreamController = function (t) { this.streamController = t }, s.destroy = function () { this.unregisterListener(), this.hls.config.capLevelToPlayerSize && this.stopCapping(), this.media = null, this.clientRect = null, this.hls = this.streamController = null }, s.registerListeners = function () { var t = this.hls; t.on(n.Events.FPS_DROP_LEVEL_CAPPING, this.onFpsDropLevelCapping, this), t.on(n.Events.MEDIA_ATTACHING, this.onMediaAttaching, this), t.on(n.Events.MANIFEST_PARSED, this.onManifestParsed, this), t.on(n.Events.BUFFER_CODECS, this.onBufferCodecs, this), t.on(n.Events.MEDIA_DETACHING, this.onMediaDetaching, this) }, s.unregisterListener = function () { var t = this.hls; t.off(n.Events.FPS_DROP_LEVEL_CAPPING, this.onFpsDropLevelCapping, this), t.off(n.Events.MEDIA_ATTACHING, this.onMediaAttaching, this), t.off(n.Events.MANIFEST_PARSED, this.onManifestParsed, this), t.off(n.Events.BUFFER_CODECS, this.onBufferCodecs, this), t.off(n.Events.MEDIA_DETACHING, this.onMediaDetaching, this) }, s.onFpsDropLevelCapping = function (e, r) { t.isLevelAllowed(r.droppedLevel, this.restrictedLevels) && this.restrictedLevels.push(r.droppedLevel) }, s.onMediaAttaching = function (t, e) { this.media = e.media instanceof HTMLVideoElement ? e.media : null }, s.onManifestParsed = function (t, e) { var r = this.hls; this.restrictedLevels = [], this.firstLevel = e.firstLevel, r.config.capLevelToPlayerSize && e.video && this.startCapping() }, s.onBufferCodecs = function (t, e) { this.hls.config.capLevelToPlayerSize && e.video && this.startCapping() }, s.onMediaDetaching = function () { this.stopCapping() }, s.detectPlayerSize = function () { if (this.media && this.mediaHeight > 0 && this.mediaWidth > 0) { var t = this.hls.levels; if (t.length) { var e = this.hls; e.autoLevelCapping = this.getMaxLevel(t.length - 1), e.autoLevelCapping > this.autoLevelCapping && this.streamController && this.streamController.nextLevelSwitch(), this.autoLevelCapping = e.autoLevelCapping } } }, s.getMaxLevel = function (e) { var r = this, n = this.hls.levels; if (!n.length) return -1; var i = n.filter((function (n, i) { return t.isLevelAllowed(i, r.restrictedLevels) && i <= e })); return this.clientRect = null, t.getMaxLevelByMediaSize(i, this.mediaWidth, this.mediaHeight) }, s.startCapping = function () { this.timer || (this.autoLevelCapping = Number.POSITIVE_INFINITY, this.hls.firstLevel = this.getMaxLevel(this.firstLevel), self.clearInterval(this.timer), this.timer = self.setInterval(this.detectPlayerSize.bind(this), 1e3), this.detectPlayerSize()) }, s.stopCapping = function () { this.restrictedLevels = [], this.firstLevel = -1, this.autoLevelCapping = Number.POSITIVE_INFINITY, this.timer && (self.clearInterval(this.timer), this.timer = void 0) }, s.getDimensions = function () { if (this.clientRect) return this.clientRect; var t = this.media, e = { width: 0, height: 0 }; if (t) { var r = t.getBoundingClientRect(); e.width = r.width, e.height = r.height, e.width || e.height || (e.width = r.right - r.left || t.width || 0, e.height = r.bottom - r.top || t.height || 0) } return this.clientRect = e, e }, t.isLevelAllowed = function (t, e) { return void 0 === e && (e = []), -1 === e.indexOf(t) }, t.getMaxLevelByMediaSize = function (t, e, r) { if (!t || !t.length) return -1; for (var n, i, a = t.length - 1, s = 0; s < t.length; s += 1) { var o = t[s]; if ((o.width >= e || o.height >= r) && (n = o, !(i = t[s + 1]) || n.width !== i.width || n.height !== i.height)) { a = s; break } } return a }, e = t, a = [{ key: "contentScaleFactor", get: function () { var t = 1; try { t = self.devicePixelRatio } catch (t) { } return t } }], (r = [{ key: "mediaWidth", get: function () { return this.getDimensions().width * t.contentScaleFactor } }, { key: "mediaHeight", get: function () { return this.getDimensions().height * t.contentScaleFactor } }]) && i(e.prototype, r), a && i(e, a), t }(); e.default = a }, "./src/controller/cmcd-controller.ts":
/*!*******************************************!*\
    !*** ./src/controller/cmcd-controller.ts ***!
    \*******************************************/
/*! exports provided: default */function (t, e, r) { r.r(e), r.d(e, "default", (function () { return h })); var n = r(/*! ../events */"./src/events.ts"), i = r(/*! ../types/cmcd */"./src/types/cmcd.ts"), a = r(/*! ../utils/buffer-helper */"./src/utils/buffer-helper.ts"), s = r(/*! ../utils/logger */"./src/utils/logger.ts"); function o(t, e) { for (var r = 0; r < e.length; r++) { var n = e[r]; n.enumerable = n.enumerable || !1, n.configurable = !0, "value" in n && (n.writable = !0), Object.defineProperty(t, n.key, n) } } function l(t, e, r) { return e && o(t.prototype, e), r && o(t, r), t } function u(t, e) { var r = "undefined" != typeof Symbol && t[Symbol.iterator] || t["@@iterator"]; if (r) return (r = r.call(t)).next.bind(r); if (Array.isArray(t) || (r = function (t, e) { if (t) { if ("string" == typeof t) return c(t, e); var r = Object.prototype.toString.call(t).slice(8, -1); return "Object" === r && t.constructor && (r = t.constructor.name), "Map" === r || "Set" === r ? Array.from(t) : "Arguments" === r || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r) ? c(t, e) : void 0 } }(t)) || e && t && "number" == typeof t.length) { r && (t = r); var n = 0; return function () { return n >= t.length ? { done: !0 } : { done: !1, value: t[n++] } } } throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.") } function c(t, e) { (null == e || e > t.length) && (e = t.length); for (var r = 0, n = new Array(e); r < e; r++)n[r] = t[r]; return n } function d() { return d = Object.assign || function (t) { for (var e = 1; e < arguments.length; e++) { var r = arguments[e]; for (var n in r) Object.prototype.hasOwnProperty.call(r, n) && (t[n] = r[n]) } return t }, d.apply(this, arguments) } var h = function () { function t(e) { var r = this; this.hls = void 0, this.config = void 0, this.media = void 0, this.sid = void 0, this.cid = void 0, this.useHeaders = !1, this.initialized = !1, this.starved = !1, this.buffering = !0, this.audioBuffer = void 0, this.videoBuffer = void 0, this.onWaiting = function () { r.initialized && (r.starved = !0), r.buffering = !0 }, this.onPlaying = function () { r.initialized || (r.initialized = !0), r.buffering = !1 }, this.applyPlaylistData = function (t) { try { r.apply(t, { ot: i.CMCDObjectType.MANIFEST, su: !r.initialized }) } catch (t) { s.logger.warn("Could not generate manifest CMCD data.", t) } }, this.applyFragmentData = function (t) { try { var e = t.frag, n = r.hls.levels[e.level], a = r.getObjectType(e), o = { d: 1e3 * e.duration, ot: a }; a !== i.CMCDObjectType.VIDEO && a !== i.CMCDObjectType.AUDIO && a != i.CMCDObjectType.MUXED || (o.br = n.bitrate / 1e3, o.tb = r.getTopBandwidth(a) / 1e3, o.bl = r.getBufferLength(a)), r.apply(t, o) } catch (t) { s.logger.warn("Could not generate segment CMCD data.", t) } }, this.hls = e; var n = this.config = e.config, a = n.cmcd; null != a && (n.pLoader = this.createPlaylistLoader(), n.fLoader = this.createFragmentLoader(), this.sid = a.sessionId || t.uuid(), this.cid = a.contentId, this.useHeaders = !0 === a.useHeaders, this.registerListeners()) } var e = t.prototype; return e.registerListeners = function () { var t = this.hls; t.on(n.Events.MEDIA_ATTACHED, this.onMediaAttached, this), t.on(n.Events.MEDIA_DETACHED, this.onMediaDetached, this), t.on(n.Events.BUFFER_CREATED, this.onBufferCreated, this) }, e.unregisterListeners = function () { var t = this.hls; t.off(n.Events.MEDIA_ATTACHED, this.onMediaAttached, this), t.off(n.Events.MEDIA_DETACHED, this.onMediaDetached, this), t.off(n.Events.BUFFER_CREATED, this.onBufferCreated, this), this.onMediaDetached() }, e.destroy = function () { this.unregisterListeners(), this.hls = this.config = this.audioBuffer = this.videoBuffer = null }, e.onMediaAttached = function (t, e) { this.media = e.media, this.media.addEventListener("waiting", this.onWaiting), this.media.addEventListener("playing", this.onPlaying) }, e.onMediaDetached = function () { this.media && (this.media.removeEventListener("waiting", this.onWaiting), this.media.removeEventListener("playing", this.onPlaying), this.media = null) }, e.onBufferCreated = function (t, e) { var r, n; this.audioBuffer = null === (r = e.tracks.audio) || void 0 === r ? void 0 : r.buffer, this.videoBuffer = null === (n = e.tracks.video) || void 0 === n ? void 0 : n.buffer }, e.createData = function () { var t; return { v: i.CMCDVersion, sf: i.CMCDStreamingFormat.HLS, sid: this.sid, cid: this.cid, pr: null === (t = this.media) || void 0 === t ? void 0 : t.playbackRate, mtp: this.hls.bandwidthEstimate / 1e3 } }, e.apply = function (e, r) { void 0 === r && (r = {}), d(r, this.createData()); var n = r.ot === i.CMCDObjectType.INIT || r.ot === i.CMCDObjectType.VIDEO || r.ot === i.CMCDObjectType.MUXED; if (this.starved && n && (r.bs = !0, r.su = !0, this.starved = !1), null == r.su && (r.su = this.buffering), this.useHeaders) { var a = t.toHeaders(r); if (!Object.keys(a).length) return; e.headers || (e.headers = {}), d(e.headers, a) } else { var s = t.toQuery(r); if (!s) return; e.url = t.appendQueryToUri(e.url, s) } }, e.getObjectType = function (t) { var e = t.type; return "subtitle" === e ? i.CMCDObjectType.TIMED_TEXT : "initSegment" === t.sn ? i.CMCDObjectType.INIT : "audio" === e ? i.CMCDObjectType.AUDIO : "main" === e ? this.hls.audioTracks.length ? i.CMCDObjectType.VIDEO : i.CMCDObjectType.MUXED : void 0 }, e.getTopBandwidth = function (t) { var e, r = 0, n = this.hls; if (t === i.CMCDObjectType.AUDIO) e = n.audioTracks; else { var a = n.maxAutoLevel, s = a > -1 ? a + 1 : n.levels.length; e = n.levels.slice(0, s) } for (var o, l = u(e); !(o = l()).done;) { var c = o.value; c.bitrate > r && (r = c.bitrate) } return r > 0 ? r : NaN }, e.getBufferLength = function (t) { var e = this.hls.media, r = t === i.CMCDObjectType.AUDIO ? this.audioBuffer : this.videoBuffer; return r && e ? 1e3 * a.BufferHelper.bufferInfo(r, e.currentTime, this.config.maxBufferHole).len : NaN }, e.createPlaylistLoader = function () { var t = this.config.pLoader, e = this.applyPlaylistData, r = t || this.config.loader; return function () { function t(t) { this.loader = void 0, this.loader = new r(t) } var n = t.prototype; return n.destroy = function () { this.loader.destroy() }, n.abort = function () { this.loader.abort() }, n.load = function (t, r, n) { e(t), this.loader.load(t, r, n) }, l(t, [{ key: "stats", get: function () { return this.loader.stats } }, { key: "context", get: function () { return this.loader.context } }]), t }() }, e.createFragmentLoader = function () { var t = this.config.fLoader, e = this.applyFragmentData, r = t || this.config.loader; return function () { function t(t) { this.loader = void 0, this.loader = new r(t) } var n = t.prototype; return n.destroy = function () { this.loader.destroy() }, n.abort = function () { this.loader.abort() }, n.load = function (t, r, n) { e(t), this.loader.load(t, r, n) }, l(t, [{ key: "stats", get: function () { return this.loader.stats } }, { key: "context", get: function () { return this.loader.context } }]), t }() }, t.uuid = function () { var t = URL.createObjectURL(new Blob), e = t.toString(); return URL.revokeObjectURL(t), e.substr(e.lastIndexOf("/") + 1) }, t.serialize = function (t) { for (var e, r = [], n = function (t) { return !Number.isNaN(t) && null != t && "" !== t && !1 !== t }, i = function (t) { return Math.round(t) }, a = function (t) { return 100 * i(t / 100) }, s = { br: i, d: i, bl: a, dl: a, mtp: a, nor: function (t) { return encodeURIComponent(t) }, rtp: a, tb: i }, o = u(Object.keys(t || {}).sort()); !(e = o()).done;) { var l = e.value, c = t[l]; if (n(c) && !("v" === l && 1 === c || "pr" == l && 1 === c)) { var d = s[l]; d && (c = d(c)); var h = typeof c, f = void 0; f = "ot" === l || "sf" === l || "st" === l ? l + "=" + c : "boolean" === h ? l : "number" === h ? l + "=" + c : l + "=" + JSON.stringify(c), r.push(f) } } return r.join(",") }, t.toHeaders = function (e) { for (var r = {}, n = ["Object", "Request", "Session", "Status"], i = [{}, {}, {}, {}], a = { br: 0, d: 0, ot: 0, tb: 0, bl: 1, dl: 1, mtp: 1, nor: 1, nrr: 1, su: 1, cid: 2, pr: 2, sf: 2, sid: 2, st: 2, v: 2, bs: 3, rtp: 3 }, s = 0, o = Object.keys(e); s < o.length; s++) { var l = o[s]; i[null != a[l] ? a[l] : 1][l] = e[l] } for (var u = 0; u < i.length; u++) { var c = t.serialize(i[u]); c && (r["CMCD-" + n[u]] = c) } return r }, t.toQuery = function (e) { return "CMCD=" + encodeURIComponent(t.serialize(e)) }, t.appendQueryToUri = function (t, e) { if (!e) return t; var r = t.includes("?") ? "&" : "?"; return "" + t + r + e }, t }() }, "./src/controller/eme-controller.ts":
/*!******************************************!*\
    !*** ./src/controller/eme-controller.ts ***!
    \******************************************/
/*! exports provided: default */function (t, e, r) { r.r(e); var n = r(/*! ../events */"./src/events.ts"), i = r(/*! ../errors */"./src/errors.ts"), a = r(/*! ../utils/logger */"./src/utils/logger.ts"), s = r(/*! ../utils/mediakeys-helper */"./src/utils/mediakeys-helper.ts"); function o(t, e) { for (var r = 0; r < e.length; r++) { var n = e[r]; n.enumerable = n.enumerable || !1, n.configurable = !0, "value" in n && (n.writable = !0), Object.defineProperty(t, n.key, n) } } var l = function () { function t(t) { this.hls = void 0, this._widevineLicenseUrl = void 0, this._licenseXhrSetup = void 0, this._licenseResponseCallback = void 0, this._emeEnabled = void 0, this._requestMediaKeySystemAccess = void 0, this._drmSystemOptions = void 0, this._config = void 0, this._mediaKeysList = [], this._media = null, this._hasSetMediaKeys = !1, this._requestLicenseFailureCount = 0, this.mediaKeysPromise = null, this._onMediaEncrypted = this.onMediaEncrypted.bind(this), this.hls = t, this._config = t.config, this._widevineLicenseUrl = this._config.widevineLicenseUrl, this._licenseXhrSetup = this._config.licenseXhrSetup, this._licenseResponseCallback = this._config.licenseResponseCallback, this._emeEnabled = this._config.emeEnabled, this._requestMediaKeySystemAccess = this._config.requestMediaKeySystemAccessFunc, this._drmSystemOptions = this._config.drmSystemOptions, this._registerListeners() } var e, r, l, u = t.prototype; return u.destroy = function () { this._unregisterListeners(), this.hls = this._onMediaEncrypted = null, this._requestMediaKeySystemAccess = null }, u._registerListeners = function () { this.hls.on(n.Events.MEDIA_ATTACHED, this.onMediaAttached, this), this.hls.on(n.Events.MEDIA_DETACHED, this.onMediaDetached, this), this.hls.on(n.Events.MANIFEST_PARSED, this.onManifestParsed, this) }, u._unregisterListeners = function () { this.hls.off(n.Events.MEDIA_ATTACHED, this.onMediaAttached, this), this.hls.off(n.Events.MEDIA_DETACHED, this.onMediaDetached, this), this.hls.off(n.Events.MANIFEST_PARSED, this.onManifestParsed, this) }, u.getLicenseServerUrl = function (t) { switch (t) { case s.KeySystems.WIDEVINE: if (!this._widevineLicenseUrl) break; return this._widevineLicenseUrl }throw new Error('no license server URL configured for key-system "' + t + '"') }, u._attemptKeySystemAccess = function (t, e, r) { var n = this, i = function (t, e, r, n) { if (t === s.KeySystems.WIDEVINE) return function (t, e, r) { var n = { audioCapabilities: [], videoCapabilities: [] }; return t.forEach((function (t) { n.audioCapabilities.push({ contentType: 'audio/mp4; codecs="' + t + '"', robustness: r.audioRobustness || "" }) })), e.forEach((function (t) { n.videoCapabilities.push({ contentType: 'video/mp4; codecs="' + t + '"', robustness: r.videoRobustness || "" }) })), [n] }(e, r, n); throw new Error("Unknown key-system: " + t) }(t, e, r, this._drmSystemOptions); a.logger.log("Requesting encrypted media key-system access"); var o = this.requestMediaKeySystemAccess(t, i); this.mediaKeysPromise = o.then((function (e) { return n._onMediaKeySystemAccessObtained(t, e) })), o.catch((function (e) { a.logger.error('Failed to obtain key-system "' + t + '" access:', e) })) }, u._onMediaKeySystemAccessObtained = function (t, e) { var r = this; a.logger.log('Access for key-system "' + t + '" obtained'); var n = { mediaKeysSessionInitialized: !1, mediaKeySystemAccess: e, mediaKeySystemDomain: t }; this._mediaKeysList.push(n); var i = Promise.resolve().then((function () { return e.createMediaKeys() })).then((function (e) { return n.mediaKeys = e, a.logger.log('Media-keys created for key-system "' + t + '"'), r._onMediaKeysCreated(), e })); return i.catch((function (t) { a.logger.error("Failed to create media-keys:", t) })), i }, u._onMediaKeysCreated = function () { var t = this; this._mediaKeysList.forEach((function (e) { e.mediaKeysSession || (e.mediaKeysSession = e.mediaKeys.createSession(), t._onNewMediaKeySession(e.mediaKeysSession)) })) }, u._onNewMediaKeySession = function (t) { var e = this; a.logger.log("New key-system session " + t.sessionId), t.addEventListener("message", (function (r) { e._onKeySessionMessage(t, r.message) }), !1) }, u._onKeySessionMessage = function (t, e) { a.logger.log("Got EME message event, creating license request"), this._requestLicense(e, (function (e) { a.logger.log("Received license data (length: " + (e ? e.byteLength : e) + "), updating key-session"), t.update(e) })) }, u.onMediaEncrypted = function (t) { var e = this; if (a.logger.log('Media is encrypted using "' + t.initDataType + '" init data type'), !this.mediaKeysPromise) return a.logger.error("Fatal: Media is encrypted but no CDM access or no keys have been requested"), void this.hls.trigger(n.Events.ERROR, { type: i.ErrorTypes.KEY_SYSTEM_ERROR, details: i.ErrorDetails.KEY_SYSTEM_NO_KEYS, fatal: !0 }); var r = function (r) { e._media && (e._attemptSetMediaKeys(r), e._generateRequestWithPreferredKeySession(t.initDataType, t.initData)) }; this.mediaKeysPromise.then(r).catch(r) }, u._attemptSetMediaKeys = function (t) { if (!this._media) throw new Error("Attempted to set mediaKeys without first attaching a media element"); if (!this._hasSetMediaKeys) { var e = this._mediaKeysList[0]; if (!e || !e.mediaKeys) return a.logger.error("Fatal: Media is encrypted but no CDM access or no keys have been obtained yet"), void this.hls.trigger(n.Events.ERROR, { type: i.ErrorTypes.KEY_SYSTEM_ERROR, details: i.ErrorDetails.KEY_SYSTEM_NO_KEYS, fatal: !0 }); a.logger.log("Setting keys for encrypted media"), this._media.setMediaKeys(e.mediaKeys), this._hasSetMediaKeys = !0 } }, u._generateRequestWithPreferredKeySession = function (t, e) { var r = this, s = this._mediaKeysList[0]; if (!s) return a.logger.error("Fatal: Media is encrypted but not any key-system access has been obtained yet"), void this.hls.trigger(n.Events.ERROR, { type: i.ErrorTypes.KEY_SYSTEM_ERROR, details: i.ErrorDetails.KEY_SYSTEM_NO_ACCESS, fatal: !0 }); if (s.mediaKeysSessionInitialized) a.logger.warn("Key-Session already initialized but requested again"); else { var o = s.mediaKeysSession; if (!o) return a.logger.error("Fatal: Media is encrypted but no key-session existing"), void this.hls.trigger(n.Events.ERROR, { type: i.ErrorTypes.KEY_SYSTEM_ERROR, details: i.ErrorDetails.KEY_SYSTEM_NO_SESSION, fatal: !0 }); if (!e) return a.logger.warn("Fatal: initData required for generating a key session is null"), void this.hls.trigger(n.Events.ERROR, { type: i.ErrorTypes.KEY_SYSTEM_ERROR, details: i.ErrorDetails.KEY_SYSTEM_NO_INIT_DATA, fatal: !0 }); a.logger.log('Generating key-session request for "' + t + '" init data type'), s.mediaKeysSessionInitialized = !0, o.generateRequest(t, e).then((function () { a.logger.debug("Key-session generation succeeded") })).catch((function (t) { a.logger.error("Error generating key-session request:", t), r.hls.trigger(n.Events.ERROR, { type: i.ErrorTypes.KEY_SYSTEM_ERROR, details: i.ErrorDetails.KEY_SYSTEM_NO_SESSION, fatal: !1 }) })) } }, u._createLicenseXhr = function (t, e, r) { var n = new XMLHttpRequest; n.responseType = "arraybuffer", n.onreadystatechange = this._onLicenseRequestReadyStageChange.bind(this, n, t, e, r); var i = this._licenseXhrSetup; if (i) try { i.call(this.hls, n, t), i = void 0 } catch (t) { a.logger.error(t) } try { n.readyState || n.open("POST", t, !0), i && i.call(this.hls, n, t) } catch (t) { throw new Error("issue setting up KeySystem license XHR " + t) } return n }, u._onLicenseRequestReadyStageChange = function (t, e, r, s) { if (4 === t.readyState) if (200 === t.status) { this._requestLicenseFailureCount = 0, a.logger.log("License request succeeded"); var o = t.response, l = this._licenseResponseCallback; if (l) try { o = l.call(this.hls, t, e) } catch (t) { a.logger.error(t) } s(o) } else { if (a.logger.error("License Request XHR failed (" + e + "). Status: " + t.status + " (" + t.statusText + ")"), this._requestLicenseFailureCount++, this._requestLicenseFailureCount > 3) return void this.hls.trigger(n.Events.ERROR, { type: i.ErrorTypes.KEY_SYSTEM_ERROR, details: i.ErrorDetails.KEY_SYSTEM_LICENSE_REQUEST_FAILED, fatal: !0 }); var u = 3 - this._requestLicenseFailureCount + 1; a.logger.warn("Retrying license request, " + u + " attempts left"), this._requestLicense(r, s) } }, u._generateLicenseRequestChallenge = function (t, e) { if (t.mediaKeySystemDomain === s.KeySystems.WIDEVINE) return e; throw new Error("unsupported key-system: " + t.mediaKeySystemDomain) }, u._requestLicense = function (t, e) { a.logger.log("Requesting content license for key-system"); var r = this._mediaKeysList[0]; if (!r) return a.logger.error("Fatal error: Media is encrypted but no key-system access has been obtained yet"), void this.hls.trigger(n.Events.ERROR, { type: i.ErrorTypes.KEY_SYSTEM_ERROR, details: i.ErrorDetails.KEY_SYSTEM_NO_ACCESS, fatal: !0 }); try { var s = this.getLicenseServerUrl(r.mediaKeySystemDomain), o = this._createLicenseXhr(s, t, e); a.logger.log("Sending license request to URL: " + s); var l = this._generateLicenseRequestChallenge(r, t); o.send(l) } catch (t) { a.logger.error("Failure requesting DRM license: " + t), this.hls.trigger(n.Events.ERROR, { type: i.ErrorTypes.KEY_SYSTEM_ERROR, details: i.ErrorDetails.KEY_SYSTEM_LICENSE_REQUEST_FAILED, fatal: !0 }) } }, u.onMediaAttached = function (t, e) { if (this._emeEnabled) { var r = e.media; this._media = r, r.addEventListener("encrypted", this._onMediaEncrypted) } }, u.onMediaDetached = function () { var t = this._media, e = this._mediaKeysList; t && (t.removeEventListener("encrypted", this._onMediaEncrypted), this._media = null, this._mediaKeysList = [], Promise.all(e.map((function (t) { if (t.mediaKeysSession) return t.mediaKeysSession.close().catch((function () { })) }))).then((function () { return t.setMediaKeys(null) })).catch((function () { }))) }, u.onManifestParsed = function (t, e) { if (this._emeEnabled) { var r = e.levels.map((function (t) { return t.audioCodec })).filter((function (t) { return !!t })), n = e.levels.map((function (t) { return t.videoCodec })).filter((function (t) { return !!t })); this._attemptKeySystemAccess(s.KeySystems.WIDEVINE, r, n) } }, e = t, (r = [{ key: "requestMediaKeySystemAccess", get: function () { if (!this._requestMediaKeySystemAccess) throw new Error("No requestMediaKeySystemAccess function configured"); return this._requestMediaKeySystemAccess } }]) && o(e.prototype, r), l && o(e, l), t }(); e.default = l }, "./src/controller/fps-controller.ts":
/*!******************************************!*\
    !*** ./src/controller/fps-controller.ts ***!
    \******************************************/
/*! exports provided: default */function (t, e, r) { r.r(e); var n = r(/*! ../events */"./src/events.ts"), i = r(/*! ../utils/logger */"./src/utils/logger.ts"), a = function () { function t(t) { this.hls = void 0, this.isVideoPlaybackQualityAvailable = !1, this.timer = void 0, this.media = null, this.lastTime = void 0, this.lastDroppedFrames = 0, this.lastDecodedFrames = 0, this.streamController = void 0, this.hls = t, this.registerListeners() } var e = t.prototype; return e.setStreamController = function (t) { this.streamController = t }, e.registerListeners = function () { this.hls.on(n.Events.MEDIA_ATTACHING, this.onMediaAttaching, this) }, e.unregisterListeners = function () { this.hls.off(n.Events.MEDIA_ATTACHING, this.onMediaAttaching) }, e.destroy = function () { this.timer && clearInterval(this.timer), this.unregisterListeners(), this.isVideoPlaybackQualityAvailable = !1, this.media = null }, e.onMediaAttaching = function (t, e) { var r = this.hls.config; if (r.capLevelOnFPSDrop) { var n = e.media instanceof self.HTMLVideoElement ? e.media : null; this.media = n, n && "function" == typeof n.getVideoPlaybackQuality && (this.isVideoPlaybackQualityAvailable = !0), self.clearInterval(this.timer), this.timer = self.setInterval(this.checkFPSInterval.bind(this), r.fpsDroppedMonitoringPeriod) } }, e.checkFPS = function (t, e, r) { var a = performance.now(); if (e) { if (this.lastTime) { var s = a - this.lastTime, o = r - this.lastDroppedFrames, l = e - this.lastDecodedFrames, u = 1e3 * o / s, c = this.hls; if (c.trigger(n.Events.FPS_DROP, { currentDropped: o, currentDecoded: l, totalDroppedFrames: r }), u > 0 && o > c.config.fpsDroppedMonitoringThreshold * l) { var d = c.currentLevel; i.logger.warn("drop FPS ratio greater than max allowed value for currentLevel: " + d), d > 0 && (-1 === c.autoLevelCapping || c.autoLevelCapping >= d) && (d -= 1, c.trigger(n.Events.FPS_DROP_LEVEL_CAPPING, { level: d, droppedLevel: c.currentLevel }), c.autoLevelCapping = d, this.streamController.nextLevelSwitch()) } } this.lastTime = a, this.lastDroppedFrames = r, this.lastDecodedFrames = e } }, e.checkFPSInterval = function () { var t = this.media; if (t) if (this.isVideoPlaybackQualityAvailable) { var e = t.getVideoPlaybackQuality(); this.checkFPS(t, e.totalVideoFrames, e.droppedVideoFrames) } else this.checkFPS(t, t.webkitDecodedFrameCount, t.webkitDroppedFrameCount) }, t }(); e.default = a }, "./src/controller/fragment-finders.ts":
/*!********************************************!*\
    !*** ./src/controller/fragment-finders.ts ***!
    \********************************************/
/*! exports provided: findFragmentByPDT, findFragmentByPTS, fragmentWithinToleranceTest, pdtWithinToleranceTest, findFragWithCC */function (t, e, r) { r.r(e), r.d(e, "findFragmentByPDT", (function () { return a })), r.d(e, "findFragmentByPTS", (function () { return s })), r.d(e, "fragmentWithinToleranceTest", (function () { return o })), r.d(e, "pdtWithinToleranceTest", (function () { return l })), r.d(e, "findFragWithCC", (function () { return u })); var n = r(/*! ./src/polyfills/number */"./src/polyfills/number.ts"), i = r(/*! ../utils/binary-search */"./src/utils/binary-search.ts"); function a(t, e, r) { if (null === e || !Array.isArray(t) || !t.length || !Object(n.isFiniteNumber)(e)) return null; if (e < (t[0].programDateTime || 0)) return null; if (e >= (t[t.length - 1].endProgramDateTime || 0)) return null; r = r || 0; for (var i = 0; i < t.length; ++i) { var a = t[i]; if (l(e, r, a)) return a } return null } function s(t, e, r, n) { void 0 === r && (r = 0), void 0 === n && (n = 0); var a = null; if (t ? a = e[t.sn - e[0].sn + 1] || null : 0 === r && 0 === e[0].start && (a = e[0]), a && 0 === o(r, n, a)) return a; var s = i.default.search(e, o.bind(null, r, n)); return s || a } function o(t, e, r) { void 0 === t && (t = 0), void 0 === e && (e = 0); var n = Math.min(e, r.duration + (r.deltaPTS ? r.deltaPTS : 0)); return r.start + r.duration - n <= t ? 1 : r.start - n > t && r.start ? -1 : 0 } function l(t, e, r) { var n = 1e3 * Math.min(e, r.duration + (r.deltaPTS ? r.deltaPTS : 0)); return (r.endProgramDateTime || 0) - n > t } function u(t, e) { return i.default.search(t, (function (t) { return t.cc < e ? 1 : t.cc > e ? -1 : 0 })) } }, "./src/controller/fragment-tracker.ts":
/*!********************************************!*\
    !*** ./src/controller/fragment-tracker.ts ***!
    \********************************************/
/*! exports provided: FragmentState, FragmentTracker */function (t, e, r) { r.r(e), r.d(e, "FragmentState", (function () { return n })), r.d(e, "FragmentTracker", (function () { return s })); var n, i = r(/*! ../events */"./src/events.ts"), a = r(/*! ../types/loader */"./src/types/loader.ts"); !function (t) { t.NOT_LOADED = "NOT_LOADED", t.BACKTRACKED = "BACKTRACKED", t.APPENDING = "APPENDING", t.PARTIAL = "PARTIAL", t.OK = "OK" }(n || (n = {})); var s = function () { function t(t) { this.activeFragment = null, this.activeParts = null, this.fragments = Object.create(null), this.timeRanges = Object.create(null), this.bufferPadding = .2, this.hls = void 0, this.hls = t, this._registerListeners() } var e = t.prototype; return e._registerListeners = function () { var t = this.hls; t.on(i.Events.BUFFER_APPENDED, this.onBufferAppended, this), t.on(i.Events.FRAG_BUFFERED, this.onFragBuffered, this), t.on(i.Events.FRAG_LOADED, this.onFragLoaded, this) }, e._unregisterListeners = function () { var t = this.hls; t.off(i.Events.BUFFER_APPENDED, this.onBufferAppended, this), t.off(i.Events.FRAG_BUFFERED, this.onFragBuffered, this), t.off(i.Events.FRAG_LOADED, this.onFragLoaded, this) }, e.destroy = function () { this._unregisterListeners(), this.fragments = this.timeRanges = null }, e.getAppendedFrag = function (t, e) { if (e === a.PlaylistLevelType.MAIN) { var r = this.activeFragment, n = this.activeParts; if (!r) return null; if (n) for (var i = n.length; i--;) { var s = n[i], o = s ? s.end : r.appendedPTS; if (s.start <= t && void 0 !== o && t <= o) return i > 9 && (this.activeParts = n.slice(i - 9)), s } else if (r.start <= t && void 0 !== r.appendedPTS && t <= r.appendedPTS) return r } return this.getBufferedFrag(t, e) }, e.getBufferedFrag = function (t, e) { for (var r = this.fragments, n = Object.keys(r), i = n.length; i--;) { var a = r[n[i]]; if ((null == a ? void 0 : a.body.type) === e && a.buffered) { var s = a.body; if (s.start <= t && t <= s.end) return s } } return null }, e.detectEvictedFragments = function (t, e, r) { var n = this; Object.keys(this.fragments).forEach((function (i) { var a = n.fragments[i]; if (a) if (a.buffered) { var s = a.range[t]; s && s.time.some((function (t) { var r = !n.isTimeBuffered(t.startPTS, t.endPTS, e); return r && n.removeFragment(a.body), r })) } else a.body.type === r && n.removeFragment(a.body) })) }, e.detectPartialFragments = function (t) { var e = this, r = this.timeRanges, n = t.frag, i = t.part; if (r && "initSegment" !== n.sn) { var a = l(n), s = this.fragments[a]; s && (Object.keys(r).forEach((function (t) { var a = n.elementaryStreams[t]; if (a) { var o = r[t], l = null !== i || !0 === a.partial; s.range[t] = e.getBufferedTimes(n, i, l, o) } })), s.backtrack = s.loaded = null, Object.keys(s.range).length ? s.buffered = !0 : this.removeFragment(s.body)) } }, e.fragBuffered = function (t) { var e = l(t), r = this.fragments[e]; r && (r.backtrack = r.loaded = null, r.buffered = !0) }, e.getBufferedTimes = function (t, e, r, n) { for (var i = { time: [], partial: r }, a = e ? e.start : t.start, s = e ? e.end : t.end, o = t.minEndPTS || s, l = t.maxStartPTS || a, u = 0; u < n.length; u++) { var c = n.start(u) - this.bufferPadding, d = n.end(u) + this.bufferPadding; if (l >= c && o <= d) { i.time.push({ startPTS: Math.max(a, n.start(u)), endPTS: Math.min(s, n.end(u)) }); break } if (a < d && s > c) i.partial = !0, i.time.push({ startPTS: Math.max(a, n.start(u)), endPTS: Math.min(s, n.end(u)) }); else if (s <= c) break } return i }, e.getPartialFragment = function (t) { var e, r, n, i = null, a = 0, s = this.bufferPadding, l = this.fragments; return Object.keys(l).forEach((function (u) { var c = l[u]; c && o(c) && (r = c.body.start - s, n = c.body.end + s, t >= r && t <= n && (e = Math.min(t - r, n - t), a <= e && (i = c.body, a = e))) })), i }, e.getState = function (t) { var e = l(t), r = this.fragments[e]; return r ? r.buffered ? o(r) ? n.PARTIAL : n.OK : r.backtrack ? n.BACKTRACKED : n.APPENDING : n.NOT_LOADED }, e.backtrack = function (t, e) { var r = l(t), n = this.fragments[r]; if (!n || n.backtrack) return null; var i = n.backtrack = e || n.loaded; return n.loaded = null, i }, e.getBacktrackData = function (t) { var e = l(t), r = this.fragments[e]; if (r) { var n, i = r.backtrack; if (null != i && null !== (n = i.payload) && void 0 !== n && n.byteLength) return i; this.removeFragment(t) } return null }, e.isTimeBuffered = function (t, e, r) { for (var n, i, a = 0; a < r.length; a++) { if (n = r.start(a) - this.bufferPadding, i = r.end(a) + this.bufferPadding, t >= n && e <= i) return !0; if (e <= n) return !1 } return !1 }, e.onFragLoaded = function (t, e) { var r = e.frag, n = e.part; if ("initSegment" !== r.sn && !r.bitrateTest && !n) { var i = l(r); this.fragments[i] = { body: r, loaded: e, backtrack: null, buffered: !1, range: Object.create(null) } } }, e.onBufferAppended = function (t, e) { var r = this, n = e.frag, i = e.part, s = e.timeRanges; if (n.type === a.PlaylistLevelType.MAIN) if (this.activeFragment = n, i) { var o = this.activeParts; o || (this.activeParts = o = []), o.push(i) } else this.activeParts = null; this.timeRanges = s, Object.keys(s).forEach((function (t) { var e = s[t]; if (r.detectEvictedFragments(t, e), !i) for (var a = 0; a < e.length; a++)n.appendedPTS = Math.max(e.end(a), n.appendedPTS || 0) })) }, e.onFragBuffered = function (t, e) { this.detectPartialFragments(e) }, e.hasFragment = function (t) { var e = l(t); return !!this.fragments[e] }, e.removeFragmentsInRange = function (t, e, r) { var n = this; Object.keys(this.fragments).forEach((function (i) { var a = n.fragments[i]; if (a && a.buffered) { var s = a.body; s.type === r && s.start < e && s.end > t && n.removeFragment(s) } })) }, e.removeFragment = function (t) { var e = l(t); t.stats.loaded = 0, t.clearElementaryStreamInfo(), delete this.fragments[e] }, e.removeAllFragments = function () { this.fragments = Object.create(null), this.activeFragment = null, this.activeParts = null }, t }(); function o(t) { var e, r; return t.buffered && ((null === (e = t.range.video) || void 0 === e ? void 0 : e.partial) || (null === (r = t.range.audio) || void 0 === r ? void 0 : r.partial)) } function l(t) { return t.type + "_" + t.level + "_" + t.urlId + "_" + t.sn } }, "./src/controller/gap-controller.ts":
/*!******************************************!*\
    !*** ./src/controller/gap-controller.ts ***!
    \******************************************/
/*! exports provided: STALL_MINIMUM_DURATION_MS, MAX_START_GAP_JUMP, SKIP_BUFFER_HOLE_STEP_SECONDS, SKIP_BUFFER_RANGE_START, default */function (t, e, r) { r.r(e), r.d(e, "STALL_MINIMUM_DURATION_MS", (function () { return o })), r.d(e, "MAX_START_GAP_JUMP", (function () { return l })), r.d(e, "SKIP_BUFFER_HOLE_STEP_SECONDS", (function () { return u })), r.d(e, "SKIP_BUFFER_RANGE_START", (function () { return c })), r.d(e, "default", (function () { return d })); var n = r(/*! ../utils/buffer-helper */"./src/utils/buffer-helper.ts"), i = r(/*! ../errors */"./src/errors.ts"), a = r(/*! ../events */"./src/events.ts"), s = r(/*! ../utils/logger */"./src/utils/logger.ts"), o = 250, l = 2, u = .1, c = .05, d = function () { function t(t, e, r, n) { this.config = void 0, this.media = void 0, this.fragmentTracker = void 0, this.hls = void 0, this.nudgeRetry = 0, this.stallReported = !1, this.stalled = null, this.moved = !1, this.seeking = !1, this.config = t, this.media = e, this.fragmentTracker = r, this.hls = n } var e = t.prototype; return e.destroy = function () { this.hls = this.fragmentTracker = this.media = null }, e.poll = function (t) { var e = this.config, r = this.media, i = this.stalled, a = r.currentTime, u = r.seeking, c = this.seeking && !u, d = !this.seeking && u; if (this.seeking = u, a === t) { if ((d || c) && (this.stalled = null), !r.paused && !r.ended && 0 !== r.playbackRate && n.BufferHelper.getBuffered(r).length) { var h = n.BufferHelper.bufferInfo(r, a, 0), f = h.len > 0, p = h.nextStart || 0; if (f || p) { if (u) { var g = h.len > l, v = !p || p - a > l && !this.fragmentTracker.getPartialFragment(a); if (g || v) return; this.moved = !1 } if (!this.moved && null !== this.stalled) { var m, y = Math.max(p, h.start || 0) - a, A = this.hls.levels ? this.hls.levels[this.hls.currentLevel] : null, E = (null == A || null === (m = A.details) || void 0 === m ? void 0 : m.live) ? 2 * A.details.targetduration : l; if (y > 0 && y <= E) return void this._trySkipBufferHole(null) } var T = self.performance.now(); if (null !== i) { var b = T - i; !u && b >= o && this._reportStall(h.len); var k = n.BufferHelper.bufferInfo(r, a, e.maxBufferHole); this._tryFixBufferStall(k, b) } else this.stalled = T } } } else if (this.moved = !0, null !== i) { if (this.stallReported) { var S = self.performance.now() - i; s.logger.warn("playback not stuck anymore @" + a + ", after " + Math.round(S) + "ms"), this.stallReported = !1 } this.stalled = null, this.nudgeRetry = 0 } }, e._tryFixBufferStall = function (t, e) { var r = this.config, n = this.fragmentTracker, i = this.media.currentTime, a = n.getPartialFragment(i); a && this._trySkipBufferHole(a) || t.len > r.maxBufferHole && e > 1e3 * r.highBufferWatchdogPeriod && (s.logger.warn("Trying to nudge playhead over buffer-hole"), this.stalled = null, this._tryNudgeBuffer()) }, e._reportStall = function (t) { var e = this.hls, r = this.media; this.stallReported || (this.stallReported = !0, s.logger.warn("Playback stalling at @" + r.currentTime + " due to low buffer (buffer=" + t + ")"), e.trigger(a.Events.ERROR, { type: i.ErrorTypes.MEDIA_ERROR, details: i.ErrorDetails.BUFFER_STALLED_ERROR, fatal: !1, buffer: t })) }, e._trySkipBufferHole = function (t) { for (var e = this.config, r = this.hls, o = this.media, l = o.currentTime, d = 0, h = n.BufferHelper.getBuffered(o), f = 0; f < h.length; f++) { var p = h.start(f); if (l + e.maxBufferHole >= d && l < p) { var g = Math.max(p + c, o.currentTime + u); return s.logger.warn("skipping hole, adjusting currentTime from " + l + " to " + g), this.moved = !0, this.stalled = null, o.currentTime = g, t && r.trigger(a.Events.ERROR, { type: i.ErrorTypes.MEDIA_ERROR, details: i.ErrorDetails.BUFFER_SEEK_OVER_HOLE, fatal: !1, reason: "fragment loaded with buffer holes, seeking from " + l + " to " + g, frag: t }), g } d = h.end(f) } return 0 }, e._tryNudgeBuffer = function () { var t = this.config, e = this.hls, r = this.media, n = r.currentTime, o = (this.nudgeRetry || 0) + 1; if (this.nudgeRetry = o, o < t.nudgeMaxRetry) { var l = n + o * t.nudgeOffset; s.logger.warn("Nudging 'currentTime' from " + n + " to " + l), r.currentTime = l, e.trigger(a.Events.ERROR, { type: i.ErrorTypes.MEDIA_ERROR, details: i.ErrorDetails.BUFFER_NUDGE_ON_STALL, fatal: !1 }) } else s.logger.error("Playhead still not moving while enough data buffered @" + n + " after " + t.nudgeMaxRetry + " nudges"), e.trigger(a.Events.ERROR, { type: i.ErrorTypes.MEDIA_ERROR, details: i.ErrorDetails.BUFFER_STALLED_ERROR, fatal: !0 }) }, t }() }, "./src/controller/id3-track-controller.ts":
/*!************************************************!*\
    !*** ./src/controller/id3-track-controller.ts ***!
    \************************************************/
/*! exports provided: default */function (t, e, r) { r.r(e); var n = r(/*! ../events */"./src/events.ts"), i = r(/*! ../utils/texttrack-utils */"./src/utils/texttrack-utils.ts"), a = r(/*! ../demux/id3 */"./src/demux/id3.ts"), s = function () { function t(t) { this.hls = void 0, this.id3Track = null, this.media = null, this.hls = t, this._registerListeners() } var e = t.prototype; return e.destroy = function () { this._unregisterListeners() }, e._registerListeners = function () { var t = this.hls; t.on(n.Events.MEDIA_ATTACHED, this.onMediaAttached, this), t.on(n.Events.MEDIA_DETACHING, this.onMediaDetaching, this), t.on(n.Events.FRAG_PARSING_METADATA, this.onFragParsingMetadata, this), t.on(n.Events.BUFFER_FLUSHING, this.onBufferFlushing, this) }, e._unregisterListeners = function () { var t = this.hls; t.off(n.Events.MEDIA_ATTACHED, this.onMediaAttached, this), t.off(n.Events.MEDIA_DETACHING, this.onMediaDetaching, this), t.off(n.Events.FRAG_PARSING_METADATA, this.onFragParsingMetadata, this), t.off(n.Events.BUFFER_FLUSHING, this.onBufferFlushing, this) }, e.onMediaAttached = function (t, e) { this.media = e.media }, e.onMediaDetaching = function () { this.id3Track && (Object(i.clearCurrentCues)(this.id3Track), this.id3Track = null, this.media = null) }, e.getID3Track = function (t) { if (this.media) { for (var e = 0; e < t.length; e++) { var r = t[e]; if ("metadata" === r.kind && "id3" === r.label) return Object(i.sendAddTrackEvent)(r, this.media), r } return this.media.addTextTrack("metadata", "id3") } }, e.onFragParsingMetadata = function (t, e) { if (this.media) { var r = e.frag, n = e.samples; this.id3Track || (this.id3Track = this.getID3Track(this.media.textTracks), this.id3Track.mode = "hidden"); for (var i = self.WebKitDataCue || self.VTTCue || self.TextTrackCue, s = 0; s < n.length; s++) { var o = a.getID3Frames(n[s].data); if (o) { var l = n[s].pts, u = s < n.length - 1 ? n[s + 1].pts : r.end; u - l <= 0 && (u = l + .25); for (var c = 0; c < o.length; c++) { var d = o[c]; if (!a.isTimeStampFrame(d)) { var h = new i(l, u, ""); h.value = d, this.id3Track.addCue(h) } } } } } }, e.onBufferFlushing = function (t, e) { var r = e.startOffset, n = e.endOffset, a = e.type; if (!a || "audio" === a) { var s = this.id3Track; s && Object(i.removeCuesInRange)(s, r, n) } }, t }(); e.default = s }, "./src/controller/latency-controller.ts":
/*!**********************************************!*\
    !*** ./src/controller/latency-controller.ts ***!
    \**********************************************/
/*! exports provided: default */function (t, e, r) { r.r(e), r.d(e, "default", (function () { return o })); var n = r(/*! ../errors */"./src/errors.ts"), i = r(/*! ../events */"./src/events.ts"), a = r(/*! ../utils/logger */"./src/utils/logger.ts"); function s(t, e) { for (var r = 0; r < e.length; r++) { var n = e[r]; n.enumerable = n.enumerable || !1, n.configurable = !0, "value" in n && (n.writable = !0), Object.defineProperty(t, n.key, n) } } var o = function () { function t(t) { var e = this; this.hls = void 0, this.config = void 0, this.media = null, this.levelDetails = null, this.currentTime = 0, this.stallCount = 0, this._latency = null, this.timeupdateHandler = function () { return e.timeupdate() }, this.hls = t, this.config = t.config, this.registerListeners() } var e, r, o, l = t.prototype; return l.destroy = function () { this.unregisterListeners(), this.onMediaDetaching(), this.levelDetails = null, this.hls = this.timeupdateHandler = null }, l.registerListeners = function () { this.hls.on(i.Events.MEDIA_ATTACHED, this.onMediaAttached, this), this.hls.on(i.Events.MEDIA_DETACHING, this.onMediaDetaching, this), this.hls.on(i.Events.MANIFEST_LOADING, this.onManifestLoading, this), this.hls.on(i.Events.LEVEL_UPDATED, this.onLevelUpdated, this), this.hls.on(i.Events.ERROR, this.onError, this) }, l.unregisterListeners = function () { this.hls.off(i.Events.MEDIA_ATTACHED, this.onMediaAttached), this.hls.off(i.Events.MEDIA_DETACHING, this.onMediaDetaching), this.hls.off(i.Events.MANIFEST_LOADING, this.onManifestLoading), this.hls.off(i.Events.LEVEL_UPDATED, this.onLevelUpdated), this.hls.off(i.Events.ERROR, this.onError) }, l.onMediaAttached = function (t, e) { this.media = e.media, this.media.addEventListener("timeupdate", this.timeupdateHandler) }, l.onMediaDetaching = function () { this.media && (this.media.removeEventListener("timeupdate", this.timeupdateHandler), this.media = null) }, l.onManifestLoading = function () { this.levelDetails = null, this._latency = null, this.stallCount = 0 }, l.onLevelUpdated = function (t, e) { var r = e.details; this.levelDetails = r, r.advanced && this.timeupdate(), !r.live && this.media && this.media.removeEventListener("timeupdate", this.timeupdateHandler) }, l.onError = function (t, e) { e.details === n.ErrorDetails.BUFFER_STALLED_ERROR && (this.stallCount++, a.logger.warn("[playback-rate-controller]: Stall detected, adjusting target latency")) }, l.timeupdate = function () { var t = this.media, e = this.levelDetails; if (t && e) { this.currentTime = t.currentTime; var r = this.computeLatency(); if (null !== r) { this._latency = r; var n = this.config, i = n.lowLatencyMode, a = n.maxLiveSyncPlaybackRate; if (i && 1 !== a) { var s = this.targetLatency; if (null !== s) { var o = r - s, l = o < Math.min(this.maxLatency, s + e.targetduration); if (e.live && l && o > .05 && this.forwardBufferLength > 1) { var u = Math.min(2, Math.max(1, a)), c = Math.round(2 / (1 + Math.exp(-.75 * o - this.edgeStalled)) * 20) / 20; t.playbackRate = Math.min(u, Math.max(1, c)) } else 1 !== t.playbackRate && 0 !== t.playbackRate && (t.playbackRate = 1) } } } } }, l.estimateLiveEdge = function () { var t = this.levelDetails; return null === t ? null : t.edge + t.age }, l.computeLatency = function () { var t = this.estimateLiveEdge(); return null === t ? null : t - this.currentTime }, e = t, (r = [{ key: "latency", get: function () { return this._latency || 0 } }, { key: "maxLatency", get: function () { var t = this.config, e = this.levelDetails; return void 0 !== t.liveMaxLatencyDuration ? t.liveMaxLatencyDuration : e ? t.liveMaxLatencyDurationCount * e.targetduration : 0 } }, { key: "targetLatency", get: function () { var t = this.levelDetails; if (null === t) return null; var e = t.holdBack, r = t.partHoldBack, n = t.targetduration, i = this.config, a = i.liveSyncDuration, s = i.liveSyncDurationCount, o = i.lowLatencyMode, l = this.hls.userConfig, u = o && r || e; (l.liveSyncDuration || l.liveSyncDurationCount || 0 === u) && (u = void 0 !== a ? a : s * n); var c = n; return u + Math.min(1 * this.stallCount, c) } }, { key: "liveSyncPosition", get: function () { var t = this.estimateLiveEdge(), e = this.targetLatency, r = this.levelDetails; if (null === t || null === e || null === r) return null; var n = r.edge, i = t - e - this.edgeStalled, a = n - r.totalduration, s = n - (this.config.lowLatencyMode && r.partTarget || r.targetduration); return Math.min(Math.max(a, i), s) } }, { key: "drift", get: function () { var t = this.levelDetails; return null === t ? 1 : t.drift } }, { key: "edgeStalled", get: function () { var t = this.levelDetails; if (null === t) return 0; var e = 3 * (this.config.lowLatencyMode && t.partTarget || t.targetduration); return Math.max(t.age - e, 0) } }, { key: "forwardBufferLength", get: function () { var t = this.media, e = this.levelDetails; if (!t || !e) return 0; var r = t.buffered.length; return r ? t.buffered.end(r - 1) : e.edge - this.currentTime } }]) && s(e.prototype, r), o && s(e, o), t }() }, "./src/controller/level-controller.ts":
/*!********************************************!*\
    !*** ./src/controller/level-controller.ts ***!
    \********************************************/
/*! exports provided: default */function (t, e, r) { r.r(e), r.d(e, "default", (function () { return p })); var n = r(/*! ../types/level */"./src/types/level.ts"), i = r(/*! ../events */"./src/events.ts"), a = r(/*! ../errors */"./src/errors.ts"), s = r(/*! ../utils/codecs */"./src/utils/codecs.ts"), o = r(/*! ./level-helper */"./src/controller/level-helper.ts"), l = r(/*! ./base-playlist-controller */"./src/controller/base-playlist-controller.ts"), u = r(/*! ../types/loader */"./src/types/loader.ts"); function c() { return c = Object.assign || function (t) { for (var e = 1; e < arguments.length; e++) { var r = arguments[e]; for (var n in r) Object.prototype.hasOwnProperty.call(r, n) && (t[n] = r[n]) } return t }, c.apply(this, arguments) } function d(t, e) { for (var r = 0; r < e.length; r++) { var n = e[r]; n.enumerable = n.enumerable || !1, n.configurable = !0, "value" in n && (n.writable = !0), Object.defineProperty(t, n.key, n) } } function h(t, e) { return h = Object.setPrototypeOf || function (t, e) { return t.__proto__ = e, t }, h(t, e) } var f = /chrome|firefox/.test(navigator.userAgent.toLowerCase()), p = function (t) { var e, r; function l(e) { var r; return (r = t.call(this, e, "[level-controller]") || this)._levels = [], r._firstLevel = -1, r._startLevel = void 0, r.currentLevelIndex = -1, r.manualLevelIndex = -1, r.onParsedComplete = void 0, r._registerListeners(), r } r = t, (e = l).prototype = Object.create(r.prototype), e.prototype.constructor = e, h(e, r); var p, g, v, m = l.prototype; return m._registerListeners = function () { var t = this.hls; t.on(i.Events.MANIFEST_LOADED, this.onManifestLoaded, this), t.on(i.Events.LEVEL_LOADED, this.onLevelLoaded, this), t.on(i.Events.AUDIO_TRACK_SWITCHED, this.onAudioTrackSwitched, this), t.on(i.Events.FRAG_LOADED, this.onFragLoaded, this), t.on(i.Events.ERROR, this.onError, this) }, m._unregisterListeners = function () { var t = this.hls; t.off(i.Events.MANIFEST_LOADED, this.onManifestLoaded, this), t.off(i.Events.LEVEL_LOADED, this.onLevelLoaded, this), t.off(i.Events.AUDIO_TRACK_SWITCHED, this.onAudioTrackSwitched, this), t.off(i.Events.FRAG_LOADED, this.onFragLoaded, this), t.off(i.Events.ERROR, this.onError, this) }, m.destroy = function () { this._unregisterListeners(), this.manualLevelIndex = -1, this._levels.length = 0, t.prototype.destroy.call(this) }, m.startLoad = function () { this._levels.forEach((function (t) { t.loadError = 0 })), t.prototype.startLoad.call(this) }, m.onManifestLoaded = function (t, e) { var r, l, u = [], c = [], d = [], h = {}, p = !1, g = !1, v = !1; if (e.levels.forEach((function (t) { var e = t.attrs; p = p || !(!t.width || !t.height), g = g || !!t.videoCodec, v = v || !!t.audioCodec, f && t.audioCodec && -1 !== t.audioCodec.indexOf("mp4a.40.34") && (t.audioCodec = void 0); var r = t.bitrate + "-" + t.attrs.RESOLUTION + "-" + t.attrs.CODECS; (l = h[r]) ? l.url.push(t.url) : (l = new n.Level(t), h[r] = l, u.push(l)), e && (e.AUDIO && Object(o.addGroupId)(l, "audio", e.AUDIO), e.SUBTITLES && Object(o.addGroupId)(l, "text", e.SUBTITLES)) })), (p || g) && v && (u = u.filter((function (t) { var e = t.videoCodec, r = t.width, n = t.height; return !!e || !(!r || !n) }))), u = u.filter((function (t) { var e = t.audioCodec, r = t.videoCodec; return (!e || Object(s.isCodecSupportedInMp4)(e, "audio")) && (!r || Object(s.isCodecSupportedInMp4)(r, "video")) })), e.audioTracks && (c = e.audioTracks.filter((function (t) { return !t.audioCodec || Object(s.isCodecSupportedInMp4)(t.audioCodec, "audio") })), Object(o.assignTrackIdsByGroup)(c)), e.subtitles && (d = e.subtitles, Object(o.assignTrackIdsByGroup)(d)), u.length > 0) { r = u[0].bitrate, u.sort((function (t, e) { return t.bitrate - e.bitrate })), this._levels = u; for (var m = 0; m < u.length; m++)if (u[m].bitrate === r) { this._firstLevel = m, this.log("manifest loaded, " + u.length + " level(s) found, first bitrate: " + r); break } var y = v && !g, A = { levels: u, audioTracks: c, subtitleTracks: d, firstLevel: this._firstLevel, stats: e.stats, audio: v, video: g, altAudio: !y && c.some((function (t) { return !!t.url })) }; this.hls.trigger(i.Events.MANIFEST_PARSED, A), (this.hls.config.autoStartLoad || this.hls.forceStartLoad) && this.hls.startLoad(this.hls.config.startPosition) } else this.hls.trigger(i.Events.ERROR, { type: a.ErrorTypes.MEDIA_ERROR, details: a.ErrorDetails.MANIFEST_INCOMPATIBLE_CODECS_ERROR, fatal: !0, url: e.url, reason: "no level with compatible codecs found in manifest" }) }, m.onError = function (e, r) { if (t.prototype.onError.call(this, e, r), !r.fatal) { var n = r.context, i = this._levels[this.currentLevelIndex]; if (n && (n.type === u.PlaylistContextType.AUDIO_TRACK && i.audioGroupIds && n.groupId === i.audioGroupIds[i.urlId] || n.type === u.PlaylistContextType.SUBTITLE_TRACK && i.textGroupIds && n.groupId === i.textGroupIds[i.urlId])) this.redundantFailover(this.currentLevelIndex); else { var s, o = !1, l = !0; switch (r.details) { case a.ErrorDetails.FRAG_LOAD_ERROR: case a.ErrorDetails.FRAG_LOAD_TIMEOUT: case a.ErrorDetails.KEY_LOAD_ERROR: case a.ErrorDetails.KEY_LOAD_TIMEOUT: if (r.frag) { var c = this._levels[r.frag.level]; c ? (c.fragmentError++, c.fragmentError > this.hls.config.fragLoadingMaxRetry && (s = r.frag.level)) : s = r.frag.level } break; case a.ErrorDetails.LEVEL_LOAD_ERROR: case a.ErrorDetails.LEVEL_LOAD_TIMEOUT: n && (n.deliveryDirectives && (l = !1), s = n.level), o = !0; break; case a.ErrorDetails.REMUX_ALLOC_ERROR: s = r.level, o = !0 }void 0 !== s && this.recoverLevel(r, s, o, l) } } }, m.recoverLevel = function (t, e, r, n) { var i = t.details, a = this._levels[e]; if (a.loadError++, r) { if (!this.retryLoadingOrFail(t)) return void (this.currentLevelIndex = -1); t.levelRetry = !0 } if (n) { var s = a.url.length; if (s > 1 && a.loadError < s) t.levelRetry = !0, this.redundantFailover(e); else if (-1 === this.manualLevelIndex) { var o = 0 === e ? this._levels.length - 1 : e - 1; this.currentLevelIndex !== o && 0 === this._levels[o].loadError && (this.warn(i + ": switch to " + o), t.levelRetry = !0, this.hls.nextAutoLevel = o) } } }, m.redundantFailover = function (t) { var e = this._levels[t], r = e.url.length; if (r > 1) { var n = (e.urlId + 1) % r; this.warn("Switching to redundant URL-id " + n), this._levels.forEach((function (t) { t.urlId = n })), this.level = t } }, m.onFragLoaded = function (t, e) { var r = e.frag; if (void 0 !== r && r.type === u.PlaylistLevelType.MAIN) { var n = this._levels[r.level]; void 0 !== n && (n.fragmentError = 0, n.loadError = 0) } }, m.onLevelLoaded = function (t, e) { var r, n, i = e.level, a = e.details, s = this._levels[i]; if (!s) return this.warn("Invalid level index " + i), void (null !== (n = e.deliveryDirectives) && void 0 !== n && n.skip && (a.deltaUpdateFailed = !0)); i === this.currentLevelIndex ? (0 === s.fragmentError && (s.loadError = 0, this.retryCount = 0), this.playlistLoaded(i, e, s.details)) : null !== (r = e.deliveryDirectives) && void 0 !== r && r.skip && (a.deltaUpdateFailed = !0) }, m.onAudioTrackSwitched = function (t, e) { var r = this.hls.levels[this.currentLevelIndex]; if (r && r.audioGroupIds) { for (var n = -1, i = this.hls.audioTracks[e.id].groupId, a = 0; a < r.audioGroupIds.length; a++)if (r.audioGroupIds[a] === i) { n = a; break } n !== r.urlId && (r.urlId = n, this.startLoad()) } }, m.loadPlaylist = function (t) { var e = this.currentLevelIndex, r = this._levels[e]; if (this.canLoad && r && r.url.length > 0) { var n = r.urlId, a = r.url[n]; if (t) try { a = t.addDirectives(a) } catch (t) { this.warn("Could not construct new URL with HLS Delivery Directives: " + t) } this.log("Attempt loading level index " + e + (t ? " at sn " + t.msn + " part " + t.part : "") + " with URL-id " + n + " " + a), this.clearTimer(), this.hls.trigger(i.Events.LEVEL_LOADING, { url: a, level: e, id: n, deliveryDirectives: t || null }) } }, m.removeLevel = function (t, e) { var r = function (t, r) { return r !== e }, n = this._levels.filter((function (n, i) { return i !== t || n.url.length > 1 && void 0 !== e && (n.url = n.url.filter(r), n.audioGroupIds && (n.audioGroupIds = n.audioGroupIds.filter(r)), n.textGroupIds && (n.textGroupIds = n.textGroupIds.filter(r)), n.urlId = 0, !0) })).map((function (t, e) { var r = t.details; return null != r && r.fragments && r.fragments.forEach((function (t) { t.level = e })), t })); this._levels = n, this.hls.trigger(i.Events.LEVELS_UPDATED, { levels: n }) }, p = l, (g = [{ key: "levels", get: function () { return 0 === this._levels.length ? null : this._levels } }, { key: "level", get: function () { return this.currentLevelIndex }, set: function (t) { var e, r = this._levels; if (0 !== r.length && (this.currentLevelIndex !== t || null === (e = r[t]) || void 0 === e || !e.details)) { if (t < 0 || t >= r.length) { var n = t < 0; if (this.hls.trigger(i.Events.ERROR, { type: a.ErrorTypes.OTHER_ERROR, details: a.ErrorDetails.LEVEL_SWITCH_ERROR, level: t, fatal: n, reason: "invalid level idx" }), n) return; t = Math.min(t, r.length - 1) } this.clearTimer(); var s = this.currentLevelIndex, o = r[s], l = r[t]; this.log("switching to level " + t + " from " + s), this.currentLevelIndex = t; var u = c({}, l, { level: t, maxBitrate: l.maxBitrate, uri: l.uri, urlId: l.urlId }); delete u._urlId, this.hls.trigger(i.Events.LEVEL_SWITCHING, u); var d = l.details; if (!d || d.live) { var h = this.switchParams(l.uri, null == o ? void 0 : o.details); this.loadPlaylist(h) } } } }, { key: "manualLevel", get: function () { return this.manualLevelIndex }, set: function (t) { this.manualLevelIndex = t, void 0 === this._startLevel && (this._startLevel = t), -1 !== t && (this.level = t) } }, { key: "firstLevel", get: function () { return this._firstLevel }, set: function (t) { this._firstLevel = t } }, { key: "startLevel", get: function () { if (void 0 === this._startLevel) { var t = this.hls.config.startLevel; return void 0 !== t ? t : this._firstLevel } return this._startLevel }, set: function (t) { this._startLevel = t } }, { key: "nextLoadLevel", get: function () { return -1 !== this.manualLevelIndex ? this.manualLevelIndex : this.hls.nextAutoLevel }, set: function (t) { this.level = t, -1 === this.manualLevelIndex && (this.hls.nextAutoLevel = t) } }]) && d(p.prototype, g), v && d(p, v), l }(l.default) }, "./src/controller/level-helper.ts":
/*!****************************************!*\
    !*** ./src/controller/level-helper.ts ***!
    \****************************************/
/*! exports provided: addGroupId, assignTrackIdsByGroup, updatePTS, updateFragPTSDTS, mergeDetails, mapPartIntersection, mapFragmentIntersection, adjustSliding, addSliding, computeReloadInterval, getFragmentWithSN, getPartWith */function (t, e, r) { r.r(e), r.d(e, "addGroupId", (function () { return a })), r.d(e, "assignTrackIdsByGroup", (function () { return s })), r.d(e, "updatePTS", (function () { return o })), r.d(e, "updateFragPTSDTS", (function () { return u })), r.d(e, "mergeDetails", (function () { return c })), r.d(e, "mapPartIntersection", (function () { return d })), r.d(e, "mapFragmentIntersection", (function () { return h })), r.d(e, "adjustSliding", (function () { return f })), r.d(e, "addSliding", (function () { return p })), r.d(e, "computeReloadInterval", (function () { return g })), r.d(e, "getFragmentWithSN", (function () { return v })), r.d(e, "getPartWith", (function () { return m })); var n = r(/*! ./src/polyfills/number */"./src/polyfills/number.ts"), i = r(/*! ../utils/logger */"./src/utils/logger.ts"); function a(t, e, r) { switch (e) { case "audio": t.audioGroupIds || (t.audioGroupIds = []), t.audioGroupIds.push(r); break; case "text": t.textGroupIds || (t.textGroupIds = []), t.textGroupIds.push(r) } } function s(t) { var e = {}; t.forEach((function (t) { var r = t.groupId || ""; t.id = e[r] = e[r] || 0, e[r]++ })) } function o(t, e, r) { l(t[e], t[r]) } function l(t, e) { var r = e.startPTS; if (Object(n.isFiniteNumber)(r)) { var i, a = 0; e.sn > t.sn ? (a = r - t.start, i = t) : (a = t.start - r, i = e), i.duration !== a && (i.duration = a) } else e.sn > t.sn ? t.cc === e.cc && t.minEndPTS ? e.start = t.start + (t.minEndPTS - t.start) : e.start = t.start + t.duration : e.start = Math.max(t.start - e.duration, 0) } function u(t, e, r, a, s, o) { a - r <= 0 && (i.logger.warn("Fragment should have a positive duration", e), a = r + e.duration, o = s + e.duration); var u = r, c = a, d = e.startPTS, h = e.endPTS; if (Object(n.isFiniteNumber)(d)) { var f = Math.abs(d - r); Object(n.isFiniteNumber)(e.deltaPTS) ? e.deltaPTS = Math.max(f, e.deltaPTS) : e.deltaPTS = f, u = Math.max(r, d), r = Math.min(r, d), s = Math.min(s, e.startDTS), c = Math.min(a, h), a = Math.max(a, h), o = Math.max(o, e.endDTS) } e.duration = a - r; var p = r - e.start; e.appendedPTS = a, e.start = e.startPTS = r, e.maxStartPTS = u, e.startDTS = s, e.endPTS = a, e.minEndPTS = c, e.endDTS = o; var g, v = e.sn; if (!t || v < t.startSN || v > t.endSN) return 0; var m = v - t.startSN, y = t.fragments; for (y[m] = e, g = m; g > 0; g--)l(y[g], y[g - 1]); for (g = m; g < y.length - 1; g++)l(y[g], y[g + 1]); return t.fragmentHint && l(y[y.length - 1], t.fragmentHint), t.PTSKnown = t.alignedSliding = !0, p } function c(t, e) { for (var r = null, a = t.fragments, s = a.length - 1; s >= 0; s--) { var o = a[s].initSegment; if (o) { r = o; break } } t.fragmentHint && delete t.fragmentHint.endPTS; var l, c = 0; if (h(t, e, (function (t, i) { t.relurl && (c = t.cc - i.cc), Object(n.isFiniteNumber)(t.startPTS) && Object(n.isFiniteNumber)(t.endPTS) && (i.start = i.startPTS = t.startPTS, i.startDTS = t.startDTS, i.appendedPTS = t.appendedPTS, i.maxStartPTS = t.maxStartPTS, i.endPTS = t.endPTS, i.endDTS = t.endDTS, i.minEndPTS = t.minEndPTS, i.duration = t.endPTS - t.startPTS, i.duration && (l = i), e.PTSKnown = e.alignedSliding = !0), i.elementaryStreams = t.elementaryStreams, i.loader = t.loader, i.stats = t.stats, i.urlId = t.urlId, t.initSegment && (i.initSegment = t.initSegment, r = t.initSegment) })), r && (e.fragmentHint ? e.fragments.concat(e.fragmentHint) : e.fragments).forEach((function (t) { var e; t.initSegment && t.initSegment.relurl !== (null === (e = r) || void 0 === e ? void 0 : e.relurl) || (t.initSegment = r) })), e.skippedSegments && (e.deltaUpdateFailed = e.fragments.some((function (t) { return !t })), e.deltaUpdateFailed)) { i.logger.warn("[level-helper] Previous playlist missing segments skipped in delta playlist"); for (var p = e.skippedSegments; p--;)e.fragments.shift(); e.startSN = e.fragments[0].sn, e.startCC = e.fragments[0].cc } var g = e.fragments; if (c) { i.logger.warn("discontinuity sliding from playlist, take drift into account"); for (var v = 0; v < g.length; v++)g[v].cc += c } e.skippedSegments && (e.startCC = e.fragments[0].cc), d(t.partList, e.partList, (function (t, e) { e.elementaryStreams = t.elementaryStreams, e.stats = t.stats })), l ? u(e, l, l.startPTS, l.endPTS, l.startDTS, l.endDTS) : f(t, e), g.length && (e.totalduration = e.edge - g[0].start), e.driftStartTime = t.driftStartTime, e.driftStart = t.driftStart; var m = e.advancedDateTime; if (e.advanced && m) { var y = e.edge; e.driftStart || (e.driftStartTime = m, e.driftStart = y), e.driftEndTime = m, e.driftEnd = y } else e.driftEndTime = t.driftEndTime, e.driftEnd = t.driftEnd, e.advancedDateTime = t.advancedDateTime } function d(t, e, r) { if (t && e) for (var n = 0, i = 0, a = t.length; i <= a; i++) { var s = t[i], o = e[i + n]; s && o && s.index === o.index && s.fragment.sn === o.fragment.sn ? r(s, o) : n-- } } function h(t, e, r) { for (var n = e.skippedSegments, i = Math.max(t.startSN, e.startSN) - e.startSN, a = (t.fragmentHint ? 1 : 0) + (n ? e.endSN : Math.min(t.endSN, e.endSN)) - e.startSN, s = e.startSN - t.startSN, o = e.fragmentHint ? e.fragments.concat(e.fragmentHint) : e.fragments, l = t.fragmentHint ? t.fragments.concat(t.fragmentHint) : t.fragments, u = i; u <= a; u++) { var c = l[s + u], d = o[u]; n && !d && u < n && (d = e.fragments[u] = c), c && d && r(c, d) } } function f(t, e) { var r = e.startSN + e.skippedSegments - t.startSN, n = t.fragments; r < 0 || r >= n.length || p(e, n[r].start) } function p(t, e) { if (e) { for (var r = t.fragments, n = t.skippedSegments; n < r.length; n++)r[n].start += e; t.fragmentHint && (t.fragmentHint.start += e) } } function g(t, e) { var r, n = 1e3 * t.levelTargetDuration, i = n / 2, a = t.age, s = a > 0 && a < 3 * n, o = e.loading.end - e.loading.start, l = t.availabilityDelay; if (!1 === t.updated) if (s) { var u = 333 * t.misses; r = Math.max(Math.min(i, 2 * o), u), t.availabilityDelay = (t.availabilityDelay || 0) + r } else r = i; else s ? (l = Math.min(l || n / 2, a), t.availabilityDelay = l, r = l + n - a) : r = n - o; return Math.round(r) } function v(t, e, r) { if (!t || !t.details) return null; var n = t.details, i = n.fragments[e - n.startSN]; return i || ((i = n.fragmentHint) && i.sn === e ? i : e < n.startSN && r && r.sn === e ? r : null) } function m(t, e, r) { if (!t || !t.details) return null; var n = t.details.partList; if (n) for (var i = n.length; i--;) { var a = n[i]; if (a.index === r && a.fragment.sn === e) return a } return null } }, "./src/controller/stream-controller.ts":
/*!*********************************************!*\
    !*** ./src/controller/stream-controller.ts ***!
    \*********************************************/
/*! exports provided: default */function (t, e, r) { r.r(e), r.d(e, "default", (function () { return y })); var n = r(/*! ./src/polyfills/number */"./src/polyfills/number.ts"), i = r(/*! ./base-stream-controller */"./src/controller/base-stream-controller.ts"), a = r(/*! ../is-supported */"./src/is-supported.ts"), s = r(/*! ../events */"./src/events.ts"), o = r(/*! ../utils/buffer-helper */"./src/utils/buffer-helper.ts"), l = r(/*! ./fragment-tracker */"./src/controller/fragment-tracker.ts"), u = r(/*! ../types/loader */"./src/types/loader.ts"), c = r(/*! ../loader/fragment */"./src/loader/fragment.ts"), d = r(/*! ../demux/transmuxer-interface */"./src/demux/transmuxer-interface.ts"), h = r(/*! ../types/transmuxer */"./src/types/transmuxer.ts"), f = r(/*! ./gap-controller */"./src/controller/gap-controller.ts"), p = r(/*! ../errors */"./src/errors.ts"), g = r(/*! ../utils/logger */"./src/utils/logger.ts"); function v(t, e) { for (var r = 0; r < e.length; r++) { var n = e[r]; n.enumerable = n.enumerable || !1, n.configurable = !0, "value" in n && (n.writable = !0), Object.defineProperty(t, n.key, n) } } function m(t, e) { return m = Object.setPrototypeOf || function (t, e) { return t.__proto__ = e, t }, m(t, e) } var y = function (t) { var e, r; function y(e, r) { var n; return (n = t.call(this, e, r, "[stream-controller]") || this).audioCodecSwap = !1, n.gapController = null, n.level = -1, n._forceStartLoad = !1, n.altAudio = !1, n.audioOnly = !1, n.fragPlaying = null, n.onvplaying = null, n.onvseeked = null, n.fragLastKbps = 0, n.stalled = !1, n.couldBacktrack = !1, n.audioCodecSwitch = !1, n.videoBuffer = null, n._registerListeners(), n } r = t, (e = y).prototype = Object.create(r.prototype), e.prototype.constructor = e, m(e, r); var A, E, T, b = y.prototype; return b._registerListeners = function () { var t = this.hls; t.on(s.Events.MEDIA_ATTACHED, this.onMediaAttached, this), t.on(s.Events.MEDIA_DETACHING, this.onMediaDetaching, this), t.on(s.Events.MANIFEST_LOADING, this.onManifestLoading, this), t.on(s.Events.MANIFEST_PARSED, this.onManifestParsed, this), t.on(s.Events.LEVEL_LOADING, this.onLevelLoading, this), t.on(s.Events.LEVEL_LOADED, this.onLevelLoaded, this), t.on(s.Events.FRAG_LOAD_EMERGENCY_ABORTED, this.onFragLoadEmergencyAborted, this), t.on(s.Events.ERROR, this.onError, this), t.on(s.Events.AUDIO_TRACK_SWITCHING, this.onAudioTrackSwitching, this), t.on(s.Events.AUDIO_TRACK_SWITCHED, this.onAudioTrackSwitched, this), t.on(s.Events.BUFFER_CREATED, this.onBufferCreated, this), t.on(s.Events.BUFFER_FLUSHED, this.onBufferFlushed, this), t.on(s.Events.LEVELS_UPDATED, this.onLevelsUpdated, this), t.on(s.Events.FRAG_BUFFERED, this.onFragBuffered, this) }, b._unregisterListeners = function () { var t = this.hls; t.off(s.Events.MEDIA_ATTACHED, this.onMediaAttached, this), t.off(s.Events.MEDIA_DETACHING, this.onMediaDetaching, this), t.off(s.Events.MANIFEST_LOADING, this.onManifestLoading, this), t.off(s.Events.MANIFEST_PARSED, this.onManifestParsed, this), t.off(s.Events.LEVEL_LOADED, this.onLevelLoaded, this), t.off(s.Events.FRAG_LOAD_EMERGENCY_ABORTED, this.onFragLoadEmergencyAborted, this), t.off(s.Events.ERROR, this.onError, this), t.off(s.Events.AUDIO_TRACK_SWITCHING, this.onAudioTrackSwitching, this), t.off(s.Events.AUDIO_TRACK_SWITCHED, this.onAudioTrackSwitched, this), t.off(s.Events.BUFFER_CREATED, this.onBufferCreated, this), t.off(s.Events.BUFFER_FLUSHED, this.onBufferFlushed, this), t.off(s.Events.LEVELS_UPDATED, this.onLevelsUpdated, this), t.off(s.Events.FRAG_BUFFERED, this.onFragBuffered, this) }, b.onHandlerDestroying = function () { this._unregisterListeners(), this.onMediaDetaching() }, b.startLoad = function (t) { if (this.levels) { var e = this.lastCurrentTime, r = this.hls; if (this.stopLoad(), this.setInterval(100), this.level = -1, this.fragLoadError = 0, !this.startFragRequested) { var n = r.startLevel; -1 === n && (r.config.testBandwidth ? (n = 0, this.bitrateTest = !0) : n = r.nextAutoLevel), this.level = r.nextLoadLevel = n, this.loadedmetadata = !1 } e > 0 && -1 === t && (this.log("Override startPosition with lastCurrentTime @" + e.toFixed(3)), t = e), this.state = i.State.IDLE, this.nextLoadPosition = this.startPosition = this.lastCurrentTime = t, this.tick() } else this._forceStartLoad = !0, this.state = i.State.STOPPED }, b.stopLoad = function () { this._forceStartLoad = !1, t.prototype.stopLoad.call(this) }, b.doTick = function () { switch (this.state) { case i.State.IDLE: this.doTickIdle(); break; case i.State.WAITING_LEVEL: var t, e = this.levels, r = this.level, n = null == e || null === (t = e[r]) || void 0 === t ? void 0 : t.details; if (n && (!n.live || this.levelLastLoaded === this.level)) { if (this.waitForCdnTuneIn(n)) break; this.state = i.State.IDLE; break } break; case i.State.FRAG_LOADING_WAITING_RETRY: var a, s = self.performance.now(), o = this.retryDate; (!o || s >= o || null !== (a = this.media) && void 0 !== a && a.seeking) && (this.log("retryDate reached, switch back to IDLE state"), this.state = i.State.IDLE) }this.onTickEnd() }, b.onTickEnd = function () { t.prototype.onTickEnd.call(this), this.checkBuffer(), this.checkFragmentChanged() }, b.doTickIdle = function () { var t, e, r = this.hls, n = this.levelLastLoaded, a = this.levels, o = this.media, d = r.config, h = r.nextLoadLevel; if (null !== n && (o || !this.startFragRequested && d.startFragPrefetch) && (!this.altAudio || !this.audioOnly) && a && a[h]) { var f = a[h]; this.level = r.nextLoadLevel = h; var p = f.details; if (!p || this.state === i.State.WAITING_LEVEL || p.live && this.levelLastLoaded !== h) this.state = i.State.WAITING_LEVEL; else { var g = this.getFwdBufferInfo(this.mediaBuffer ? this.mediaBuffer : o, u.PlaylistLevelType.MAIN); if (null !== g && !(g.len >= this.getMaxBufferLength(f.maxBitrate))) { if (this._streamEnded(g, p)) { var v = {}; return this.altAudio && (v.type = "video"), this.hls.trigger(s.Events.BUFFER_EOS, v), void (this.state = i.State.ENDED) } var m = g.end, y = this.getNextFragment(m, p); if (this.couldBacktrack && !this.fragPrevious && y && "initSegment" !== y.sn) { var A = y.sn - p.startSN; A > 1 && (y = p.fragments[A - 1], this.fragmentTracker.removeFragment(y)) } if (y && this.fragmentTracker.getState(y) === l.FragmentState.OK && this.nextLoadPosition > m) { var E = this.audioOnly && !this.altAudio ? c.ElementaryStreamTypes.AUDIO : c.ElementaryStreamTypes.VIDEO; this.afterBufferFlushed(o, E, u.PlaylistLevelType.MAIN), y = this.getNextFragment(this.nextLoadPosition, p) } y && (!y.initSegment || y.initSegment.data || this.bitrateTest || (y = y.initSegment), "identity" !== (null === (t = y.decryptdata) || void 0 === t ? void 0 : t.keyFormat) || null !== (e = y.decryptdata) && void 0 !== e && e.key ? this.loadFragment(y, p, m) : this.loadKey(y, p)) } } } }, b.loadFragment = function (e, r, n) { var i, a = this.fragmentTracker.getState(e); if (this.fragCurrent = e, a === l.FragmentState.BACKTRACKED) { var s = this.fragmentTracker.getBacktrackData(e); if (s) return this._handleFragmentLoadProgress(s), void this._handleFragmentLoadComplete(s); a = l.FragmentState.NOT_LOADED } a === l.FragmentState.NOT_LOADED || a === l.FragmentState.PARTIAL ? "initSegment" === e.sn ? this._loadInitSegment(e) : this.bitrateTest ? (e.bitrateTest = !0, this.log("Fragment " + e.sn + " of level " + e.level + " is being downloaded to test bitrate and will not be buffered"), this._loadBitrateTestFrag(e)) : (this.startFragRequested = !0, t.prototype.loadFragment.call(this, e, r, n)) : a === l.FragmentState.APPENDING ? this.reduceMaxBufferLength(e.duration) && this.fragmentTracker.removeFragment(e) : 0 === (null === (i = this.media) || void 0 === i ? void 0 : i.buffered.length) && this.fragmentTracker.removeAllFragments() }, b.getAppendedFrag = function (t) { var e = this.fragmentTracker.getAppendedFrag(t, u.PlaylistLevelType.MAIN); return e && "fragment" in e ? e.fragment : e }, b.getBufferedFrag = function (t) { return this.fragmentTracker.getBufferedFrag(t, u.PlaylistLevelType.MAIN) }, b.followingBufferedFrag = function (t) { return t ? this.getBufferedFrag(t.end + .5) : null }, b.immediateLevelSwitch = function () { this.abortCurrentFrag(), this.flushMainBuffer(0, Number.POSITIVE_INFINITY) }, b.nextLevelSwitch = function () { var t = this.levels, e = this.media; if (null != e && e.readyState) { var r, n = this.getAppendedFrag(e.currentTime); if (n && n.start > 1 && this.flushMainBuffer(0, n.start - 1), !e.paused && t) { var i = t[this.hls.nextLoadLevel], a = this.fragLastKbps; r = a && this.fragCurrent ? this.fragCurrent.duration * i.maxBitrate / (1e3 * a) + 1 : 0 } else r = 0; var s = this.getBufferedFrag(e.currentTime + r); if (s) { var o = this.followingBufferedFrag(s); if (o) { this.abortCurrentFrag(); var l = o.maxStartPTS ? o.maxStartPTS : o.start, u = o.duration, c = Math.max(s.end, l + Math.min(Math.max(u - this.config.maxFragLookUpTolerance, .5 * u), .75 * u)); this.flushMainBuffer(c, Number.POSITIVE_INFINITY) } } } }, b.abortCurrentFrag = function () { var t = this.fragCurrent; this.fragCurrent = null, null != t && t.loader && t.loader.abort(), this.state === i.State.KEY_LOADING && (this.state = i.State.IDLE), this.nextLoadPosition = this.getLoadPosition() }, b.flushMainBuffer = function (e, r) { t.prototype.flushMainBuffer.call(this, e, r, this.altAudio ? "video" : null) }, b.onMediaAttached = function (e, r) { t.prototype.onMediaAttached.call(this, e, r); var n = r.media; this.onvplaying = this.onMediaPlaying.bind(this), this.onvseeked = this.onMediaSeeked.bind(this), n.addEventListener("playing", this.onvplaying), n.addEventListener("seeked", this.onvseeked), this.gapController = new f.default(this.config, n, this.fragmentTracker, this.hls) }, b.onMediaDetaching = function () { var e = this.media; e && (e.removeEventListener("playing", this.onvplaying), e.removeEventListener("seeked", this.onvseeked), this.onvplaying = this.onvseeked = null, this.videoBuffer = null), this.fragPlaying = null, this.gapController && (this.gapController.destroy(), this.gapController = null), t.prototype.onMediaDetaching.call(this) }, b.onMediaPlaying = function () { this.tick() }, b.onMediaSeeked = function () { var t = this.media, e = t ? t.currentTime : null; Object(n.isFiniteNumber)(e) && this.log("Media seeked to " + e.toFixed(3)), this.tick() }, b.onManifestLoading = function () { this.log("Trigger BUFFER_RESET"), this.hls.trigger(s.Events.BUFFER_RESET, void 0), this.fragmentTracker.removeAllFragments(), this.couldBacktrack = this.stalled = !1, this.startPosition = this.lastCurrentTime = 0, this.fragPlaying = null }, b.onManifestParsed = function (t, e) { var r, n = !1, i = !1; e.levels.forEach((function (t) { (r = t.audioCodec) && (-1 !== r.indexOf("mp4a.40.2") && (n = !0), -1 !== r.indexOf("mp4a.40.5") && (i = !0)) })), this.audioCodecSwitch = n && i && !Object(a.changeTypeSupported)(), this.audioCodecSwitch && this.log("Both AAC/HE-AAC audio found in levels; declaring level codec as HE-AAC"), this.levels = e.levels, this.startFragRequested = !1 }, b.onLevelLoading = function (t, e) { var r = this.levels; if (r && this.state === i.State.IDLE) { var n = r[e.level]; (!n.details || n.details.live && this.levelLastLoaded !== e.level || this.waitForCdnTuneIn(n.details)) && (this.state = i.State.WAITING_LEVEL) } }, b.onLevelLoaded = function (t, e) { var r, n = this.levels, a = e.level, o = e.details, l = o.totalduration; if (n) { this.log("Level " + a + " loaded [" + o.startSN + "," + o.endSN + "], cc [" + o.startCC + ", " + o.endCC + "] duration:" + l); var u = this.fragCurrent; !u || this.state !== i.State.FRAG_LOADING && this.state !== i.State.FRAG_LOADING_WAITING_RETRY || u.level !== e.level && u.loader && (this.state = i.State.IDLE, u.loader.abort()); var c = n[a], d = 0; if (o.live || null !== (r = c.details) && void 0 !== r && r.live) { if (o.fragments[0] || (o.deltaUpdateFailed = !0), o.deltaUpdateFailed) return; d = this.alignPlaylists(o, c.details) } if (c.details = o, this.levelLastLoaded = a, this.hls.trigger(s.Events.LEVEL_UPDATED, { details: o, level: a }), this.state === i.State.WAITING_LEVEL) { if (this.waitForCdnTuneIn(o)) return; this.state = i.State.IDLE } this.startFragRequested ? o.live && this.synchronizeToLiveEdge(o) : this.setStartPosition(o, d), this.tick() } else this.warn("Levels were reset while loading level " + a) }, b._handleFragmentLoadProgress = function (t) { var e, r = t.frag, n = t.part, i = t.payload, a = this.levels; if (a) { var s = a[r.level], o = s.details; if (o) { var l = s.videoCodec, c = o.PTSKnown || !o.live, f = null === (e = r.initSegment) || void 0 === e ? void 0 : e.data, p = this._getAudioCodec(s), g = this.transmuxer = this.transmuxer || new d.default(this.hls, u.PlaylistLevelType.MAIN, this._handleTransmuxComplete.bind(this), this._handleTransmuxerFlush.bind(this)), v = n ? n.index : -1, m = -1 !== v, y = new h.ChunkMetadata(r.level, r.sn, r.stats.chunkCount, i.byteLength, v, m), A = this.initPTS[r.cc]; g.push(i, f, p, l, r, n, o.totalduration, c, y, A) } else this.warn("Dropping fragment " + r.sn + " of level " + r.level + " after level details were reset") } else this.warn("Levels were reset while fragment load was in progress. Fragment " + r.sn + " of level " + r.level + " will not be buffered") }, b.onAudioTrackSwitching = function (t, e) { var r = this.altAudio, n = !!e.url, i = e.id; if (!n) { if (this.mediaBuffer !== this.media) { this.log("Switching on main audio, use media.buffered to schedule main fragment loading"), this.mediaBuffer = this.media; var a = this.fragCurrent; null != a && a.loader && (this.log("Switching to main audio track, cancel main fragment load"), a.loader.abort()), this.resetTransmuxer(), this.resetLoadingState() } else this.audioOnly && this.resetTransmuxer(); var o = this.hls; r && o.trigger(s.Events.BUFFER_FLUSHING, { startOffset: 0, endOffset: Number.POSITIVE_INFINITY, type: "audio" }), o.trigger(s.Events.AUDIO_TRACK_SWITCHED, { id: i }) } }, b.onAudioTrackSwitched = function (t, e) { var r = e.id, n = !!this.hls.audioTracks[r].url; if (n) { var i = this.videoBuffer; i && this.mediaBuffer !== i && (this.log("Switching on alternate audio, use video.buffered to schedule main fragment loading"), this.mediaBuffer = i) } this.altAudio = n, this.tick() }, b.onBufferCreated = function (t, e) { var r, n, i = e.tracks, a = !1; for (var s in i) { var o = i[s]; if ("main" === o.id) { if (n = s, r = o, "video" === s) { var l = i[s]; l && (this.videoBuffer = l.buffer) } } else a = !0 } a && r ? (this.log("Alternate track found, use " + n + ".buffered to schedule main fragment loading"), this.mediaBuffer = r.buffer) : this.mediaBuffer = this.media }, b.onFragBuffered = function (t, e) { var r = e.frag, n = e.part; if (!r || r.type === u.PlaylistLevelType.MAIN) { if (this.fragContextChanged(r)) return this.warn("Fragment " + r.sn + (n ? " p: " + n.index : "") + " of level " + r.level + " finished buffering, but was aborted. state: " + this.state), void (this.state === i.State.PARSED && (this.state = i.State.IDLE)); var a = n ? n.stats : r.stats; this.fragLastKbps = Math.round(8 * a.total / (a.buffering.end - a.loading.first)), "initSegment" !== r.sn && (this.fragPrevious = r), this.fragBufferedComplete(r, n) } }, b.onError = function (t, e) { switch (e.details) { case p.ErrorDetails.FRAG_LOAD_ERROR: case p.ErrorDetails.FRAG_LOAD_TIMEOUT: case p.ErrorDetails.KEY_LOAD_ERROR: case p.ErrorDetails.KEY_LOAD_TIMEOUT: this.onFragmentOrKeyLoadError(u.PlaylistLevelType.MAIN, e); break; case p.ErrorDetails.LEVEL_LOAD_ERROR: case p.ErrorDetails.LEVEL_LOAD_TIMEOUT: this.state !== i.State.ERROR && (e.fatal ? (this.warn("" + e.details), this.state = i.State.ERROR) : e.levelRetry || this.state !== i.State.WAITING_LEVEL || (this.state = i.State.IDLE)); break; case p.ErrorDetails.BUFFER_FULL_ERROR: if ("main" === e.parent && (this.state === i.State.PARSING || this.state === i.State.PARSED)) { var r = !0, n = this.getFwdBufferInfo(this.media, u.PlaylistLevelType.MAIN); n && n.len > .5 && (r = !this.reduceMaxBufferLength(n.len)), r && (this.warn("buffer full error also media.currentTime is not buffered, flush main"), this.immediateLevelSwitch()), this.resetLoadingState() } } }, b.checkBuffer = function () { var t = this.media, e = this.gapController; if (t && e && t.readyState) { var r = o.BufferHelper.getBuffered(t); !this.loadedmetadata && r.length ? (this.loadedmetadata = !0, this.seekToStartPos()) : e.poll(this.lastCurrentTime), this.lastCurrentTime = t.currentTime } }, b.onFragLoadEmergencyAborted = function () { this.state = i.State.IDLE, this.loadedmetadata || (this.startFragRequested = !1, this.nextLoadPosition = this.startPosition), this.tickImmediate() }, b.onBufferFlushed = function (t, e) { var r = e.type; if (r !== c.ElementaryStreamTypes.AUDIO || this.audioOnly && !this.altAudio) { var n = (r === c.ElementaryStreamTypes.VIDEO ? this.videoBuffer : this.mediaBuffer) || this.media; this.afterBufferFlushed(n, r, u.PlaylistLevelType.MAIN) } }, b.onLevelsUpdated = function (t, e) { this.levels = e.levels }, b.swapAudioCodec = function () { this.audioCodecSwap = !this.audioCodecSwap }, b.seekToStartPos = function () { var t = this.media, e = t.currentTime, r = this.startPosition; if (r >= 0 && e < r) { if (t.seeking) return void g.logger.log("could not seek to " + r + ", already seeking at " + e); var n = o.BufferHelper.getBuffered(t), i = (n.length ? n.start(0) : 0) - r; i > 0 && (i < this.config.maxBufferHole || i < this.config.maxFragLookUpTolerance) && (g.logger.log("adjusting start position by " + i + " to match buffer start"), r += i, this.startPosition = r), this.log("seek to target start position " + r + " from current time " + e), t.currentTime = r } }, b._getAudioCodec = function (t) { var e = this.config.defaultAudioCodec || t.audioCodec; return this.audioCodecSwap && e && (this.log("Swapping audio codec"), e = -1 !== e.indexOf("mp4a.40.5") ? "mp4a.40.2" : "mp4a.40.5"), e }, b._loadBitrateTestFrag = function (t) { var e = this; this._doFragLoad(t).then((function (r) { var n = e.hls; if (r && !n.nextLoadLevel && !e.fragContextChanged(t)) { e.fragLoadError = 0, e.state = i.State.IDLE, e.startFragRequested = !1, e.bitrateTest = !1; var a = t.stats; a.parsing.start = a.parsing.end = a.buffering.start = a.buffering.end = self.performance.now(), n.trigger(s.Events.FRAG_LOADED, r) } })) }, b._handleTransmuxComplete = function (t) { var e, r = "main", a = this.hls, o = t.remuxResult, l = t.chunkMeta, u = this.getCurrentContext(l); if (!u) return this.warn("The loading context changed while buffering fragment " + l.sn + " of level " + l.level + ". This chunk will not be buffered."), void this.resetLiveStartWhenNotLoaded(l.level); var d = u.frag, h = u.part, f = u.level, p = o.video, g = o.text, v = o.id3, m = o.initSegment, y = this.altAudio ? void 0 : o.audio; if (!this.fragContextChanged(d)) { if (this.state = i.State.PARSING, m) { m.tracks && (this._bufferInitSegment(f, m.tracks, d, l), a.trigger(s.Events.FRAG_PARSING_INIT_SEGMENT, { frag: d, id: r, tracks: m.tracks })); var A = m.initPTS, E = m.timescale; Object(n.isFiniteNumber)(A) && (this.initPTS[d.cc] = A, a.trigger(s.Events.INIT_PTS_FOUND, { frag: d, id: r, initPTS: A, timescale: E })) } if (p && !1 !== o.independent) { if (f.details) { var T = p.startPTS, b = p.endPTS, k = p.startDTS, S = p.endDTS; if (h) h.elementaryStreams[p.type] = { startPTS: T, endPTS: b, startDTS: k, endDTS: S }; else if (p.firstKeyFrame && p.independent && (this.couldBacktrack = !0), p.dropped && p.independent) { if (this.getLoadPosition() + this.config.maxBufferHole < T) return void this.backtrack(d); d.setElementaryStreamInfo(p.type, d.start, b, d.start, S, !0) } d.setElementaryStreamInfo(p.type, T, b, k, S), this.bufferFragmentData(p, d, h, l) } } else if (!1 === o.independent) return void this.backtrack(d); if (y) { var _ = y.startPTS, C = y.endPTS, L = y.startDTS, R = y.endDTS; h && (h.elementaryStreams[c.ElementaryStreamTypes.AUDIO] = { startPTS: _, endPTS: C, startDTS: L, endDTS: R }), d.setElementaryStreamInfo(c.ElementaryStreamTypes.AUDIO, _, C, L, R), this.bufferFragmentData(y, d, h, l) } if (null != v && null !== (e = v.samples) && void 0 !== e && e.length) { var D = { frag: d, id: r, samples: v.samples }; a.trigger(s.Events.FRAG_PARSING_METADATA, D) } if (g) { var I = { frag: d, id: r, samples: g.samples }; a.trigger(s.Events.FRAG_PARSING_USERDATA, I) } } }, b._bufferInitSegment = function (t, e, r, n) { var a = this; if (this.state === i.State.PARSING) { this.audioOnly = !!e.audio && !e.video, this.altAudio && !this.audioOnly && delete e.audio; var o = e.audio, l = e.video, u = e.audiovideo; if (o) { var c = t.audioCodec, d = navigator.userAgent.toLowerCase(); this.audioCodecSwitch && (c && (c = -1 !== c.indexOf("mp4a.40.5") ? "mp4a.40.2" : "mp4a.40.5"), 1 !== o.metadata.channelCount && -1 === d.indexOf("firefox") && (c = "mp4a.40.5")), -1 !== d.indexOf("android") && "audio/mpeg" !== o.container && (c = "mp4a.40.2", this.log("Android: force audio codec to " + c)), t.audioCodec && t.audioCodec !== c && this.log('Swapping manifest audio codec "' + t.audioCodec + '" for "' + c + '"'), o.levelCodec = c, o.id = "main", this.log("Init audio buffer, container:" + o.container + ", codecs[selected/level/parsed]=[" + (c || "") + "/" + (t.audioCodec || "") + "/" + o.codec + "]") } l && (l.levelCodec = t.videoCodec, l.id = "main", this.log("Init video buffer, container:" + l.container + ", codecs[level/parsed]=[" + (t.videoCodec || "") + "/" + l.codec + "]")), u && this.log("Init audiovideo buffer, container:" + u.container + ", codecs[level/parsed]=[" + (t.attrs.CODECS || "") + "/" + u.codec + "]"), this.hls.trigger(s.Events.BUFFER_CODECS, e), Object.keys(e).forEach((function (t) { var i = e[t].initSegment; null != i && i.byteLength && a.hls.trigger(s.Events.BUFFER_APPENDING, { type: t, data: i, frag: r, part: null, chunkMeta: n, parent: r.type }) })), this.tick() } }, b.backtrack = function (t) { this.couldBacktrack = !0, this.resetTransmuxer(), this.flushBufferGap(t); var e = this.fragmentTracker.backtrack(t); this.fragPrevious = null, this.nextLoadPosition = t.start, e ? this.resetFragmentLoading(t) : this.state = i.State.BACKTRACKING }, b.checkFragmentChanged = function () { var t = this.media, e = null; if (t && t.readyState > 1 && !1 === t.seeking) { var r = t.currentTime; if (o.BufferHelper.isBuffered(t, r) ? e = this.getAppendedFrag(r) : o.BufferHelper.isBuffered(t, r + .1) && (e = this.getAppendedFrag(r + .1)), e) { var n = this.fragPlaying, i = e.level; n && e.sn === n.sn && n.level === i && e.urlId === n.urlId || (this.hls.trigger(s.Events.FRAG_CHANGED, { frag: e }), n && n.level === i || this.hls.trigger(s.Events.LEVEL_SWITCHED, { level: i }), this.fragPlaying = e) } } }, A = y, (E = [{ key: "nextLevel", get: function () { var t = this.nextBufferedFrag; return t ? t.level : -1 } }, { key: "currentLevel", get: function () { var t = this.media; if (t) { var e = this.getAppendedFrag(t.currentTime); if (e) return e.level } return -1 } }, { key: "nextBufferedFrag", get: function () { var t = this.media; if (t) { var e = this.getAppendedFrag(t.currentTime); return this.followingBufferedFrag(e) } return null } }, { key: "forceStartLoad", get: function () { return this._forceStartLoad } }]) && v(A.prototype, E), T && v(A, T), y }(i.default) }, "./src/controller/subtitle-stream-controller.ts":
/*!******************************************************!*\
    !*** ./src/controller/subtitle-stream-controller.ts ***!
    \******************************************************/
/*! exports provided: SubtitleStreamController */function (t, e, r) { r.r(e), r.d(e, "SubtitleStreamController", (function () { return p })); var n = r(/*! ../events */"./src/events.ts"), i = r(/*! ../utils/buffer-helper */"./src/utils/buffer-helper.ts"), a = r(/*! ./fragment-finders */"./src/controller/fragment-finders.ts"), s = r(/*! ../utils/discontinuities */"./src/utils/discontinuities.ts"), o = r(/*! ./level-helper */"./src/controller/level-helper.ts"), l = r(/*! ./fragment-tracker */"./src/controller/fragment-tracker.ts"), u = r(/*! ./base-stream-controller */"./src/controller/base-stream-controller.ts"), c = r(/*! ../types/loader */"./src/types/loader.ts"), d = r(/*! ../types/level */"./src/types/level.ts"); function h(t, e) { for (var r = 0; r < e.length; r++) { var n = e[r]; n.enumerable = n.enumerable || !1, n.configurable = !0, "value" in n && (n.writable = !0), Object.defineProperty(t, n.key, n) } } function f(t, e) { return f = Object.setPrototypeOf || function (t, e) { return t.__proto__ = e, t }, f(t, e) } var p = function (t) { var e, r; function p(e, r) { var n; return (n = t.call(this, e, r, "[subtitle-stream-controller]") || this).levels = [], n.currentTrackId = -1, n.tracksBuffered = [], n.mainDetails = null, n._registerListeners(), n } r = t, (e = p).prototype = Object.create(r.prototype), e.prototype.constructor = e, f(e, r); var g, v, m, y = p.prototype; return y.onHandlerDestroying = function () { this._unregisterListeners(), this.mainDetails = null }, y._registerListeners = function () { var t = this.hls; t.on(n.Events.MEDIA_ATTACHED, this.onMediaAttached, this), t.on(n.Events.MEDIA_DETACHING, this.onMediaDetaching, this), t.on(n.Events.MANIFEST_LOADING, this.onManifestLoading, this), t.on(n.Events.LEVEL_LOADED, this.onLevelLoaded, this), t.on(n.Events.ERROR, this.onError, this), t.on(n.Events.SUBTITLE_TRACKS_UPDATED, this.onSubtitleTracksUpdated, this), t.on(n.Events.SUBTITLE_TRACK_SWITCH, this.onSubtitleTrackSwitch, this), t.on(n.Events.SUBTITLE_TRACK_LOADED, this.onSubtitleTrackLoaded, this), t.on(n.Events.SUBTITLE_FRAG_PROCESSED, this.onSubtitleFragProcessed, this), t.on(n.Events.BUFFER_FLUSHING, this.onBufferFlushing, this) }, y._unregisterListeners = function () { var t = this.hls; t.off(n.Events.MEDIA_ATTACHED, this.onMediaAttached, this), t.off(n.Events.MEDIA_DETACHING, this.onMediaDetaching, this), t.off(n.Events.MANIFEST_LOADING, this.onManifestLoading, this), t.off(n.Events.LEVEL_LOADED, this.onLevelLoaded, this), t.off(n.Events.ERROR, this.onError, this), t.off(n.Events.SUBTITLE_TRACKS_UPDATED, this.onSubtitleTracksUpdated, this), t.off(n.Events.SUBTITLE_TRACK_SWITCH, this.onSubtitleTrackSwitch, this), t.off(n.Events.SUBTITLE_TRACK_LOADED, this.onSubtitleTrackLoaded, this), t.off(n.Events.SUBTITLE_FRAG_PROCESSED, this.onSubtitleFragProcessed, this), t.off(n.Events.BUFFER_FLUSHING, this.onBufferFlushing, this) }, y.startLoad = function () { this.stopLoad(), this.state = u.State.IDLE, this.setInterval(500), this.tick() }, y.onManifestLoading = function () { this.mainDetails = null, this.fragmentTracker.removeAllFragments() }, y.onLevelLoaded = function (t, e) { this.mainDetails = e.details }, y.onSubtitleFragProcessed = function (t, e) { var r = e.frag, n = e.success; if (this.fragPrevious = r, this.state = u.State.IDLE, n) { var i = this.tracksBuffered[this.currentTrackId]; if (i) { for (var a, s = r.start, o = 0; o < i.length; o++)if (s >= i[o].start && s <= i[o].end) { a = i[o]; break } var l = r.start + r.duration; a ? a.end = l : (a = { start: s, end: l }, i.push(a)), this.fragmentTracker.fragBuffered(r) } } }, y.onBufferFlushing = function (t, e) { var r = e.startOffset, n = e.endOffset; if (0 === r && n !== Number.POSITIVE_INFINITY) { var i = this.currentTrackId, a = this.levels; if (!a.length || !a[i] || !a[i].details) return; var s = n - a[i].details.targetduration; if (s <= 0) return; e.endOffsetSubtitles = Math.max(0, s), this.tracksBuffered.forEach((function (t) { for (var e = 0; e < t.length;)if (t[e].end <= s) t.shift(); else { if (!(t[e].start < s)) break; t[e].start = s, e++ } })), this.fragmentTracker.removeFragmentsInRange(r, s, c.PlaylistLevelType.SUBTITLE) } }, y.onError = function (t, e) { var r, n = e.frag; n && n.type === c.PlaylistLevelType.SUBTITLE && (null !== (r = this.fragCurrent) && void 0 !== r && r.loader && this.fragCurrent.loader.abort(), this.state = u.State.IDLE) }, y.onSubtitleTracksUpdated = function (t, e) { var r = this, n = e.subtitleTracks; this.tracksBuffered = [], this.levels = n.map((function (t) { return new d.Level(t) })), this.fragmentTracker.removeAllFragments(), this.fragPrevious = null, this.levels.forEach((function (t) { r.tracksBuffered[t.id] = [] })), this.mediaBuffer = null }, y.onSubtitleTrackSwitch = function (t, e) { if (this.currentTrackId = e.id, this.levels.length && -1 !== this.currentTrackId) { var r = this.levels[this.currentTrackId]; null != r && r.details ? this.mediaBuffer = this.mediaBufferTimeRanges : this.mediaBuffer = null, r && this.setInterval(500) } else this.clearInterval() }, y.onSubtitleTrackLoaded = function (t, e) { var r, n = e.details, i = e.id, l = this.currentTrackId, c = this.levels; if (c.length) { var d = c[l]; if (!(i >= c.length || i !== l) && d) { if (this.mediaBuffer = this.mediaBufferTimeRanges, n.live || null !== (r = d.details) && void 0 !== r && r.live) { var h = this.mainDetails; if (n.deltaUpdateFailed || !h) return; var f = h.fragments[0]; d.details ? 0 === this.alignPlaylists(n, d.details) && f && Object(o.addSliding)(n, f.start) : n.hasProgramDateTime && h.hasProgramDateTime ? Object(s.alignMediaPlaylistByPDT)(n, h) : f && Object(o.addSliding)(n, f.start) } d.details = n, this.levelLastLoaded = i, this.tick(), n.live && !this.fragCurrent && this.media && this.state === u.State.IDLE && (Object(a.findFragmentByPTS)(null, n.fragments, this.media.currentTime, 0) || (this.warn("Subtitle playlist not aligned with playback"), d.details = void 0)) } } }, y._handleFragmentLoadComplete = function (t) { var e = t.frag, r = t.payload, i = e.decryptdata, a = this.hls; if (!this.fragContextChanged(e) && r && r.byteLength > 0 && i && i.key && i.iv && "AES-128" === i.method) { var s = performance.now(); this.decrypter.webCryptoDecrypt(new Uint8Array(r), i.key.buffer, i.iv.buffer).then((function (t) { var r = performance.now(); a.trigger(n.Events.FRAG_DECRYPTED, { frag: e, payload: t, stats: { tstart: s, tdecrypt: r } }) })) } }, y.doTick = function () { if (this.media) { if (this.state === u.State.IDLE) { var t, e = this.currentTrackId, r = this.levels; if (!r.length || !r[e] || !r[e].details) return; var n = r[e].details, s = n.targetduration, o = this.config, c = this.media, d = i.BufferHelper.bufferedInfo(this.mediaBufferTimeRanges, c.currentTime - s, o.maxBufferHole), h = d.end; if (d.len > this.getMaxBufferLength() + s) return; console.assert(n, "Subtitle track details are defined on idle subtitle stream controller tick"); var f, p = n.fragments, g = p.length, v = n.edge, m = this.fragPrevious; if (h < v) { var y = o.maxFragLookUpTolerance; !(f = Object(a.findFragmentByPTS)(m, p, h, y)) && m && m.start < p[0].start && (f = p[0]) } else f = p[g - 1]; null !== (t = f) && void 0 !== t && t.encrypted ? this.loadKey(f, n) : f && this.fragmentTracker.getState(f) === l.FragmentState.NOT_LOADED && this.loadFragment(f, n, h) } } else this.state = u.State.IDLE }, y.loadFragment = function (e, r, n) { this.fragCurrent = e, t.prototype.loadFragment.call(this, e, r, n) }, g = p, (v = [{ key: "mediaBufferTimeRanges", get: function () { return this.tracksBuffered[this.currentTrackId] || [] } }]) && h(g.prototype, v), m && h(g, m), p }(u.default) }, "./src/controller/subtitle-track-controller.ts":
/*!*****************************************************!*\
    !*** ./src/controller/subtitle-track-controller.ts ***!
    \*****************************************************/
/*! exports provided: default */function (t, e, r) { r.r(e); var n = r(/*! ../events */"./src/events.ts"), i = r(/*! ../utils/texttrack-utils */"./src/utils/texttrack-utils.ts"), a = r(/*! ./base-playlist-controller */"./src/controller/base-playlist-controller.ts"), s = r(/*! ../types/loader */"./src/types/loader.ts"); function o(t, e) { for (var r = 0; r < e.length; r++) { var n = e[r]; n.enumerable = n.enumerable || !1, n.configurable = !0, "value" in n && (n.writable = !0), Object.defineProperty(t, n.key, n) } } function l(t, e) { return l = Object.setPrototypeOf || function (t, e) { return t.__proto__ = e, t }, l(t, e) } var u = function (t) { var e, r; function a(e) { var r; return (r = t.call(this, e, "[subtitle-track-controller]") || this).media = null, r.tracks = [], r.groupId = null, r.tracksInGroup = [], r.trackId = -1, r.selectDefaultTrack = !0, r.queuedDefaultTrack = -1, r.trackChangeListener = function () { return r.onTextTracksChanged() }, r.asyncPollTrackChange = function () { return r.pollTrackChange(0) }, r.useTextTrackPolling = !1, r.subtitlePollingInterval = -1, r.subtitleDisplay = !0, r.registerListeners(), r } r = t, (e = a).prototype = Object.create(r.prototype), e.prototype.constructor = e, l(e, r); var u, d, h, f = a.prototype; return f.destroy = function () { this.unregisterListeners(), this.tracks.length = 0, this.tracksInGroup.length = 0, this.trackChangeListener = this.asyncPollTrackChange = null, t.prototype.destroy.call(this) }, f.registerListeners = function () { var t = this.hls; t.on(n.Events.MEDIA_ATTACHED, this.onMediaAttached, this), t.on(n.Events.MEDIA_DETACHING, this.onMediaDetaching, this), t.on(n.Events.MANIFEST_LOADING, this.onManifestLoading, this), t.on(n.Events.MANIFEST_PARSED, this.onManifestParsed, this), t.on(n.Events.LEVEL_LOADING, this.onLevelLoading, this), t.on(n.Events.LEVEL_SWITCHING, this.onLevelSwitching, this), t.on(n.Events.SUBTITLE_TRACK_LOADED, this.onSubtitleTrackLoaded, this), t.on(n.Events.ERROR, this.onError, this) }, f.unregisterListeners = function () { var t = this.hls; t.off(n.Events.MEDIA_ATTACHED, this.onMediaAttached, this), t.off(n.Events.MEDIA_DETACHING, this.onMediaDetaching, this), t.off(n.Events.MANIFEST_LOADING, this.onManifestLoading, this), t.off(n.Events.MANIFEST_PARSED, this.onManifestParsed, this), t.off(n.Events.LEVEL_LOADING, this.onLevelLoading, this), t.off(n.Events.LEVEL_SWITCHING, this.onLevelSwitching, this), t.off(n.Events.SUBTITLE_TRACK_LOADED, this.onSubtitleTrackLoaded, this), t.off(n.Events.ERROR, this.onError, this) }, f.onMediaAttached = function (t, e) { this.media = e.media, this.media && (this.queuedDefaultTrack > -1 && (this.subtitleTrack = this.queuedDefaultTrack, this.queuedDefaultTrack = -1), this.useTextTrackPolling = !(this.media.textTracks && "onchange" in this.media.textTracks), this.useTextTrackPolling ? this.pollTrackChange(500) : this.media.textTracks.addEventListener("change", this.asyncPollTrackChange)) }, f.pollTrackChange = function (t) { self.clearInterval(this.subtitlePollingInterval), this.subtitlePollingInterval = self.setInterval(this.trackChangeListener, t) }, f.onMediaDetaching = function () { this.media && (self.clearInterval(this.subtitlePollingInterval), this.useTextTrackPolling || this.media.textTracks.removeEventListener("change", this.asyncPollTrackChange), this.trackId > -1 && (this.queuedDefaultTrack = this.trackId), c(this.media.textTracks).forEach((function (t) { Object(i.clearCurrentCues)(t) })), this.subtitleTrack = -1, this.media = null) }, f.onManifestLoading = function () { this.tracks = [], this.groupId = null, this.tracksInGroup = [], this.trackId = -1, this.selectDefaultTrack = !0 }, f.onManifestParsed = function (t, e) { this.tracks = e.subtitleTracks }, f.onSubtitleTrackLoaded = function (t, e) { var r = e.id, n = e.details, i = this.trackId, a = this.tracksInGroup[i]; if (a) { var s = a.details; a.details = e.details, this.log("subtitle track " + r + " loaded [" + n.startSN + "-" + n.endSN + "]"), r === this.trackId && (this.retryCount = 0, this.playlistLoaded(r, e, s)) } else this.warn("Invalid subtitle track id " + r) }, f.onLevelLoading = function (t, e) { this.switchLevel(e.level) }, f.onLevelSwitching = function (t, e) { this.switchLevel(e.level) }, f.switchLevel = function (t) { var e = this.hls.levels[t]; if (null != e && e.textGroupIds) { var r = e.textGroupIds[e.urlId]; if (this.groupId !== r) { var i = this.tracksInGroup ? this.tracksInGroup[this.trackId] : void 0, a = this.tracks.filter((function (t) { return !r || t.groupId === r })); this.tracksInGroup = a; var s = this.findTrackId(null == i ? void 0 : i.name) || this.findTrackId(); this.groupId = r; var o = { subtitleTracks: a }; this.log("Updating subtitle tracks, " + a.length + ' track(s) found in "' + r + '" group-id'), this.hls.trigger(n.Events.SUBTITLE_TRACKS_UPDATED, o), -1 !== s && this.setSubtitleTrack(s, i) } } }, f.findTrackId = function (t) { for (var e = this.tracksInGroup, r = 0; r < e.length; r++) { var n = e[r]; if ((!this.selectDefaultTrack || n.default) && (!t || t === n.name)) return n.id } return -1 }, f.onError = function (e, r) { t.prototype.onError.call(this, e, r), !r.fatal && r.context && r.context.type === s.PlaylistContextType.SUBTITLE_TRACK && r.context.id === this.trackId && r.context.groupId === this.groupId && this.retryLoadingOrFail(r) }, f.loadPlaylist = function (t) { var e = this.tracksInGroup[this.trackId]; if (this.shouldLoadTrack(e)) { var r = e.id, i = e.groupId, a = e.url; if (t) try { a = t.addDirectives(a) } catch (t) { this.warn("Could not construct new URL with HLS Delivery Directives: " + t) } this.log("Loading subtitle playlist for id " + r), this.hls.trigger(n.Events.SUBTITLE_TRACK_LOADING, { url: a, id: r, groupId: i, deliveryDirectives: t || null }) } }, f.toggleTrackModes = function (t) { var e = this, r = this.media, n = this.subtitleDisplay, i = this.trackId; if (r) { var a = c(r.textTracks), s = a.filter((function (t) { return t.groupId === e.groupId })); if (-1 === t) [].slice.call(a).forEach((function (t) { t.mode = "disabled" })); else { var o = s[i]; o && (o.mode = "disabled") } var l = s[t]; l && (l.mode = n ? "showing" : "hidden") } }, f.setSubtitleTrack = function (t, e) { var r, i = this.tracksInGroup; if (this.media) { if (this.trackId !== t && this.toggleTrackModes(t), !(this.trackId === t && (-1 === t || null !== (r = i[t]) && void 0 !== r && r.details) || t < -1 || t >= i.length)) { this.clearTimer(); var a = i[t]; if (this.log("Switching to subtitle track " + t), this.trackId = t, a) { var s = a.id, o = a.groupId, l = void 0 === o ? "" : o, u = a.name, c = a.type, d = a.url; this.hls.trigger(n.Events.SUBTITLE_TRACK_SWITCH, { id: s, groupId: l, name: u, type: c, url: d }); var h = this.switchParams(a.url, null == e ? void 0 : e.details); this.loadPlaylist(h) } else this.hls.trigger(n.Events.SUBTITLE_TRACK_SWITCH, { id: t }) } } else this.queuedDefaultTrack = t }, f.onTextTracksChanged = function () { if (this.useTextTrackPolling || self.clearInterval(this.subtitlePollingInterval), this.media && this.hls.config.renderTextTracksNatively) { for (var t = -1, e = c(this.media.textTracks), r = 0; r < e.length; r++)if ("hidden" === e[r].mode) t = r; else if ("showing" === e[r].mode) { t = r; break } this.subtitleTrack !== t && (this.subtitleTrack = t) } }, u = a, (d = [{ key: "subtitleTracks", get: function () { return this.tracksInGroup } }, { key: "subtitleTrack", get: function () { return this.trackId }, set: function (t) { this.selectDefaultTrack = !1; var e = this.tracksInGroup ? this.tracksInGroup[this.trackId] : void 0; this.setSubtitleTrack(t, e) } }]) && o(u.prototype, d), h && o(u, h), a }(a.default); function c(t) { for (var e = [], r = 0; r < t.length; r++) { var n = t[r]; "subtitles" === n.kind && n.label && e.push(t[r]) } return e } e.default = u }, "./src/controller/timeline-controller.ts":
/*!***********************************************!*\
    !*** ./src/controller/timeline-controller.ts ***!
    \***********************************************/
/*! exports provided: TimelineController */function (t, e, r) { r.r(e), r.d(e, "TimelineController", (function () { return h })); var n = r(/*! ./src/polyfills/number */"./src/polyfills/number.ts"), i = r(/*! ../events */"./src/events.ts"), a = r(/*! ../utils/cea-608-parser */"./src/utils/cea-608-parser.ts"), s = r(/*! ../utils/output-filter */"./src/utils/output-filter.ts"), o = r(/*! ../utils/webvtt-parser */"./src/utils/webvtt-parser.ts"), l = r(/*! ../utils/texttrack-utils */"./src/utils/texttrack-utils.ts"), u = r(/*! ../utils/imsc1-ttml-parser */"./src/utils/imsc1-ttml-parser.ts"), c = r(/*! ../types/loader */"./src/types/loader.ts"), d = r(/*! ../utils/logger */"./src/utils/logger.ts"), h = function () { function t(t) { if (this.hls = void 0, this.media = null, this.config = void 0, this.enabled = !0, this.Cues = void 0, this.textTracks = [], this.tracks = [], this.initPTS = [], this.timescale = [], this.unparsedVttFrags = [], this.captionsTracks = {}, this.nonNativeCaptionsTracks = {}, this.cea608Parser1 = void 0, this.cea608Parser2 = void 0, this.lastSn = -1, this.lastPartIndex = -1, this.prevCC = -1, this.vttCCs = { ccOffset: 0, presentationOffset: 0, 0: { start: 0, prevCC: -1, new: !1 } }, this.captionsProperties = void 0, this.hls = t, this.config = t.config, this.Cues = t.config.cueHandler, this.captionsProperties = { textTrack1: { label: this.config.captionsTextTrack1Label, languageCode: this.config.captionsTextTrack1LanguageCode }, textTrack2: { label: this.config.captionsTextTrack2Label, languageCode: this.config.captionsTextTrack2LanguageCode }, textTrack3: { label: this.config.captionsTextTrack3Label, languageCode: this.config.captionsTextTrack3LanguageCode }, textTrack4: { label: this.config.captionsTextTrack4Label, languageCode: this.config.captionsTextTrack4LanguageCode } }, this.config.enableCEA708Captions) { var e = new s.default(this, "textTrack1"), r = new s.default(this, "textTrack2"), n = new s.default(this, "textTrack3"), o = new s.default(this, "textTrack4"); this.cea608Parser1 = new a.default(1, e, r), this.cea608Parser2 = new a.default(3, n, o) } t.on(i.Events.MEDIA_ATTACHING, this.onMediaAttaching, this), t.on(i.Events.MEDIA_DETACHING, this.onMediaDetaching, this), t.on(i.Events.MANIFEST_LOADING, this.onManifestLoading, this), t.on(i.Events.MANIFEST_LOADED, this.onManifestLoaded, this), t.on(i.Events.SUBTITLE_TRACKS_UPDATED, this.onSubtitleTracksUpdated, this), t.on(i.Events.FRAG_LOADING, this.onFragLoading, this), t.on(i.Events.FRAG_LOADED, this.onFragLoaded, this), t.on(i.Events.FRAG_PARSING_USERDATA, this.onFragParsingUserdata, this), t.on(i.Events.FRAG_DECRYPTED, this.onFragDecrypted, this), t.on(i.Events.INIT_PTS_FOUND, this.onInitPtsFound, this), t.on(i.Events.SUBTITLE_TRACKS_CLEARED, this.onSubtitleTracksCleared, this), t.on(i.Events.BUFFER_FLUSHING, this.onBufferFlushing, this) } var e = t.prototype; return e.destroy = function () { var t = this.hls; t.off(i.Events.MEDIA_ATTACHING, this.onMediaAttaching, this), t.off(i.Events.MEDIA_DETACHING, this.onMediaDetaching, this), t.off(i.Events.MANIFEST_LOADING, this.onManifestLoading, this), t.off(i.Events.MANIFEST_LOADED, this.onManifestLoaded, this), t.off(i.Events.SUBTITLE_TRACKS_UPDATED, this.onSubtitleTracksUpdated, this), t.off(i.Events.FRAG_LOADING, this.onFragLoading, this), t.off(i.Events.FRAG_LOADED, this.onFragLoaded, this), t.off(i.Events.FRAG_PARSING_USERDATA, this.onFragParsingUserdata, this), t.off(i.Events.FRAG_DECRYPTED, this.onFragDecrypted, this), t.off(i.Events.INIT_PTS_FOUND, this.onInitPtsFound, this), t.off(i.Events.SUBTITLE_TRACKS_CLEARED, this.onSubtitleTracksCleared, this), t.off(i.Events.BUFFER_FLUSHING, this.onBufferFlushing, this), this.hls = this.config = this.cea608Parser1 = this.cea608Parser2 = null }, e.addCues = function (t, e, r, n, a) { for (var s, o, l, u, c = !1, d = a.length; d--;) { var h = a[d], f = (s = h[0], o = h[1], l = e, u = r, Math.min(o, u) - Math.max(s, l)); if (f >= 0 && (h[0] = Math.min(h[0], e), h[1] = Math.max(h[1], r), c = !0, f / (r - e) > .5)) return } if (c || a.push([e, r]), this.config.renderTextTracksNatively) { var p = this.captionsTracks[t]; this.Cues.newCue(p, e, r, n) } else { var g = this.Cues.newCue(null, e, r, n); this.hls.trigger(i.Events.CUES_PARSED, { type: "captions", cues: g, track: t }) } }, e.onInitPtsFound = function (t, e) { var r = this, n = e.frag, a = e.id, s = e.initPTS, o = e.timescale, l = this.unparsedVttFrags; "main" === a && (this.initPTS[n.cc] = s, this.timescale[n.cc] = o), l.length && (this.unparsedVttFrags = [], l.forEach((function (t) { r.onFragLoaded(i.Events.FRAG_LOADED, t) }))) }, e.getExistingTrack = function (t) { var e = this.media; if (e) for (var r = 0; r < e.textTracks.length; r++) { var n = e.textTracks[r]; if (n[t]) return n } return null }, e.createCaptionsTrack = function (t) { this.config.renderTextTracksNatively ? this.createNativeTrack(t) : this.createNonNativeTrack(t) }, e.createNativeTrack = function (t) { if (!this.captionsTracks[t]) { var e = this.captionsProperties, r = this.captionsTracks, n = this.media, i = e[t], a = i.label, s = i.languageCode, o = this.getExistingTrack(t); if (o) r[t] = o, Object(l.clearCurrentCues)(r[t]), Object(l.sendAddTrackEvent)(r[t], n); else { var u = this.createTextTrack("captions", a, s); u && (u[t] = !0, r[t] = u) } } }, e.createNonNativeTrack = function (t) { if (!this.nonNativeCaptionsTracks[t]) { var e = this.captionsProperties[t]; if (e) { var r = { _id: t, label: e.label, kind: "captions", default: !!e.media && !!e.media.default, closedCaptions: e.media }; this.nonNativeCaptionsTracks[t] = r, this.hls.trigger(i.Events.NON_NATIVE_TEXT_TRACKS_FOUND, { tracks: [r] }) } } }, e.createTextTrack = function (t, e, r) { var n = this.media; if (n) return n.addTextTrack(t, e, r) }, e.onMediaAttaching = function (t, e) { this.media = e.media, this._cleanTracks() }, e.onMediaDetaching = function () { var t = this.captionsTracks; Object.keys(t).forEach((function (e) { Object(l.clearCurrentCues)(t[e]), delete t[e] })), this.nonNativeCaptionsTracks = {} }, e.onManifestLoading = function () { this.lastSn = -1, this.lastPartIndex = -1, this.prevCC = -1, this.vttCCs = { ccOffset: 0, presentationOffset: 0, 0: { start: 0, prevCC: -1, new: !1 } }, this._cleanTracks(), this.tracks = [], this.captionsTracks = {}, this.nonNativeCaptionsTracks = {}, this.textTracks = [], this.unparsedVttFrags = this.unparsedVttFrags || [], this.initPTS = [], this.timescale = [], this.cea608Parser1 && this.cea608Parser2 && (this.cea608Parser1.reset(), this.cea608Parser2.reset()) }, e._cleanTracks = function () { var t = this.media; if (t) { var e = t.textTracks; if (e) for (var r = 0; r < e.length; r++)Object(l.clearCurrentCues)(e[r]) } }, e.onSubtitleTracksUpdated = function (t, e) { var r = this; this.textTracks = []; var n = e.subtitleTracks || [], a = n.some((function (t) { return t.textCodec === u.IMSC1_CODEC })); if (this.config.enableWebVTT || a && this.config.enableIMSC1) { var s = this.tracks && n && this.tracks.length === n.length; if (this.tracks = n || [], this.config.renderTextTracksNatively) { var o = this.media ? this.media.textTracks : []; this.tracks.forEach((function (t, e) { var n; if (e < o.length) { for (var i = null, a = 0; a < o.length; a++)if (f(o[a], t)) { i = o[a]; break } i && (n = i) } n ? Object(l.clearCurrentCues)(n) : (n = r.createTextTrack("subtitles", t.name, t.lang)) && (n.mode = "disabled"), n && (n.groupId = t.groupId, r.textTracks.push(n)) })) } else if (!s && this.tracks && this.tracks.length) { var c = this.tracks.map((function (t) { return { label: t.name, kind: t.type.toLowerCase(), default: t.default, subtitleTrack: t } })); this.hls.trigger(i.Events.NON_NATIVE_TEXT_TRACKS_FOUND, { tracks: c }) } } }, e.onManifestLoaded = function (t, e) { var r = this; this.config.enableCEA708Captions && e.captions && e.captions.forEach((function (t) { var e = /(?:CC|SERVICE)([1-4])/.exec(t.instreamId); if (e) { var n = "textTrack" + e[1], i = r.captionsProperties[n]; i && (i.label = t.name, t.lang && (i.languageCode = t.lang), i.media = t) } })) }, e.onFragLoading = function (t, e) { var r = this.cea608Parser1, n = this.cea608Parser2, i = this.lastSn, a = this.lastPartIndex; if (this.enabled && r && n && e.frag.type === c.PlaylistLevelType.MAIN) { var s, o, l = e.frag.sn, u = null != (s = null == e || null === (o = e.part) || void 0 === o ? void 0 : o.index) ? s : -1; l === i + 1 || l === i && u === a + 1 || (r.reset(), n.reset()), this.lastSn = l, this.lastPartIndex = u } }, e.onFragLoaded = function (t, e) { var r = e.frag, a = e.payload, s = this.initPTS, o = this.unparsedVttFrags; if (r.type === c.PlaylistLevelType.SUBTITLE) if (a.byteLength) { if (!Object(n.isFiniteNumber)(s[r.cc])) return o.push(e), void (s.length && this.hls.trigger(i.Events.SUBTITLE_FRAG_PROCESSED, { success: !1, frag: r, error: new Error("Missing initial subtitle PTS") })); var l = r.decryptdata, d = "stats" in e; if (null == l || null == l.key || "AES-128" !== l.method || d) { var h = this.tracks[r.level], f = this.vttCCs; f[r.cc] || (f[r.cc] = { start: r.start, prevCC: this.prevCC, new: !0 }, this.prevCC = r.cc), h && h.textCodec === u.IMSC1_CODEC ? this._parseIMSC1(r, a) : this._parseVTTs(r, a, f) } } else this.hls.trigger(i.Events.SUBTITLE_FRAG_PROCESSED, { success: !1, frag: r, error: new Error("Empty subtitle payload") }) }, e._parseIMSC1 = function (t, e) { var r = this, n = this.hls; Object(u.parseIMSC1)(e, this.initPTS[t.cc], this.timescale[t.cc], (function (e) { r._appendCues(e, t.level), n.trigger(i.Events.SUBTITLE_FRAG_PROCESSED, { success: !0, frag: t }) }), (function (e) { d.logger.log("Failed to parse IMSC1: " + e), n.trigger(i.Events.SUBTITLE_FRAG_PROCESSED, { success: !1, frag: t, error: e }) })) }, e._parseVTTs = function (t, e, r) { var n = this, a = this.hls; Object(o.parseWebVTT)(e, this.initPTS[t.cc], this.timescale[t.cc], r, t.cc, t.start, (function (e) { n._appendCues(e, t.level), a.trigger(i.Events.SUBTITLE_FRAG_PROCESSED, { success: !0, frag: t }) }), (function (r) { n._fallbackToIMSC1(t, e), d.logger.log("Failed to parse VTT cue: " + r), a.trigger(i.Events.SUBTITLE_FRAG_PROCESSED, { success: !1, frag: t, error: r }) })) }, e._fallbackToIMSC1 = function (t, e) { var r = this, n = this.tracks[t.level]; n.textCodec || Object(u.parseIMSC1)(e, this.initPTS[t.cc], this.timescale[t.cc], (function () { n.textCodec = u.IMSC1_CODEC, r._parseIMSC1(t, e) }), (function () { n.textCodec = "wvtt" })) }, e._appendCues = function (t, e) { var r = this.hls; if (this.config.renderTextTracksNatively) { var n = this.textTracks[e]; if ("disabled" === n.mode) return; t.forEach((function (t) { return Object(l.addCueToTrack)(n, t) })) } else { var a = this.tracks[e].default ? "default" : "subtitles" + e; r.trigger(i.Events.CUES_PARSED, { type: "subtitles", cues: t, track: a }) } }, e.onFragDecrypted = function (t, e) { var r = e.frag; if (r.type === c.PlaylistLevelType.SUBTITLE) { if (!Object(n.isFiniteNumber)(this.initPTS[r.cc])) return void this.unparsedVttFrags.push(e); this.onFragLoaded(i.Events.FRAG_LOADED, e) } }, e.onSubtitleTracksCleared = function () { this.tracks = [], this.captionsTracks = {} }, e.onFragParsingUserdata = function (t, e) { var r = this.cea608Parser1, n = this.cea608Parser2; if (this.enabled && r && n) for (var i = 0; i < e.samples.length; i++) { var a = e.samples[i].bytes; if (a) { var s = this.extractCea608Data(a); r.addData(e.samples[i].pts, s[0]), n.addData(e.samples[i].pts, s[1]) } } }, e.onBufferFlushing = function (t, e) { var r = e.startOffset, n = e.endOffset, i = e.endOffsetSubtitles, a = e.type, s = this.media; if (s && !(s.currentTime < n)) { if (!a || "video" === a) { var o = this.captionsTracks; Object.keys(o).forEach((function (t) { return Object(l.removeCuesInRange)(o[t], r, n) })) } if (this.config.renderTextTracksNatively && 0 === r && void 0 !== i) { var u = this.textTracks; Object.keys(u).forEach((function (t) { return Object(l.removeCuesInRange)(u[t], r, i) })) } } }, e.extractCea608Data = function (t) { for (var e = 31 & t[0], r = 2, n = [[], []], i = 0; i < e; i++) { var a = t[r++], s = 127 & t[r++], o = 127 & t[r++], l = 3 & a; 0 === s && 0 === o || 0 != (4 & a) && (0 !== l && 1 !== l || (n[l].push(s), n[l].push(o))) } return n }, t }(); function f(t, e) { return t && t.label === e.name && !(t.textTrack1 || t.textTrack2) } }, "./src/crypt/aes-crypto.ts":
/*!*********************************!*\
    !*** ./src/crypt/aes-crypto.ts ***!
    \*********************************/
/*! exports provided: default */function (t, e, r) { r.r(e), r.d(e, "default", (function () { return n })); var n = function () { function t(t, e) { this.subtle = void 0, this.aesIV = void 0, this.subtle = t, this.aesIV = e } return t.prototype.decrypt = function (t, e) { return this.subtle.decrypt({ name: "AES-CBC", iv: this.aesIV }, e, t) }, t }() }, "./src/crypt/aes-decryptor.ts":
/*!************************************!*\
    !*** ./src/crypt/aes-decryptor.ts ***!
    \************************************/
/*! exports provided: removePadding, default */function (t, e, r) { r.r(e), r.d(e, "removePadding", (function () { return i })), r.d(e, "default", (function () { return a })); var n = r(/*! ../utils/typed-array */"./src/utils/typed-array.ts"); function i(t) { var e = t.byteLength, r = e && new DataView(t.buffer).getUint8(e - 1); return r ? Object(n.sliceUint8)(t, 0, e - r) : t } var a = function () { function t() { this.rcon = [0, 1, 2, 4, 8, 16, 32, 64, 128, 27, 54], this.subMix = [new Uint32Array(256), new Uint32Array(256), new Uint32Array(256), new Uint32Array(256)], this.invSubMix = [new Uint32Array(256), new Uint32Array(256), new Uint32Array(256), new Uint32Array(256)], this.sBox = new Uint32Array(256), this.invSBox = new Uint32Array(256), this.key = new Uint32Array(0), this.ksRows = 0, this.keySize = 0, this.keySchedule = void 0, this.invKeySchedule = void 0, this.initTable() } var e = t.prototype; return e.uint8ArrayToUint32Array_ = function (t) { for (var e = new DataView(t), r = new Uint32Array(4), n = 0; n < 4; n++)r[n] = e.getUint32(4 * n); return r }, e.initTable = function () { var t = this.sBox, e = this.invSBox, r = this.subMix, n = r[0], i = r[1], a = r[2], s = r[3], o = this.invSubMix, l = o[0], u = o[1], c = o[2], d = o[3], h = new Uint32Array(256), f = 0, p = 0, g = 0; for (g = 0; g < 256; g++)h[g] = g < 128 ? g << 1 : g << 1 ^ 283; for (g = 0; g < 256; g++) { var v = p ^ p << 1 ^ p << 2 ^ p << 3 ^ p << 4; v = v >>> 8 ^ 255 & v ^ 99, t[f] = v, e[v] = f; var m = h[f], y = h[m], A = h[y], E = 257 * h[v] ^ 16843008 * v; n[f] = E << 24 | E >>> 8, i[f] = E << 16 | E >>> 16, a[f] = E << 8 | E >>> 24, s[f] = E, E = 16843009 * A ^ 65537 * y ^ 257 * m ^ 16843008 * f, l[v] = E << 24 | E >>> 8, u[v] = E << 16 | E >>> 16, c[v] = E << 8 | E >>> 24, d[v] = E, f ? (f = m ^ h[h[h[A ^ m]]], p ^= h[h[p]]) : f = p = 1 } }, e.expandKey = function (t) { for (var e = this.uint8ArrayToUint32Array_(t), r = !0, n = 0; n < e.length && r;)r = e[n] === this.key[n], n++; if (!r) { this.key = e; var i = this.keySize = e.length; if (4 !== i && 6 !== i && 8 !== i) throw new Error("Invalid aes key size=" + i); var a, s, o, l, u = this.ksRows = 4 * (i + 6 + 1), c = this.keySchedule = new Uint32Array(u), d = this.invKeySchedule = new Uint32Array(u), h = this.sBox, f = this.rcon, p = this.invSubMix, g = p[0], v = p[1], m = p[2], y = p[3]; for (a = 0; a < u; a++)a < i ? o = c[a] = e[a] : (l = o, a % i == 0 ? (l = h[(l = l << 8 | l >>> 24) >>> 24] << 24 | h[l >>> 16 & 255] << 16 | h[l >>> 8 & 255] << 8 | h[255 & l], l ^= f[a / i | 0] << 24) : i > 6 && a % i == 4 && (l = h[l >>> 24] << 24 | h[l >>> 16 & 255] << 16 | h[l >>> 8 & 255] << 8 | h[255 & l]), c[a] = o = (c[a - i] ^ l) >>> 0); for (s = 0; s < u; s++)a = u - s, l = 3 & s ? c[a] : c[a - 4], d[s] = s < 4 || a <= 4 ? l : g[h[l >>> 24]] ^ v[h[l >>> 16 & 255]] ^ m[h[l >>> 8 & 255]] ^ y[h[255 & l]], d[s] = d[s] >>> 0 } }, e.networkToHostOrderSwap = function (t) { return t << 24 | (65280 & t) << 8 | (16711680 & t) >> 8 | t >>> 24 }, e.decrypt = function (t, e, r) { for (var n, i, a, s, o, l, u, c, d, h, f, p, g, v, m = this.keySize + 6, y = this.invKeySchedule, A = this.invSBox, E = this.invSubMix, T = E[0], b = E[1], k = E[2], S = E[3], _ = this.uint8ArrayToUint32Array_(r), C = _[0], L = _[1], R = _[2], D = _[3], I = new Int32Array(t), O = new Int32Array(I.length), w = this.networkToHostOrderSwap; e < I.length;) { for (d = w(I[e]), h = w(I[e + 1]), f = w(I[e + 2]), p = w(I[e + 3]), o = d ^ y[0], l = p ^ y[1], u = f ^ y[2], c = h ^ y[3], g = 4, v = 1; v < m; v++)n = T[o >>> 24] ^ b[l >> 16 & 255] ^ k[u >> 8 & 255] ^ S[255 & c] ^ y[g], i = T[l >>> 24] ^ b[u >> 16 & 255] ^ k[c >> 8 & 255] ^ S[255 & o] ^ y[g + 1], a = T[u >>> 24] ^ b[c >> 16 & 255] ^ k[o >> 8 & 255] ^ S[255 & l] ^ y[g + 2], s = T[c >>> 24] ^ b[o >> 16 & 255] ^ k[l >> 8 & 255] ^ S[255 & u] ^ y[g + 3], o = n, l = i, u = a, c = s, g += 4; n = A[o >>> 24] << 24 ^ A[l >> 16 & 255] << 16 ^ A[u >> 8 & 255] << 8 ^ A[255 & c] ^ y[g], i = A[l >>> 24] << 24 ^ A[u >> 16 & 255] << 16 ^ A[c >> 8 & 255] << 8 ^ A[255 & o] ^ y[g + 1], a = A[u >>> 24] << 24 ^ A[c >> 16 & 255] << 16 ^ A[o >> 8 & 255] << 8 ^ A[255 & l] ^ y[g + 2], s = A[c >>> 24] << 24 ^ A[o >> 16 & 255] << 16 ^ A[l >> 8 & 255] << 8 ^ A[255 & u] ^ y[g + 3], O[e] = w(n ^ C), O[e + 1] = w(s ^ L), O[e + 2] = w(a ^ R), O[e + 3] = w(i ^ D), C = d, L = h, R = f, D = p, e += 4 } return O.buffer }, t }() }, "./src/crypt/decrypter.ts":
/*!********************************!*\
    !*** ./src/crypt/decrypter.ts ***!
    \********************************/
/*! exports provided: default */function (t, e, r) { r.r(e), r.d(e, "default", (function () { return u })); var n = r(/*! ./aes-crypto */"./src/crypt/aes-crypto.ts"), i = r(/*! ./fast-aes-key */"./src/crypt/fast-aes-key.ts"), a = r(/*! ./aes-decryptor */"./src/crypt/aes-decryptor.ts"), s = r(/*! ../utils/logger */"./src/utils/logger.ts"), o = r(/*! ../utils/mp4-tools */"./src/utils/mp4-tools.ts"), l = r(/*! ../utils/typed-array */"./src/utils/typed-array.ts"), u = function () { function t(t, e, r) { var n = (void 0 === r ? {} : r).removePKCS7Padding, i = void 0 === n || n; if (this.logEnabled = !0, this.observer = void 0, this.config = void 0, this.removePKCS7Padding = void 0, this.subtle = null, this.softwareDecrypter = null, this.key = null, this.fastAesKey = null, this.remainderData = null, this.currentIV = null, this.currentResult = null, this.observer = t, this.config = e, this.removePKCS7Padding = i, i) try { var a = self.crypto; a && (this.subtle = a.subtle || a.webkitSubtle) } catch (t) { } null === this.subtle && (this.config.enableSoftwareAES = !0) } var e = t.prototype; return e.destroy = function () { this.observer = null }, e.isSync = function () { return this.config.enableSoftwareAES }, e.flush = function () { var t = this.currentResult; if (t) { var e = new Uint8Array(t); return this.reset(), this.removePKCS7Padding ? Object(a.removePadding)(e) : e } this.reset() }, e.reset = function () { this.currentResult = null, this.currentIV = null, this.remainderData = null, this.softwareDecrypter && (this.softwareDecrypter = null) }, e.decrypt = function (t, e, r, n) { if (this.config.enableSoftwareAES) { this.softwareDecrypt(new Uint8Array(t), e, r); var i = this.flush(); i && n(i.buffer) } else this.webCryptoDecrypt(new Uint8Array(t), e, r).then(n) }, e.softwareDecrypt = function (t, e, r) { var n = this.currentIV, i = this.currentResult, s = this.remainderData; this.logOnce("JS AES decrypt"), s && (t = Object(o.appendUint8Array)(s, t), this.remainderData = null); var u = this.getValidChunk(t); if (!u.length) return null; n && (r = n); var c = this.softwareDecrypter; c || (c = this.softwareDecrypter = new a.default), c.expandKey(e); var d = i; return this.currentResult = c.decrypt(u.buffer, 0, r), this.currentIV = Object(l.sliceUint8)(u, -16).buffer, d || null }, e.webCryptoDecrypt = function (t, e, r) { var a = this, s = this.subtle; return this.key === e && this.fastAesKey || (this.key = e, this.fastAesKey = new i.default(s, e)), this.fastAesKey.expandKey().then((function (e) { return s ? new n.default(s, r).decrypt(t.buffer, e) : Promise.reject(new Error("web crypto not initialized")) })).catch((function (n) { return a.onWebCryptoError(n, t, e, r) })) }, e.onWebCryptoError = function (t, e, r, n) { return s.logger.warn("[decrypter.ts]: WebCrypto Error, disable WebCrypto API:", t), this.config.enableSoftwareAES = !0, this.logEnabled = !0, this.softwareDecrypt(e, r, n) }, e.getValidChunk = function (t) { var e = t, r = t.length - t.length % 16; return r !== t.length && (e = Object(l.sliceUint8)(t, 0, r), this.remainderData = Object(l.sliceUint8)(t, r)), e }, e.logOnce = function (t) { this.logEnabled && (s.logger.log("[decrypter.ts]: " + t), this.logEnabled = !1) }, t }() }, "./src/crypt/fast-aes-key.ts":
/*!***********************************!*\
    !*** ./src/crypt/fast-aes-key.ts ***!
    \***********************************/
/*! exports provided: default */function (t, e, r) { r.r(e), r.d(e, "default", (function () { return n })); var n = function () { function t(t, e) { this.subtle = void 0, this.key = void 0, this.subtle = t, this.key = e } return t.prototype.expandKey = function () { return this.subtle.importKey("raw", this.key, { name: "AES-CBC" }, !1, ["encrypt", "decrypt"]) }, t }() }, "./src/demux/aacdemuxer.ts":
/*!*********************************!*\
    !*** ./src/demux/aacdemuxer.ts ***!
    \*********************************/
/*! exports provided: default */function (t, e, r) { r.r(e); var n = r(/*! ./base-audio-demuxer */"./src/demux/base-audio-demuxer.ts"), i = r(/*! ./adts */"./src/demux/adts.ts"), a = r(/*! ../utils/logger */"./src/utils/logger.ts"), s = r(/*! ../demux/id3 */"./src/demux/id3.ts"); function o(t, e) { return o = Object.setPrototypeOf || function (t, e) { return t.__proto__ = e, t }, o(t, e) } var l = function (t) { var e, r; function n(e, r) { var n; return (n = t.call(this) || this).observer = void 0, n.config = void 0, n.observer = e, n.config = r, n } r = t, (e = n).prototype = Object.create(r.prototype), e.prototype.constructor = e, o(e, r); var l = n.prototype; return l.resetInitSegment = function (e, r, n) { t.prototype.resetInitSegment.call(this, e, r, n), this._audioTrack = { container: "audio/adts", type: "audio", id: 2, pid: -1, sequenceNumber: 0, isAAC: !0, samples: [], manifestCodec: e, duration: n, inputTimeScale: 9e4, dropped: 0 } }, n.probe = function (t) { if (!t) return !1; for (var e = (s.getID3Data(t, 0) || []).length, r = t.length; e < r; e++)if (i.probe(t, e)) return a.logger.log("ADTS sync word found !"), !0; return !1 }, l.canParse = function (t, e) { return i.canParse(t, e) }, l.appendFrame = function (t, e, r) { i.initTrackConfig(t, this.observer, e, r, t.manifestCodec); var n = i.appendFrame(t, e, r, this.initPTS, this.frameIndex); if (n && 0 === n.missing) return n }, n }(n.default); l.minProbeByteLength = 9, e.default = l }, "./src/demux/adts.ts":
/*!***************************!*\
    !*** ./src/demux/adts.ts ***!
    \***************************/
/*! exports provided: getAudioConfig, isHeaderPattern, getHeaderLength, getFullFrameLength, canGetFrameLength, isHeader, canParse, probe, initTrackConfig, getFrameDuration, parseFrameHeader, appendFrame */function (t, e, r) { r.r(e), r.d(e, "getAudioConfig", (function () { return s })), r.d(e, "isHeaderPattern", (function () { return o })), r.d(e, "getHeaderLength", (function () { return l })), r.d(e, "getFullFrameLength", (function () { return u })), r.d(e, "canGetFrameLength", (function () { return c })), r.d(e, "isHeader", (function () { return d })), r.d(e, "canParse", (function () { return h })), r.d(e, "probe", (function () { return f })), r.d(e, "initTrackConfig", (function () { return p })), r.d(e, "getFrameDuration", (function () { return g })), r.d(e, "parseFrameHeader", (function () { return v })), r.d(e, "appendFrame", (function () { return m })); var n = r(/*! ../utils/logger */"./src/utils/logger.ts"), i = r(/*! ../errors */"./src/errors.ts"), a = r(/*! ../events */"./src/events.ts"); function s(t, e, r, s) { var o, l, u, c, d = navigator.userAgent.toLowerCase(), h = s, f = [96e3, 88200, 64e3, 48e3, 44100, 32e3, 24e3, 22050, 16e3, 12e3, 11025, 8e3, 7350]; o = 1 + ((192 & e[r + 2]) >>> 6); var p = (60 & e[r + 2]) >>> 2; if (!(p > f.length - 1)) return u = (1 & e[r + 2]) << 2, u |= (192 & e[r + 3]) >>> 6, n.logger.log("manifest codec:" + s + ", ADTS type:" + o + ", samplingIndex:" + p), /firefox/i.test(d) ? p >= 6 ? (o = 5, c = new Array(4), l = p - 3) : (o = 2, c = new Array(2), l = p) : -1 !== d.indexOf("android") ? (o = 2, c = new Array(2), l = p) : (o = 5, c = new Array(4), s && (-1 !== s.indexOf("mp4a.40.29") || -1 !== s.indexOf("mp4a.40.5")) || !s && p >= 6 ? l = p - 3 : ((s && -1 !== s.indexOf("mp4a.40.2") && (p >= 6 && 1 === u || /vivaldi/i.test(d)) || !s && 1 === u) && (o = 2, c = new Array(2)), l = p)), c[0] = o << 3, c[0] |= (14 & p) >> 1, c[1] |= (1 & p) << 7, c[1] |= u << 3, 5 === o && (c[1] |= (14 & l) >> 1, c[2] = (1 & l) << 7, c[2] |= 8, c[3] = 0), { config: c, samplerate: f[p], channelCount: u, codec: "mp4a.40." + o, manifestCodec: h }; t.trigger(a.Events.ERROR, { type: i.ErrorTypes.MEDIA_ERROR, details: i.ErrorDetails.FRAG_PARSING_ERROR, fatal: !0, reason: "invalid ADTS sampling index:" + p }) } function o(t, e) { return 255 === t[e] && 240 == (246 & t[e + 1]) } function l(t, e) { return 1 & t[e + 1] ? 7 : 9 } function u(t, e) { return (3 & t[e + 3]) << 11 | t[e + 4] << 3 | (224 & t[e + 5]) >>> 5 } function c(t, e) { return e + 5 < t.length } function d(t, e) { return e + 1 < t.length && o(t, e) } function h(t, e) { return c(t, e) && o(t, e) && u(t, e) <= t.length - e } function f(t, e) { if (d(t, e)) { var r = l(t, e); if (e + r >= t.length) return !1; var n = u(t, e); if (n <= r) return !1; var i = e + n; return i === t.length || d(t, i) } return !1 } function p(t, e, r, i, a) { if (!t.samplerate) { var o = s(e, r, i, a); if (!o) return; t.config = o.config, t.samplerate = o.samplerate, t.channelCount = o.channelCount, t.codec = o.codec, t.manifestCodec = o.manifestCodec, n.logger.log("parsed codec:" + t.codec + ", rate:" + o.samplerate + ", channels:" + o.channelCount) } } function g(t) { return 9216e4 / t } function v(t, e, r, n, i) { var a = l(t, e), s = u(t, e); if ((s -= a) > 0) return { headerLength: a, frameLength: s, stamp: r + n * i } } function m(t, e, r, n, i) { var a = v(e, r, n, i, g(t.samplerate)); if (a) { var s, o = a.frameLength, l = a.headerLength, u = a.stamp, c = l + o, d = Math.max(0, r + c - e.length); d ? (s = new Uint8Array(c - l)).set(e.subarray(r + l, e.length), 0) : s = e.subarray(r + l, r + c); var h = { unit: s, pts: u }; return d || t.samples.push(h), { sample: h, length: c, missing: d } } } }, "./src/demux/base-audio-demuxer.ts":
/*!*****************************************!*\
    !*** ./src/demux/base-audio-demuxer.ts ***!
    \*****************************************/
/*! exports provided: initPTSFn, default */function (t, e, r) { r.r(e), r.d(e, "initPTSFn", (function () { return u })); var n = r(/*! ./src/polyfills/number */"./src/polyfills/number.ts"), i = r(/*! ../demux/id3 */"./src/demux/id3.ts"), a = r(/*! ./dummy-demuxed-track */"./src/demux/dummy-demuxed-track.ts"), s = r(/*! ../utils/mp4-tools */"./src/utils/mp4-tools.ts"), o = r(/*! ../utils/typed-array */"./src/utils/typed-array.ts"), l = function () { function t() { this._audioTrack = void 0, this._id3Track = void 0, this.frameIndex = 0, this.cachedData = null, this.initPTS = null } var e = t.prototype; return e.resetInitSegment = function (t, e, r) { this._id3Track = { type: "id3", id: 3, pid: -1, inputTimeScale: 9e4, sequenceNumber: 0, samples: [], dropped: 0 } }, e.resetTimeStamp = function () { }, e.resetContiguity = function () { }, e.canParse = function (t, e) { return !1 }, e.appendFrame = function (t, e, r) { }, e.demux = function (t, e) { this.cachedData && (t = Object(s.appendUint8Array)(this.cachedData, t), this.cachedData = null); var r, n, l = i.getID3Data(t, 0), c = l ? l.length : 0, d = this._audioTrack, h = this._id3Track, f = l ? i.getTimeStamp(l) : void 0, p = t.length; for (0 !== this.frameIndex && null !== this.initPTS || (this.initPTS = u(f, e)), l && l.length > 0 && h.samples.push({ pts: this.initPTS, dts: this.initPTS, data: l }), n = this.initPTS; c < p;) { if (this.canParse(t, c)) { var g = this.appendFrame(d, t, c); g ? (this.frameIndex++, n = g.sample.pts, r = c += g.length) : c = p } else i.canParse(t, c) ? (l = i.getID3Data(t, c), h.samples.push({ pts: n, dts: n, data: l }), r = c += l.length) : c++; if (c === p && r !== p) { var v = Object(o.sliceUint8)(t, r); this.cachedData ? this.cachedData = Object(s.appendUint8Array)(this.cachedData, v) : this.cachedData = v } } return { audioTrack: d, avcTrack: Object(a.dummyTrack)(), id3Track: h, textTrack: Object(a.dummyTrack)() } }, e.demuxSampleAes = function (t, e, r) { return Promise.reject(new Error("[" + this + "] This demuxer does not support Sample-AES decryption")) }, e.flush = function (t) { var e = this.cachedData; return e && (this.cachedData = null, this.demux(e, 0)), this.frameIndex = 0, { audioTrack: this._audioTrack, avcTrack: Object(a.dummyTrack)(), id3Track: this._id3Track, textTrack: Object(a.dummyTrack)() } }, e.destroy = function () { }, t }(), u = function (t, e) { return Object(n.isFiniteNumber)(t) ? 90 * t : 9e4 * e }; e.default = l }, "./src/demux/chunk-cache.ts":
/*!**********************************!*\
    !*** ./src/demux/chunk-cache.ts ***!
    \**********************************/
/*! exports provided: default */function (t, e, r) { r.r(e), r.d(e, "default", (function () { return n })); var n = function () { function t() { this.chunks = [], this.dataLength = 0 } var e = t.prototype; return e.push = function (t) { this.chunks.push(t), this.dataLength += t.length }, e.flush = function () { var t, e = this.chunks, r = this.dataLength; return e.length ? (t = 1 === e.length ? e[0] : function (t, e) { for (var r = new Uint8Array(e), n = 0, i = 0; i < t.length; i++) { var a = t[i]; r.set(a, n), n += a.length } return r }(e, r), this.reset(), t) : new Uint8Array(0) }, e.reset = function () { this.chunks.length = 0, this.dataLength = 0 }, t }() }, "./src/demux/dummy-demuxed-track.ts":
/*!******************************************!*\
    !*** ./src/demux/dummy-demuxed-track.ts ***!
    \******************************************/
/*! exports provided: dummyTrack */function (t, e, r) { function n() { return { type: "", id: -1, pid: -1, inputTimeScale: 9e4, sequenceNumber: -1, samples: [], dropped: 0 } } r.r(e), r.d(e, "dummyTrack", (function () { return n })) }, "./src/demux/exp-golomb.ts":
/*!*********************************!*\
    !*** ./src/demux/exp-golomb.ts ***!
    \*********************************/
/*! exports provided: default */function (t, e, r) { r.r(e); var n = r(/*! ../utils/logger */"./src/utils/logger.ts"), i = function () { function t(t) { this.data = void 0, this.bytesAvailable = void 0, this.word = void 0, this.bitsAvailable = void 0, this.data = t, this.bytesAvailable = t.byteLength, this.word = 0, this.bitsAvailable = 0 } var e = t.prototype; return e.loadWord = function () { var t = this.data, e = this.bytesAvailable, r = t.byteLength - e, n = new Uint8Array(4), i = Math.min(4, e); if (0 === i) throw new Error("no bytes available"); n.set(t.subarray(r, r + i)), this.word = new DataView(n.buffer).getUint32(0), this.bitsAvailable = 8 * i, this.bytesAvailable -= i }, e.skipBits = function (t) { var e; this.bitsAvailable > t ? (this.word <<= t, this.bitsAvailable -= t) : (t -= this.bitsAvailable, t -= (e = t >> 3) >> 3, this.bytesAvailable -= e, this.loadWord(), this.word <<= t, this.bitsAvailable -= t) }, e.readBits = function (t) { var e = Math.min(this.bitsAvailable, t), r = this.word >>> 32 - e; return t > 32 && n.logger.error("Cannot read more than 32 bits at a time"), this.bitsAvailable -= e, this.bitsAvailable > 0 ? this.word <<= e : this.bytesAvailable > 0 && this.loadWord(), (e = t - e) > 0 && this.bitsAvailable ? r << e | this.readBits(e) : r }, e.skipLZ = function () { var t; for (t = 0; t < this.bitsAvailable; ++t)if (0 != (this.word & 2147483648 >>> t)) return this.word <<= t, this.bitsAvailable -= t, t; return this.loadWord(), t + this.skipLZ() }, e.skipUEG = function () { this.skipBits(1 + this.skipLZ()) }, e.skipEG = function () { this.skipBits(1 + this.skipLZ()) }, e.readUEG = function () { var t = this.skipLZ(); return this.readBits(t + 1) - 1 }, e.readEG = function () { var t = this.readUEG(); return 1 & t ? 1 + t >>> 1 : -1 * (t >>> 1) }, e.readBoolean = function () { return 1 === this.readBits(1) }, e.readUByte = function () { return this.readBits(8) }, e.readUShort = function () { return this.readBits(16) }, e.readUInt = function () { return this.readBits(32) }, e.skipScalingList = function (t) { for (var e = 8, r = 8, n = 0; n < t; n++)0 !== r && (r = (e + this.readEG() + 256) % 256), e = 0 === r ? e : r }, e.readSPS = function () { var t, e, r, n = 0, i = 0, a = 0, s = 0, o = this.readUByte.bind(this), l = this.readBits.bind(this), u = this.readUEG.bind(this), c = this.readBoolean.bind(this), d = this.skipBits.bind(this), h = this.skipEG.bind(this), f = this.skipUEG.bind(this), p = this.skipScalingList.bind(this); o(); var g = o(); if (l(5), d(3), o(), f(), 100 === g || 110 === g || 122 === g || 244 === g || 44 === g || 83 === g || 86 === g || 118 === g || 128 === g) { var v = u(); if (3 === v && d(1), f(), f(), d(1), c()) for (e = 3 !== v ? 8 : 12, r = 0; r < e; r++)c() && p(r < 6 ? 16 : 64) } f(); var m = u(); if (0 === m) u(); else if (1 === m) for (d(1), h(), h(), t = u(), r = 0; r < t; r++)h(); f(), d(1); var y = u(), A = u(), E = l(1); 0 === E && d(1), d(1), c() && (n = u(), i = u(), a = u(), s = u()); var T = [1, 1]; if (c() && c()) switch (o()) { case 1: T = [1, 1]; break; case 2: T = [12, 11]; break; case 3: T = [10, 11]; break; case 4: T = [16, 11]; break; case 5: T = [40, 33]; break; case 6: T = [24, 11]; break; case 7: T = [20, 11]; break; case 8: T = [32, 11]; break; case 9: T = [80, 33]; break; case 10: T = [18, 11]; break; case 11: T = [15, 11]; break; case 12: T = [64, 33]; break; case 13: T = [160, 99]; break; case 14: T = [4, 3]; break; case 15: T = [3, 2]; break; case 16: T = [2, 1]; break; case 255: T = [o() << 8 | o(), o() << 8 | o()] }return { width: Math.ceil(16 * (y + 1) - 2 * n - 2 * i), height: (2 - E) * (A + 1) * 16 - (E ? 2 : 4) * (a + s), pixelRatio: T } }, e.readSliceType = function () { return this.readUByte(), this.readUEG(), this.readUEG() }, t }(); e.default = i }, "./src/demux/id3.ts":
/*!**************************!*\
    !*** ./src/demux/id3.ts ***!
    \**************************/
/*! exports provided: isHeader, isFooter, getID3Data, canParse, getTimeStamp, isTimeStampFrame, getID3Frames, decodeFrame, utf8ArrayToStr, testables */function (t, e, r) { r.r(e), r.d(e, "isHeader", (function () { return i })), r.d(e, "isFooter", (function () { return a })), r.d(e, "getID3Data", (function () { return s })), r.d(e, "canParse", (function () { return l })), r.d(e, "getTimeStamp", (function () { return u })), r.d(e, "isTimeStampFrame", (function () { return c })), r.d(e, "getID3Frames", (function () { return h })), r.d(e, "decodeFrame", (function () { return f })), r.d(e, "utf8ArrayToStr", (function () { return y })), r.d(e, "testables", (function () { return A })); var n, i = function (t, e) { return e + 10 <= t.length && 73 === t[e] && 68 === t[e + 1] && 51 === t[e + 2] && t[e + 3] < 255 && t[e + 4] < 255 && t[e + 6] < 128 && t[e + 7] < 128 && t[e + 8] < 128 && t[e + 9] < 128 }, a = function (t, e) { return e + 10 <= t.length && 51 === t[e] && 68 === t[e + 1] && 73 === t[e + 2] && t[e + 3] < 255 && t[e + 4] < 255 && t[e + 6] < 128 && t[e + 7] < 128 && t[e + 8] < 128 && t[e + 9] < 128 }, s = function (t, e) { for (var r = e, n = 0; i(t, e);)n += 10, n += o(t, e + 6), a(t, e + 10) && (n += 10), e += n; if (n > 0) return t.subarray(r, r + n) }, o = function (t, e) { var r = 0; return r = (127 & t[e]) << 21, r |= (127 & t[e + 1]) << 14, r |= (127 & t[e + 2]) << 7, r |= 127 & t[e + 3] }, l = function (t, e) { return i(t, e) && o(t, e + 6) + 10 <= t.length - e }, u = function (t) { for (var e = h(t), r = 0; r < e.length; r++) { var n = e[r]; if (c(n)) return m(n) } }, c = function (t) { return t && "PRIV" === t.key && "com.apple.streaming.transportStreamTimestamp" === t.info }, d = function (t) { var e = String.fromCharCode(t[0], t[1], t[2], t[3]), r = o(t, 4); return { type: e, size: r, data: t.subarray(10, 10 + r) } }, h = function (t) { for (var e = 0, r = []; i(t, e);) { for (var n = o(t, e + 6), s = (e += 10) + n; e + 8 < s;) { var l = d(t.subarray(e)), u = f(l); u && r.push(u), e += l.size + 10 } a(t, e) && (e += 10) } return r }, f = function (t) { return "PRIV" === t.type ? p(t) : "W" === t.type[0] ? v(t) : g(t) }, p = function (t) { if (!(t.size < 2)) { var e = y(t.data, !0), r = new Uint8Array(t.data.subarray(e.length + 1)); return { key: t.type, info: e, data: r.buffer } } }, g = function (t) { if (!(t.size < 2)) { if ("TXXX" === t.type) { var e = 1, r = y(t.data.subarray(e), !0); e += r.length + 1; var n = y(t.data.subarray(e)); return { key: t.type, info: r, data: n } } var i = y(t.data.subarray(1)); return { key: t.type, data: i } } }, v = function (t) { if ("WXXX" === t.type) { if (t.size < 2) return; var e = 1, r = y(t.data.subarray(e), !0); e += r.length + 1; var n = y(t.data.subarray(e)); return { key: t.type, info: r, data: n } } var i = y(t.data); return { key: t.type, data: i } }, m = function (t) { if (8 === t.data.byteLength) { var e = new Uint8Array(t.data), r = 1 & e[3], n = (e[4] << 23) + (e[5] << 15) + (e[6] << 7) + e[7]; return n /= 45, r && (n += 47721858.84), Math.round(n) } }, y = function (t, e) { void 0 === e && (e = !1); var r = E(); if (r) { var n = r.decode(t); if (e) { var i = n.indexOf("\0"); return -1 !== i ? n.substring(0, i) : n } return n.replace(/\0/g, "") } for (var a, s, o, l = t.length, u = "", c = 0; c < l;) { if (0 === (a = t[c++]) && e) return u; if (0 !== a && 3 !== a) switch (a >> 4) { case 0: case 1: case 2: case 3: case 4: case 5: case 6: case 7: u += String.fromCharCode(a); break; case 12: case 13: s = t[c++], u += String.fromCharCode((31 & a) << 6 | 63 & s); break; case 14: s = t[c++], o = t[c++], u += String.fromCharCode((15 & a) << 12 | (63 & s) << 6 | (63 & o) << 0) } } return u }, A = { decodeTextFrame: g }; function E() { return n || void 0 === self.TextDecoder || (n = new self.TextDecoder("utf-8")), n } }, "./src/demux/mp3demuxer.ts":
/*!*********************************!*\
    !*** ./src/demux/mp3demuxer.ts ***!
    \*********************************/
/*! exports provided: default */function (t, e, r) { r.r(e); var n = r(/*! ./base-audio-demuxer */"./src/demux/base-audio-demuxer.ts"), i = r(/*! ../demux/id3 */"./src/demux/id3.ts"), a = r(/*! ../utils/logger */"./src/utils/logger.ts"), s = r(/*! ./mpegaudio */"./src/demux/mpegaudio.ts"); function o(t, e) { return o = Object.setPrototypeOf || function (t, e) { return t.__proto__ = e, t }, o(t, e) } var l = function (t) { var e, r; function n() { return t.apply(this, arguments) || this } r = t, (e = n).prototype = Object.create(r.prototype), e.prototype.constructor = e, o(e, r); var l = n.prototype; return l.resetInitSegment = function (e, r, n) { t.prototype.resetInitSegment.call(this, e, r, n), this._audioTrack = { container: "audio/mpeg", type: "audio", id: 2, pid: -1, sequenceNumber: 0, isAAC: !1, samples: [], manifestCodec: e, duration: n, inputTimeScale: 9e4, dropped: 0 } }, n.probe = function (t) { if (!t) return !1; for (var e = (i.getID3Data(t, 0) || []).length, r = t.length; e < r; e++)if (s.probe(t, e)) return a.logger.log("MPEG Audio sync word found !"), !0; return !1 }, l.canParse = function (t, e) { return s.canParse(t, e) }, l.appendFrame = function (t, e, r) { if (null !== this.initPTS) return s.appendFrame(t, e, r, this.initPTS, this.frameIndex) }, n }(n.default); l.minProbeByteLength = 4, e.default = l }, "./src/demux/mp4demuxer.ts":
/*!*********************************!*\
    !*** ./src/demux/mp4demuxer.ts ***!
    \*********************************/
/*! exports provided: default */function (t, e, r) { r.r(e); var n = r(/*! ../utils/mp4-tools */"./src/utils/mp4-tools.ts"), i = r(/*! ./dummy-demuxed-track */"./src/demux/dummy-demuxed-track.ts"), a = function () { function t(t, e) { this.remainderData = null, this.config = void 0, this.config = e } var e = t.prototype; return e.resetTimeStamp = function () { }, e.resetInitSegment = function () { }, e.resetContiguity = function () { }, t.probe = function (t) { return Object(n.findBox)({ data: t, start: 0, end: Math.min(t.length, 16384) }, ["moof"]).length > 0 }, e.demux = function (t) { var e = t, r = Object(i.dummyTrack)(); if (this.config.progressive) { this.remainderData && (e = Object(n.appendUint8Array)(this.remainderData, t)); var a = Object(n.segmentValidRange)(e); this.remainderData = a.remainder, r.samples = a.valid || new Uint8Array } else r.samples = e; return { audioTrack: Object(i.dummyTrack)(), avcTrack: r, id3Track: Object(i.dummyTrack)(), textTrack: Object(i.dummyTrack)() } }, e.flush = function () { var t = Object(i.dummyTrack)(); return t.samples = this.remainderData || new Uint8Array, this.remainderData = null, { audioTrack: Object(i.dummyTrack)(), avcTrack: t, id3Track: Object(i.dummyTrack)(), textTrack: Object(i.dummyTrack)() } }, e.demuxSampleAes = function (t, e, r) { return Promise.reject(new Error("The MP4 demuxer does not support SAMPLE-AES decryption")) }, e.destroy = function () { }, t }(); a.minProbeByteLength = 1024, e.default = a }, "./src/demux/mpegaudio.ts":
/*!********************************!*\
    !*** ./src/demux/mpegaudio.ts ***!
    \********************************/
/*! exports provided: appendFrame, parseHeader, isHeaderPattern, isHeader, canParse, probe */function (t, e, r) { r.r(e), r.d(e, "appendFrame", (function () { return l })), r.d(e, "parseHeader", (function () { return u })), r.d(e, "isHeaderPattern", (function () { return c })), r.d(e, "isHeader", (function () { return d })), r.d(e, "canParse", (function () { return h })), r.d(e, "probe", (function () { return f })); var n = null, i = [32, 64, 96, 128, 160, 192, 224, 256, 288, 320, 352, 384, 416, 448, 32, 48, 56, 64, 80, 96, 112, 128, 160, 192, 224, 256, 320, 384, 32, 40, 48, 56, 64, 80, 96, 112, 128, 160, 192, 224, 256, 320, 32, 48, 56, 64, 80, 96, 112, 128, 144, 160, 176, 192, 224, 256, 8, 16, 24, 32, 40, 48, 56, 64, 80, 96, 112, 128, 144, 160], a = [44100, 48e3, 32e3, 22050, 24e3, 16e3, 11025, 12e3, 8e3], s = [[0, 72, 144, 12], [0, 0, 0, 0], [0, 72, 144, 12], [0, 144, 144, 12]], o = [0, 1, 1, 4]; function l(t, e, r, n, i) { if (!(r + 24 > e.length)) { var a = u(e, r); if (a && r + a.frameLength <= e.length) { var s = n + i * (9e4 * a.samplesPerFrame / a.sampleRate), o = { unit: e.subarray(r, r + a.frameLength), pts: s, dts: s }; return t.config = [], t.channelCount = a.channelCount, t.samplerate = a.sampleRate, t.samples.push(o), { sample: o, length: a.frameLength, missing: 0 } } } } function u(t, e) { var r = t[e + 1] >> 3 & 3, l = t[e + 1] >> 1 & 3, u = t[e + 2] >> 4 & 15, c = t[e + 2] >> 2 & 3; if (1 !== r && 0 !== u && 15 !== u && 3 !== c) { var d = t[e + 2] >> 1 & 1, h = t[e + 3] >> 6, f = 1e3 * i[14 * (3 === r ? 3 - l : 3 === l ? 3 : 4) + u - 1], p = a[3 * (3 === r ? 0 : 2 === r ? 1 : 2) + c], g = 3 === h ? 1 : 2, v = s[r][l], m = o[l], y = 8 * v * m, A = Math.floor(v * f / p + d) * m; if (null === n) { var E = (navigator.userAgent || "").match(/Chrome\/(\d+)/i); n = E ? parseInt(E[1]) : 0 } return !!n && n <= 87 && 2 === l && f >= 224e3 && 0 === h && (t[e + 3] = 128 | t[e + 3]), { sampleRate: p, channelCount: g, frameLength: A, samplesPerFrame: y } } } function c(t, e) { return 255 === t[e] && 224 == (224 & t[e + 1]) && 0 != (6 & t[e + 1]) } function d(t, e) { return e + 1 < t.length && c(t, e) } function h(t, e) { return c(t, e) && 4 <= t.length - e } function f(t, e) { if (e + 1 < t.length && c(t, e)) { var r = u(t, e), n = 4; null != r && r.frameLength && (n = r.frameLength); var i = e + n; return i === t.length || d(t, i) } return !1 } }, "./src/demux/sample-aes.ts":
/*!*********************************!*\
    !*** ./src/demux/sample-aes.ts ***!
    \*********************************/
/*! exports provided: default */function (t, e, r) { r.r(e); var n = r(/*! ../crypt/decrypter */"./src/crypt/decrypter.ts"), i = r(/*! ./tsdemuxer */"./src/demux/tsdemuxer.ts"), a = function () { function t(t, e, r) { this.keyData = void 0, this.decrypter = void 0, this.keyData = r, this.decrypter = new n.default(t, e, { removePKCS7Padding: !1 }) } var e = t.prototype; return e.decryptBuffer = function (t, e) { this.decrypter.decrypt(t, this.keyData.key.buffer, this.keyData.iv.buffer, e) }, e.decryptAacSample = function (t, e, r, n) { var i = t[e].unit, a = i.subarray(16, i.length - i.length % 16), s = a.buffer.slice(a.byteOffset, a.byteOffset + a.length), o = this; this.decryptBuffer(s, (function (a) { var s = new Uint8Array(a); i.set(s, 16), n || o.decryptAacSamples(t, e + 1, r) })) }, e.decryptAacSamples = function (t, e, r) { for (; ; e++) { if (e >= t.length) return void r(); if (!(t[e].unit.length < 32)) { var n = this.decrypter.isSync(); if (this.decryptAacSample(t, e, r, n), !n) return } } }, e.getAvcEncryptedData = function (t) { for (var e = 16 * Math.floor((t.length - 48) / 160) + 16, r = new Int8Array(e), n = 0, i = 32; i < t.length - 16; i += 160, n += 16)r.set(t.subarray(i, i + 16), n); return r }, e.getAvcDecryptedUnit = function (t, e) { for (var r = new Uint8Array(e), n = 0, i = 32; i < t.length - 16; i += 160, n += 16)t.set(r.subarray(n, n + 16), i); return t }, e.decryptAvcSample = function (t, e, r, n, a, s) { var o = Object(i.discardEPB)(a.data), l = this.getAvcEncryptedData(o), u = this; this.decryptBuffer(l.buffer, (function (i) { a.data = u.getAvcDecryptedUnit(o, i), s || u.decryptAvcSamples(t, e, r + 1, n) })) }, e.decryptAvcSamples = function (t, e, r, n) { if (t instanceof Uint8Array) throw new Error("Cannot decrypt samples of type Uint8Array"); for (; ; e++, r = 0) { if (e >= t.length) return void n(); for (var i = t[e].units; !(r >= i.length); r++) { var a = i[r]; if (!(a.data.length <= 48 || 1 !== a.type && 5 !== a.type)) { var s = this.decrypter.isSync(); if (this.decryptAvcSample(t, e, r, n, a, s), !s) return } } } }, t }(); e.default = a }, "./src/demux/transmuxer-interface.ts":
/*!*******************************************!*\
    !*** ./src/demux/transmuxer-interface.ts ***!
    \*******************************************/
/*! exports provided: default */function (t, e, r) { r.r(e), r.d(e, "default", (function () { return d })); var n = r(/*! webworkify-webpack */"./node_modules/webworkify-webpack/index.js"), i = r(/*! ../events */"./src/events.ts"), a = r(/*! ../demux/transmuxer */"./src/demux/transmuxer.ts"), s = r(/*! ../utils/logger */"./src/utils/logger.ts"), o = r(/*! ../errors */"./src/errors.ts"), l = r(/*! ../utils/mediasource-helper */"./src/utils/mediasource-helper.ts"), u = r(/*! eventemitter3 */"./node_modules/eventemitter3/index.js"), c = Object(l.getMediaSource)() || { isTypeSupported: function () { return !1 } }, d = function () { function t(t, e, r, l) { var d = this; this.hls = void 0, this.id = void 0, this.observer = void 0, this.frag = null, this.part = null, this.worker = void 0, this.onwmsg = void 0, this.transmuxer = null, this.onTransmuxComplete = void 0, this.onFlush = void 0, this.hls = t, this.id = e, this.onTransmuxComplete = r, this.onFlush = l; var h = t.config, f = function (e, r) { (r = r || {}).frag = d.frag, r.id = d.id, t.trigger(e, r) }; this.observer = new u.EventEmitter, this.observer.on(i.Events.FRAG_DECRYPTED, f), this.observer.on(i.Events.ERROR, f); var p = { mp4: c.isTypeSupported("video/mp4"), mpeg: c.isTypeSupported("audio/mpeg"), mp3: c.isTypeSupported('audio/mp4; codecs="mp3"') }, g = navigator.vendor; if (h.enableWorker && "undefined" != typeof Worker) { var v; s.logger.log("demuxing in webworker"); try { v = this.worker = n(/*! ../demux/transmuxer-worker.ts */"./src/demux/transmuxer-worker.ts"), this.onwmsg = this.onWorkerMessage.bind(this), v.addEventListener("message", this.onwmsg), v.onerror = function (e) { t.trigger(i.Events.ERROR, { type: o.ErrorTypes.OTHER_ERROR, details: o.ErrorDetails.INTERNAL_EXCEPTION, fatal: !0, event: "demuxerWorker", error: new Error(e.message + "  (" + e.filename + ":" + e.lineno + ")") }) }, v.postMessage({ cmd: "init", typeSupported: p, vendor: g, id: e, config: JSON.stringify(h) }) } catch (t) { s.logger.warn("Error in worker:", t), s.logger.error("Error while initializing DemuxerWorker, fallback to inline"), v && self.URL.revokeObjectURL(v.objectURL), this.transmuxer = new a.default(this.observer, p, h, g, e), this.worker = null } } else this.transmuxer = new a.default(this.observer, p, h, g, e) } var e = t.prototype; return e.destroy = function () { var t = this.worker; if (t) t.removeEventListener("message", this.onwmsg), t.terminate(), this.worker = null; else { var e = this.transmuxer; e && (e.destroy(), this.transmuxer = null) } var r = this.observer; r && r.removeAllListeners(), this.observer = null }, e.push = function (t, e, r, n, i, o, l, u, c, d) { var h, f, p = this; c.transmuxing.start = self.performance.now(); var g = this.transmuxer, v = this.worker, m = o ? o.start : i.start, y = i.decryptdata, A = this.frag, E = !(A && i.cc === A.cc), T = !(A && c.level === A.level), b = A ? c.sn - A.sn : -1, k = this.part ? c.part - this.part.index : 1, S = !T && (1 === b || 0 === b && 1 === k), _ = self.performance.now(); (T || b || 0 === i.stats.parsing.start) && (i.stats.parsing.start = _), !o || !k && S || (o.stats.parsing.start = _); var C = !(A && (null === (h = i.initSegment) || void 0 === h ? void 0 : h.url) === (null === (f = A.initSegment) || void 0 === f ? void 0 : f.url)), L = new a.TransmuxState(E, S, u, T, m, C); if (!S || E || C) { s.logger.log("[transmuxer-interface, " + i.type + "]: Starting new transmux session for sn: " + c.sn + " p: " + c.part + " level: " + c.level + " id: " + c.id + "\n        discontinuity: " + E + "\n        trackSwitch: " + T + "\n        contiguous: " + S + "\n        accurateTimeOffset: " + u + "\n        timeOffset: " + m + "\n        initSegmentChange: " + C); var R = new a.TransmuxConfig(r, n, e, l, d); this.configureTransmuxer(R) } if (this.frag = i, this.part = o, v) v.postMessage({ cmd: "demux", data: t, decryptdata: y, chunkMeta: c, state: L }, t instanceof ArrayBuffer ? [t] : []); else if (g) { var D = g.push(t, y, c, L); Object(a.isPromise)(D) ? D.then((function (t) { p.handleTransmuxComplete(t) })) : this.handleTransmuxComplete(D) } }, e.flush = function (t) { var e = this; t.transmuxing.start = self.performance.now(); var r = this.transmuxer, n = this.worker; if (n) n.postMessage({ cmd: "flush", chunkMeta: t }); else if (r) { var i = r.flush(t); Object(a.isPromise)(i) ? i.then((function (r) { e.handleFlushResult(r, t) })) : this.handleFlushResult(i, t) } }, e.handleFlushResult = function (t, e) { var r = this; t.forEach((function (t) { r.handleTransmuxComplete(t) })), this.onFlush(e) }, e.onWorkerMessage = function (t) { var e = t.data, r = this.hls; switch (e.event) { case "init": self.URL.revokeObjectURL(this.worker.objectURL); break; case "transmuxComplete": this.handleTransmuxComplete(e.data); break; case "flush": this.onFlush(e.data); break; default: e.data = e.data || {}, e.data.frag = this.frag, e.data.id = this.id, r.trigger(e.event, e.data) } }, e.configureTransmuxer = function (t) { var e = this.worker, r = this.transmuxer; e ? e.postMessage({ cmd: "configure", config: t }) : r && r.configure(t) }, e.handleTransmuxComplete = function (t) { t.chunkMeta.transmuxing.end = self.performance.now(), this.onTransmuxComplete(t) }, t }() }, "./src/demux/transmuxer-worker.ts":
/*!****************************************!*\
    !*** ./src/demux/transmuxer-worker.ts ***!
    \****************************************/
/*! exports provided: default */function (t, e, r) { r.r(e), r.d(e, "default", (function () { return o })); var n = r(/*! ../demux/transmuxer */"./src/demux/transmuxer.ts"), i = r(/*! ../events */"./src/events.ts"), a = r(/*! ../utils/logger */"./src/utils/logger.ts"), s = r(/*! eventemitter3 */"./node_modules/eventemitter3/index.js"); function o(t) { var e = new s.EventEmitter, r = function (e, r) { t.postMessage({ event: e, data: r }) }; e.on(i.Events.FRAG_DECRYPTED, r), e.on(i.Events.ERROR, r), t.addEventListener("message", (function (i) { var s = i.data; switch (s.cmd) { case "init": var o = JSON.parse(s.config); t.transmuxer = new n.default(e, s.typeSupported, o, s.vendor, s.id), Object(a.enableLogs)(o.debug), r("init", null); break; case "configure": t.transmuxer.configure(s.config); break; case "demux": var u = t.transmuxer.push(s.data, s.decryptdata, s.chunkMeta, s.state); Object(n.isPromise)(u) ? u.then((function (e) { l(t, e) })) : l(t, u); break; case "flush": var d = s.chunkMeta, h = t.transmuxer.flush(d); Object(n.isPromise)(h) ? h.then((function (e) { c(t, e, d) })) : c(t, h, d) } })) } function l(t, e) { if ((r = e.remuxResult).audio || r.video || r.text || r.id3 || r.initSegment) { var r, n = [], i = e.remuxResult, a = i.audio, s = i.video; a && u(n, a), s && u(n, s), t.postMessage({ event: "transmuxComplete", data: e }, n) } } function u(t, e) { e.data1 && t.push(e.data1.buffer), e.data2 && t.push(e.data2.buffer) } function c(t, e, r) { e.forEach((function (e) { l(t, e) })), t.postMessage({ event: "flush", data: r }) } }, "./src/demux/transmuxer.ts":
/*!*********************************!*\
    !*** ./src/demux/transmuxer.ts ***!
    \*********************************/
/*! exports provided: default, isPromise, TransmuxConfig, TransmuxState */function (t, e, r) { r.r(e), r.d(e, "default", (function () { return y })), r.d(e, "isPromise", (function () { return E })), r.d(e, "TransmuxConfig", (function () { return T })), r.d(e, "TransmuxState", (function () { return b })); var n, i = r(/*! ../events */"./src/events.ts"), a = r(/*! ../errors */"./src/errors.ts"), s = r(/*! ../crypt/decrypter */"./src/crypt/decrypter.ts"), o = r(/*! ../demux/aacdemuxer */"./src/demux/aacdemuxer.ts"), l = r(/*! ../demux/mp4demuxer */"./src/demux/mp4demuxer.ts"), u = r(/*! ../demux/tsdemuxer */"./src/demux/tsdemuxer.ts"), c = r(/*! ../demux/mp3demuxer */"./src/demux/mp3demuxer.ts"), d = r(/*! ../remux/mp4-remuxer */"./src/remux/mp4-remuxer.ts"), h = r(/*! ../remux/passthrough-remuxer */"./src/remux/passthrough-remuxer.ts"), f = r(/*! ./chunk-cache */"./src/demux/chunk-cache.ts"), p = r(/*! ../utils/mp4-tools */"./src/utils/mp4-tools.ts"), g = r(/*! ../utils/logger */"./src/utils/logger.ts"); try { n = self.performance.now.bind(self.performance) } catch (t) { g.logger.debug("Unable to use Performance API on this environment"), n = self.Date.now } var v = [{ demux: u.default, remux: d.default }, { demux: l.default, remux: h.default }, { demux: o.default, remux: d.default }, { demux: c.default, remux: d.default }], m = 1024; v.forEach((function (t) { var e = t.demux; m = Math.max(m, e.minProbeByteLength) })); var y = function () { function t(t, e, r, n, i) { this.observer = void 0, this.typeSupported = void 0, this.config = void 0, this.vendor = void 0, this.id = void 0, this.demuxer = void 0, this.remuxer = void 0, this.decrypter = void 0, this.probe = void 0, this.decryptionPromise = null, this.transmuxConfig = void 0, this.currentTransmuxState = void 0, this.cache = new f.default, this.observer = t, this.typeSupported = e, this.config = r, this.vendor = n, this.id = i } var e = t.prototype; return e.configure = function (t) { this.transmuxConfig = t, this.decrypter && this.decrypter.reset() }, e.push = function (t, e, r, i) { var a = this, s = r.transmuxing; s.executeStart = n(); var o = new Uint8Array(t), l = this.cache, u = this.config, c = this.currentTransmuxState, d = this.transmuxConfig; i && (this.currentTransmuxState = i); var h = function (t, e) { var r = null; return t.byteLength > 0 && null != e && null != e.key && null !== e.iv && null != e.method && (r = e), r }(o, e); if (h && "AES-128" === h.method) { var f = this.getDecrypter(); if (!u.enableSoftwareAES) return this.decryptionPromise = f.webCryptoDecrypt(o, h.key.buffer, h.iv.buffer).then((function (t) { var e = a.push(t, null, r); return a.decryptionPromise = null, e })), this.decryptionPromise; var g = f.softwareDecrypt(o, h.key.buffer, h.iv.buffer); if (!g) return s.executeEnd = n(), A(r); o = new Uint8Array(g) } var v = i || c, m = v.contiguous, y = v.discontinuity, E = v.trackSwitch, T = v.accurateTimeOffset, b = v.timeOffset, k = v.initSegmentChange, S = d.audioCodec, _ = d.videoCodec, C = d.defaultInitPts, L = d.duration, R = d.initSegmentData; if ((y || E || k) && this.resetInitSegment(R, S, _, L), (y || k) && this.resetInitialTimestamp(C), m || this.resetContiguity(), this.needsProbing(o, y, E)) { if (l.dataLength) { var D = l.flush(); o = Object(p.appendUint8Array)(D, o) } this.configureTransmuxer(o, d) } var I = this.transmux(o, h, b, T, r), O = this.currentTransmuxState; return O.contiguous = !0, O.discontinuity = !1, O.trackSwitch = !1, s.executeEnd = n(), I }, e.flush = function (t) { var e = this, r = t.transmuxing; r.executeStart = n(); var s = this.decrypter, o = this.cache, l = this.currentTransmuxState, u = this.decryptionPromise; if (u) return u.then((function () { return e.flush(t) })); var c = [], d = l.timeOffset; if (s) { var h = s.flush(); h && c.push(this.push(h, null, t)) } var f = o.dataLength; o.reset(); var p = this.demuxer, g = this.remuxer; if (!p || !g) return f >= m && this.observer.emit(i.Events.ERROR, i.Events.ERROR, { type: a.ErrorTypes.MEDIA_ERROR, details: a.ErrorDetails.FRAG_PARSING_ERROR, fatal: !0, reason: "no demux matching with content found" }), r.executeEnd = n(), [A(t)]; var v = p.flush(d); return E(v) ? v.then((function (r) { return e.flushRemux(c, r, t), c })) : (this.flushRemux(c, v, t), c) }, e.flushRemux = function (t, e, r) { var i = e.audioTrack, a = e.avcTrack, s = e.id3Track, o = e.textTrack, l = this.currentTransmuxState, u = l.accurateTimeOffset, c = l.timeOffset; g.logger.log("[transmuxer.ts]: Flushed fragment " + r.sn + (r.part > -1 ? " p: " + r.part : "") + " of level " + r.level); var d = this.remuxer.remux(i, a, s, o, c, u, !0, this.id); t.push({ remuxResult: d, chunkMeta: r }), r.transmuxing.executeEnd = n() }, e.resetInitialTimestamp = function (t) { var e = this.demuxer, r = this.remuxer; e && r && (e.resetTimeStamp(t), r.resetTimeStamp(t)) }, e.resetContiguity = function () { var t = this.demuxer, e = this.remuxer; t && e && (t.resetContiguity(), e.resetNextTimestamp()) }, e.resetInitSegment = function (t, e, r, n) { var i = this.demuxer, a = this.remuxer; i && a && (i.resetInitSegment(e, r, n), a.resetInitSegment(t, e, r)) }, e.destroy = function () { this.demuxer && (this.demuxer.destroy(), this.demuxer = void 0), this.remuxer && (this.remuxer.destroy(), this.remuxer = void 0) }, e.transmux = function (t, e, r, n, i) { return e && "SAMPLE-AES" === e.method ? this.transmuxSampleAes(t, e, r, n, i) : this.transmuxUnencrypted(t, r, n, i) }, e.transmuxUnencrypted = function (t, e, r, n) { var i = this.demuxer.demux(t, e, !1, !this.config.progressive), a = i.audioTrack, s = i.avcTrack, o = i.id3Track, l = i.textTrack; return { remuxResult: this.remuxer.remux(a, s, o, l, e, r, !1, this.id), chunkMeta: n } }, e.transmuxSampleAes = function (t, e, r, n, i) { var a = this; return this.demuxer.demuxSampleAes(t, e, r).then((function (t) { return { remuxResult: a.remuxer.remux(t.audioTrack, t.avcTrack, t.id3Track, t.textTrack, r, n, !1, a.id), chunkMeta: i } })) }, e.configureTransmuxer = function (t, e) { for (var r, n = this.config, i = this.observer, a = this.typeSupported, s = this.vendor, o = e.audioCodec, u = e.defaultInitPts, c = e.duration, d = e.initSegmentData, f = e.videoCodec, p = 0, m = v.length; p < m; p++)if (v[p].demux.probe(t)) { r = v[p]; break } r || (g.logger.warn("Failed to find demuxer by probing frag, treating as mp4 passthrough"), r = { demux: l.default, remux: h.default }); var y = this.demuxer, A = this.remuxer, E = r.remux, T = r.demux; A && A instanceof E || (this.remuxer = new E(i, n, a, s)), y && y instanceof T || (this.demuxer = new T(i, n, a), this.probe = T.probe), this.resetInitSegment(d, o, f, c), this.resetInitialTimestamp(u) }, e.needsProbing = function (t, e, r) { return !this.demuxer || !this.remuxer || e || r }, e.getDecrypter = function () { var t = this.decrypter; return t || (t = this.decrypter = new s.default(this.observer, this.config)), t }, t }(), A = function (t) { return { remuxResult: {}, chunkMeta: t } }; function E(t) { return "then" in t && t.then instanceof Function } var T = function (t, e, r, n, i) { this.audioCodec = void 0, this.videoCodec = void 0, this.initSegmentData = void 0, this.duration = void 0, this.defaultInitPts = void 0, this.audioCodec = t, this.videoCodec = e, this.initSegmentData = r, this.duration = n, this.defaultInitPts = i }, b = function (t, e, r, n, i, a) { this.discontinuity = void 0, this.contiguous = void 0, this.accurateTimeOffset = void 0, this.trackSwitch = void 0, this.timeOffset = void 0, this.initSegmentChange = void 0, this.discontinuity = t, this.contiguous = e, this.accurateTimeOffset = r, this.trackSwitch = n, this.timeOffset = i, this.initSegmentChange = a } }, "./src/demux/tsdemuxer.ts":
/*!********************************!*\
    !*** ./src/demux/tsdemuxer.ts ***!
    \********************************/
/*! exports provided: discardEPB, default */function (t, e, r) { r.r(e), r.d(e, "discardEPB", (function () { return E })); var n = r(/*! ./adts */"./src/demux/adts.ts"), i = r(/*! ./mpegaudio */"./src/demux/mpegaudio.ts"), a = r(/*! ./exp-golomb */"./src/demux/exp-golomb.ts"), s = r(/*! ./id3 */"./src/demux/id3.ts"), o = r(/*! ./sample-aes */"./src/demux/sample-aes.ts"), l = r(/*! ../events */"./src/events.ts"), u = r(/*! ../utils/mp4-tools */"./src/utils/mp4-tools.ts"), c = r(/*! ../utils/logger */"./src/utils/logger.ts"), d = r(/*! ../errors */"./src/errors.ts"), h = { video: 1, audio: 2, id3: 3, text: 4 }, f = function () { function t(t, e, r) { this.observer = void 0, this.config = void 0, this.typeSupported = void 0, this.sampleAes = null, this.pmtParsed = !1, this.audioCodec = void 0, this.videoCodec = void 0, this._duration = 0, this.aacLastPTS = null, this._initPTS = null, this._initDTS = null, this._pmtId = -1, this._avcTrack = void 0, this._audioTrack = void 0, this._id3Track = void 0, this._txtTrack = void 0, this.aacOverFlow = null, this.avcSample = null, this.remainderData = null, this.observer = t, this.config = e, this.typeSupported = r } t.probe = function (e) { var r = t.syncOffset(e); return !(r < 0 || (r && c.logger.warn("MPEG2-TS detected but first sync word found @ offset " + r + ", junk ahead ?"), 0)) }, t.syncOffset = function (t) { for (var e = Math.min(1e3, t.length - 564), r = 0; r < e;) { if (71 === t[r] && 71 === t[r + 188] && 71 === t[r + 376]) return r; r++ } return -1 }, t.createTrack = function (t, e) { return { container: "video" === t || "audio" === t ? "video/mp2t" : void 0, type: t, id: h[t], pid: -1, inputTimeScale: 9e4, sequenceNumber: 0, samples: [], dropped: 0, duration: "audio" === t ? e : void 0 } }; var e = t.prototype; return e.resetInitSegment = function (e, r, n) { this.pmtParsed = !1, this._pmtId = -1, this._avcTrack = t.createTrack("video", n), this._audioTrack = t.createTrack("audio", n), this._id3Track = t.createTrack("id3", n), this._txtTrack = t.createTrack("text", n), this._audioTrack.isAAC = !0, this.aacOverFlow = null, this.aacLastPTS = null, this.avcSample = null, this.audioCodec = e, this.videoCodec = r, this._duration = n }, e.resetTimeStamp = function () { }, e.resetContiguity = function () { var t = this._audioTrack, e = this._avcTrack, r = this._id3Track; t && (t.pesData = null), e && (e.pesData = null), r && (r.pesData = null), this.aacOverFlow = null, this.aacLastPTS = null }, e.demux = function (e, r, n, i) { var a; void 0 === n && (n = !1), void 0 === i && (i = !1), n || (this.sampleAes = null); var s = this._avcTrack, o = this._audioTrack, h = this._id3Track, f = s.pid, p = s.pesData, y = o.pid, A = h.pid, E = o.pesData, T = h.pesData, b = !1, k = this.pmtParsed, S = this._pmtId, _ = e.length; if (this.remainderData && (_ = (e = Object(u.appendUint8Array)(this.remainderData, e)).length, this.remainderData = null), _ < 188 && !i) return this.remainderData = e, { audioTrack: o, avcTrack: s, id3Track: h, textTrack: this._txtTrack }; var C = Math.max(0, t.syncOffset(e)); (_ -= (_ + C) % 188) < e.byteLength && !i && (this.remainderData = new Uint8Array(e.buffer, _, e.buffer.byteLength - _)); for (var L = 0, R = C; R < _; R += 188)if (71 === e[R]) { var D = !!(64 & e[R + 1]), I = ((31 & e[R + 1]) << 8) + e[R + 2], O = void 0; if ((48 & e[R + 3]) >> 4 > 1) { if ((O = R + 5 + e[R + 4]) === R + 188) continue } else O = R + 4; switch (I) { case f: D && (p && (a = m(p)) && this.parseAVCPES(a, !1), p = { data: [], size: 0 }), p && (p.data.push(e.subarray(O, R + 188)), p.size += R + 188 - O); break; case y: D && (E && (a = m(E)) && (o.isAAC ? this.parseAACPES(a) : this.parseMPEGPES(a)), E = { data: [], size: 0 }), E && (E.data.push(e.subarray(O, R + 188)), E.size += R + 188 - O); break; case A: D && (T && (a = m(T)) && this.parseID3PES(a), T = { data: [], size: 0 }), T && (T.data.push(e.subarray(O, R + 188)), T.size += R + 188 - O); break; case 0: D && (O += e[O] + 1), S = this._pmtId = g(e, O); break; case S: D && (O += e[O] + 1); var w = v(e, O, !0 === this.typeSupported.mpeg || !0 === this.typeSupported.mp3, n); (f = w.avc) > 0 && (s.pid = f), (y = w.audio) > 0 && (o.pid = y, o.isAAC = w.isAAC), (A = w.id3) > 0 && (h.pid = A), b && !k && (c.logger.log("reparse from beginning"), b = !1, R = C - 188), k = this.pmtParsed = !0; break; case 17: case 8191: break; default: b = !0 } } else L++; L > 0 && this.observer.emit(l.Events.ERROR, l.Events.ERROR, { type: d.ErrorTypes.MEDIA_ERROR, details: d.ErrorDetails.FRAG_PARSING_ERROR, fatal: !1, reason: "Found " + L + " TS packet/s that do not start with 0x47" }), s.pesData = p, o.pesData = E, h.pesData = T; var P = { audioTrack: o, avcTrack: s, id3Track: h, textTrack: this._txtTrack }; return i && this.extractRemainingSamples(P), P }, e.flush = function () { var t, e = this.remainderData; return this.remainderData = null, t = e ? this.demux(e, -1, !1, !0) : { audioTrack: this._audioTrack, avcTrack: this._avcTrack, textTrack: this._txtTrack, id3Track: this._id3Track }, this.extractRemainingSamples(t), this.sampleAes ? this.decrypt(t, this.sampleAes) : t }, e.extractRemainingSamples = function (t) { var e, r = t.audioTrack, n = t.avcTrack, i = t.id3Track, a = n.pesData, s = r.pesData, o = i.pesData; a && (e = m(a)) ? (this.parseAVCPES(e, !0), n.pesData = null) : n.pesData = a, s && (e = m(s)) ? (r.isAAC ? this.parseAACPES(e) : this.parseMPEGPES(e), r.pesData = null) : (null != s && s.size && c.logger.log("last AAC PES packet truncated,might overlap between fragments"), r.pesData = s), o && (e = m(o)) ? (this.parseID3PES(e), i.pesData = null) : i.pesData = o }, e.demuxSampleAes = function (t, e, r) { var n = this.demux(t, r, !0, !this.config.progressive), i = this.sampleAes = new o.default(this.observer, this.config, e); return this.decrypt(n, i) }, e.decrypt = function (t, e) { return new Promise((function (r) { var n = t.audioTrack, i = t.avcTrack; n.samples && n.isAAC ? e.decryptAacSamples(n.samples, 0, (function () { i.samples ? e.decryptAvcSamples(i.samples, 0, 0, (function () { r(t) })) : r(t) })) : i.samples && e.decryptAvcSamples(i.samples, 0, 0, (function () { r(t) })) })) }, e.destroy = function () { this._initPTS = this._initDTS = null, this._duration = 0 }, e.parseAVCPES = function (t, e) { var r, n = this, i = this._avcTrack, o = this.parseAVCNALu(t.data), l = this.avcSample, u = !1; t.data = null, l && o.length && !i.audFound && (y(l, i), l = this.avcSample = p(!1, t.pts, t.dts, "")), o.forEach((function (e) { switch (e.type) { case 1: r = !0, l || (l = n.avcSample = p(!0, t.pts, t.dts, "")), l.frame = !0; var o = e.data; if (u && o.length > 4) { var c = new a.default(o).readSliceType(); 2 !== c && 4 !== c && 7 !== c && 9 !== c || (l.key = !0) } break; case 5: r = !0, l || (l = n.avcSample = p(!0, t.pts, t.dts, "")), l.key = !0, l.frame = !0; break; case 6: r = !0; var d = new a.default(E(e.data)); d.readUByte(); for (var h = 0, f = 0, g = !1, v = 0; !g && d.bytesAvailable > 1;) { h = 0; do { h += v = d.readUByte() } while (255 === v); f = 0; do { f += v = d.readUByte() } while (255 === v); if (4 === h && 0 !== d.bytesAvailable) { if (g = !0, 181 === d.readUByte() && 49 === d.readUShort() && 1195456820 === d.readUInt() && 3 === d.readUByte()) { for (var m = d.readUByte(), T = 31 & m, b = [m, d.readUByte()], k = 0; k < T; k++)b.push(d.readUByte()), b.push(d.readUByte()), b.push(d.readUByte()); A(n._txtTrack.samples, { type: 3, pts: t.pts, bytes: b }) } } else if (5 === h && 0 !== d.bytesAvailable) { if (g = !0, f > 16) { for (var S = [], _ = 0; _ < 16; _++)S.push(d.readUByte().toString(16)), 3 !== _ && 5 !== _ && 7 !== _ && 9 !== _ || S.push("-"); for (var C = f - 16, L = new Uint8Array(C), R = 0; R < C; R++)L[R] = d.readUByte(); A(n._txtTrack.samples, { pts: t.pts, payloadType: h, uuid: S.join(""), userData: Object(s.utf8ArrayToStr)(L), userDataBytes: L }) } } else if (f < d.bytesAvailable) for (var D = 0; D < f; D++)d.readUByte() } break; case 7: if (r = !0, u = !0, !i.sps) { var I = new a.default(e.data).readSPS(); i.width = I.width, i.height = I.height, i.pixelRatio = I.pixelRatio, i.sps = [e.data], i.duration = n._duration; for (var O = e.data.subarray(1, 4), w = "avc1.", P = 0; P < 3; P++) { var x = O[P].toString(16); x.length < 2 && (x = "0" + x), w += x } i.codec = w } break; case 8: r = !0, i.pps || (i.pps = [e.data]); break; case 9: r = !1, i.audFound = !0, l && y(l, i), l = n.avcSample = p(!1, t.pts, t.dts, ""); break; case 12: r = !1; break; default: r = !1, l && (l.debug += "unknown NAL " + e.type + " ") }l && r && l.units.push(e) })), e && l && (y(l, i), this.avcSample = null) }, e.getLastNalUnit = function () { var t, e, r = this.avcSample; if (!r || 0 === r.units.length) { var n = this._avcTrack.samples; r = n[n.length - 1] } if (null !== (t = r) && void 0 !== t && t.units) { var i = r.units; e = i[i.length - 1] } return e }, e.parseAVCNALu = function (t) { var e, r, n = t.byteLength, i = this._avcTrack, a = i.naluState || 0, s = a, o = [], l = 0, u = -1, c = 0; for (-1 === a && (u = 0, c = 31 & t[0], a = 0, l = 1); l < n;)if (e = t[l++], a) if (1 !== a) if (e) if (1 === e) { if (u >= 0) { var d = { data: t.subarray(u, l - a - 1), type: c }; o.push(d) } else { var h = this.getLastNalUnit(); if (h && (s && l <= 4 - s && h.state && (h.data = h.data.subarray(0, h.data.byteLength - s)), (r = l - a - 1) > 0)) { var f = new Uint8Array(h.data.byteLength + r); f.set(h.data, 0), f.set(t.subarray(0, r), h.data.byteLength), h.data = f, h.state = 0 } } l < n ? (u = l, c = 31 & t[l], a = 0) : a = -1 } else a = 0; else a = 3; else a = e ? 0 : 2; else a = e ? 0 : 1; if (u >= 0 && a >= 0) { var p = { data: t.subarray(u, n), type: c, state: a }; o.push(p) } if (0 === o.length) { var g = this.getLastNalUnit(); if (g) { var v = new Uint8Array(g.data.byteLength + t.byteLength); v.set(g.data, 0), v.set(t, g.data.byteLength), g.data = v } } return i.naluState = a, o }, e.parseAACPES = function (t) { var e, r, i, a, s, o = 0, u = this._audioTrack, h = this.aacOverFlow, f = t.data; if (h) { this.aacOverFlow = null; var p = h.sample.unit.byteLength, g = Math.min(h.missing, p), v = p - g; h.sample.unit.set(f.subarray(0, g), v), u.samples.push(h.sample), o = h.missing } for (e = o, r = f.length; e < r - 1 && !n.isHeader(f, e); e++); if (e === o || (e < r - 1 ? (i = "AAC PES did not start with ADTS header,offset:" + e, a = !1) : (i = "no ADTS header found in AAC PES", a = !0), c.logger.warn("parsing error:" + i), this.observer.emit(l.Events.ERROR, l.Events.ERROR, { type: d.ErrorTypes.MEDIA_ERROR, details: d.ErrorDetails.FRAG_PARSING_ERROR, fatal: a, reason: i }), !a)) { if (n.initTrackConfig(u, this.observer, f, e, this.audioCodec), void 0 !== t.pts) s = t.pts; else { if (!h) return void c.logger.warn("[tsdemuxer]: AAC PES unknown PTS"); var m = n.getFrameDuration(u.samplerate); s = h.sample.pts + m } for (var y = 0; e < r;) { if (n.isHeader(f, e)) { if (e + 5 < r) { var A = n.appendFrame(u, f, e, s, y); if (A) { if (!A.missing) { e += A.length, y++; continue } this.aacOverFlow = A } } break } e++ } } }, e.parseMPEGPES = function (t) { var e = t.data, r = e.length, n = 0, a = 0, s = t.pts; if (void 0 !== s) for (; a < r;)if (i.isHeader(e, a)) { var o = i.appendFrame(this._audioTrack, e, a, s, n); if (!o) break; a += o.length, n++ } else a++; else c.logger.warn("[tsdemuxer]: MPEG PES unknown PTS") }, e.parseID3PES = function (t) { void 0 !== t.pts ? this._id3Track.samples.push(t) : c.logger.warn("[tsdemuxer]: ID3 PES unknown PTS") }, t }(); function p(t, e, r, n) { return { key: t, frame: !1, pts: e, dts: r, units: [], debug: n, length: 0 } } function g(t, e) { return (31 & t[e + 10]) << 8 | t[e + 11] } function v(t, e, r, n) { var i = { audio: -1, avc: -1, id3: -1, isAAC: !0 }, a = e + 3 + ((15 & t[e + 1]) << 8 | t[e + 2]) - 4; for (e += 12 + ((15 & t[e + 10]) << 8 | t[e + 11]); e < a;) { var s = (31 & t[e + 1]) << 8 | t[e + 2]; switch (t[e]) { case 207: if (!n) { c.logger.log("ADTS AAC with AES-128-CBC frame encryption found in unencrypted stream"); break } case 15: -1 === i.audio && (i.audio = s); break; case 21: -1 === i.id3 && (i.id3 = s); break; case 219: if (!n) { c.logger.log("H.264 with AES-128-CBC slice encryption found in unencrypted stream"); break } case 27: -1 === i.avc && (i.avc = s); break; case 3: case 4: r ? -1 === i.audio && (i.audio = s, i.isAAC = !1) : c.logger.log("MPEG audio found, not supported in this browser"); break; case 36: c.logger.warn("Unsupported HEVC stream type found") }e += 5 + ((15 & t[e + 3]) << 8 | t[e + 4]) } return i } function m(t) { var e, r, n, i, a, s = 0, o = t.data; if (!t || 0 === t.size) return null; for (; o[0].length < 19 && o.length > 1;) { var l = new Uint8Array(o[0].length + o[1].length); l.set(o[0]), l.set(o[1], o[0].length), o[0] = l, o.splice(1, 1) } if (1 === ((e = o[0])[0] << 16) + (e[1] << 8) + e[2]) { if ((r = (e[4] << 8) + e[5]) && r > t.size - 6) return null; var u = e[7]; 192 & u && (i = 536870912 * (14 & e[9]) + 4194304 * (255 & e[10]) + 16384 * (254 & e[11]) + 128 * (255 & e[12]) + (254 & e[13]) / 2, 64 & u ? i - (a = 536870912 * (14 & e[14]) + 4194304 * (255 & e[15]) + 16384 * (254 & e[16]) + 128 * (255 & e[17]) + (254 & e[18]) / 2) > 54e5 && (c.logger.warn(Math.round((i - a) / 9e4) + "s delta between PTS and DTS, align them"), i = a) : a = i); var d = (n = e[8]) + 9; if (t.size <= d) return null; t.size -= d; for (var h = new Uint8Array(t.size), f = 0, p = o.length; f < p; f++) { var g = (e = o[f]).byteLength; if (d) { if (d > g) { d -= g; continue } e = e.subarray(d), g -= d, d = 0 } h.set(e, s), s += g } return r && (r -= n + 3), { data: h, pts: i, dts: a, len: r } } return null } function y(t, e) { if (t.units.length && t.frame) { if (void 0 === t.pts) { var r = e.samples, n = r.length; if (!n) return void e.dropped++; var i = r[n - 1]; t.pts = i.pts, t.dts = i.dts } e.samples.push(t) } t.debug.length && c.logger.log(t.pts + "/" + t.dts + ":" + t.debug) } function A(t, e) { var r = t.length; if (r > 0) { if (e.pts >= t[r - 1].pts) t.push(e); else for (var n = r - 1; n >= 0; n--)if (e.pts < t[n].pts) { t.splice(n, 0, e); break } } else t.push(e) } function E(t) { for (var e = t.byteLength, r = [], n = 1; n < e - 2;)0 === t[n] && 0 === t[n + 1] && 3 === t[n + 2] ? (r.push(n + 2), n += 2) : n++; if (0 === r.length) return t; var i = e - r.length, a = new Uint8Array(i), s = 0; for (n = 0; n < i; s++, n++)s === r[0] && (s++, r.shift()), a[n] = t[s]; return a } f.minProbeByteLength = 188, e.default = f }, "./src/errors.ts":
/*!***********************!*\
    !*** ./src/errors.ts ***!
    \***********************/
/*! exports provided: ErrorTypes, ErrorDetails */function (t, e, r) { var n, i; r.r(e), r.d(e, "ErrorTypes", (function () { return n })), r.d(e, "ErrorDetails", (function () { return i })), function (t) { t.NETWORK_ERROR = "networkError", t.MEDIA_ERROR = "mediaError", t.KEY_SYSTEM_ERROR = "keySystemError", t.MUX_ERROR = "muxError", t.OTHER_ERROR = "otherError" }(n || (n = {})), function (t) { t.KEY_SYSTEM_NO_KEYS = "keySystemNoKeys", t.KEY_SYSTEM_NO_ACCESS = "keySystemNoAccess", t.KEY_SYSTEM_NO_SESSION = "keySystemNoSession", t.KEY_SYSTEM_LICENSE_REQUEST_FAILED = "keySystemLicenseRequestFailed", t.KEY_SYSTEM_NO_INIT_DATA = "keySystemNoInitData", t.MANIFEST_LOAD_ERROR = "manifestLoadError", t.MANIFEST_LOAD_TIMEOUT = "manifestLoadTimeOut", t.MANIFEST_PARSING_ERROR = "manifestParsingError", t.MANIFEST_INCOMPATIBLE_CODECS_ERROR = "manifestIncompatibleCodecsError", t.LEVEL_EMPTY_ERROR = "levelEmptyError", t.LEVEL_LOAD_ERROR = "levelLoadError", t.LEVEL_LOAD_TIMEOUT = "levelLoadTimeOut", t.LEVEL_SWITCH_ERROR = "levelSwitchError", t.AUDIO_TRACK_LOAD_ERROR = "audioTrackLoadError", t.AUDIO_TRACK_LOAD_TIMEOUT = "audioTrackLoadTimeOut", t.SUBTITLE_LOAD_ERROR = "subtitleTrackLoadError", t.SUBTITLE_TRACK_LOAD_TIMEOUT = "subtitleTrackLoadTimeOut", t.FRAG_LOAD_ERROR = "fragLoadError", t.FRAG_LOAD_TIMEOUT = "fragLoadTimeOut", t.FRAG_DECRYPT_ERROR = "fragDecryptError", t.FRAG_PARSING_ERROR = "fragParsingError", t.REMUX_ALLOC_ERROR = "remuxAllocError", t.KEY_LOAD_ERROR = "keyLoadError", t.KEY_LOAD_TIMEOUT = "keyLoadTimeOut", t.BUFFER_ADD_CODEC_ERROR = "bufferAddCodecError", t.BUFFER_INCOMPATIBLE_CODECS_ERROR = "bufferIncompatibleCodecsError", t.BUFFER_APPEND_ERROR = "bufferAppendError", t.BUFFER_APPENDING_ERROR = "bufferAppendingError", t.BUFFER_STALLED_ERROR = "bufferStalledError", t.BUFFER_FULL_ERROR = "bufferFullError", t.BUFFER_SEEK_OVER_HOLE = "bufferSeekOverHole", t.BUFFER_NUDGE_ON_STALL = "bufferNudgeOnStall", t.INTERNAL_EXCEPTION = "internalException", t.INTERNAL_ABORTED = "aborted", t.UNKNOWN = "unknown" }(i || (i = {})) }, "./src/events.ts":
/*!***********************!*\
    !*** ./src/events.ts ***!
    \***********************/
/*! exports provided: Events */function (t, e, r) { var n; r.r(e), r.d(e, "Events", (function () { return n })), function (t) { t.MEDIA_ATTACHING = "hlsMediaAttaching", t.MEDIA_ATTACHED = "hlsMediaAttached", t.MEDIA_DETACHING = "hlsMediaDetaching", t.MEDIA_DETACHED = "hlsMediaDetached", t.BUFFER_RESET = "hlsBufferReset", t.BUFFER_CODECS = "hlsBufferCodecs", t.BUFFER_CREATED = "hlsBufferCreated", t.BUFFER_APPENDING = "hlsBufferAppending", t.BUFFER_APPENDED = "hlsBufferAppended", t.BUFFER_EOS = "hlsBufferEos", t.BUFFER_FLUSHING = "hlsBufferFlushing", t.BUFFER_FLUSHED = "hlsBufferFlushed", t.MANIFEST_LOADING = "hlsManifestLoading", t.MANIFEST_LOADED = "hlsManifestLoaded", t.MANIFEST_PARSED = "hlsManifestParsed", t.LEVEL_SWITCHING = "hlsLevelSwitching", t.LEVEL_SWITCHED = "hlsLevelSwitched", t.LEVEL_LOADING = "hlsLevelLoading", t.LEVEL_LOADED = "hlsLevelLoaded", t.LEVEL_UPDATED = "hlsLevelUpdated", t.LEVEL_PTS_UPDATED = "hlsLevelPtsUpdated", t.LEVELS_UPDATED = "hlsLevelsUpdated", t.AUDIO_TRACKS_UPDATED = "hlsAudioTracksUpdated", t.AUDIO_TRACK_SWITCHING = "hlsAudioTrackSwitching", t.AUDIO_TRACK_SWITCHED = "hlsAudioTrackSwitched", t.AUDIO_TRACK_LOADING = "hlsAudioTrackLoading", t.AUDIO_TRACK_LOADED = "hlsAudioTrackLoaded", t.SUBTITLE_TRACKS_UPDATED = "hlsSubtitleTracksUpdated", t.SUBTITLE_TRACKS_CLEARED = "hlsSubtitleTracksCleared", t.SUBTITLE_TRACK_SWITCH = "hlsSubtitleTrackSwitch", t.SUBTITLE_TRACK_LOADING = "hlsSubtitleTrackLoading", t.SUBTITLE_TRACK_LOADED = "hlsSubtitleTrackLoaded", t.SUBTITLE_FRAG_PROCESSED = "hlsSubtitleFragProcessed", t.CUES_PARSED = "hlsCuesParsed", t.NON_NATIVE_TEXT_TRACKS_FOUND = "hlsNonNativeTextTracksFound", t.INIT_PTS_FOUND = "hlsInitPtsFound", t.FRAG_LOADING = "hlsFragLoading", t.FRAG_LOAD_EMERGENCY_ABORTED = "hlsFragLoadEmergencyAborted", t.FRAG_LOADED = "hlsFragLoaded", t.FRAG_DECRYPTED = "hlsFragDecrypted", t.FRAG_PARSING_INIT_SEGMENT = "hlsFragParsingInitSegment", t.FRAG_PARSING_USERDATA = "hlsFragParsingUserdata", t.FRAG_PARSING_METADATA = "hlsFragParsingMetadata", t.FRAG_PARSED = "hlsFragParsed", t.FRAG_BUFFERED = "hlsFragBuffered", t.FRAG_CHANGED = "hlsFragChanged", t.FPS_DROP = "hlsFpsDrop", t.FPS_DROP_LEVEL_CAPPING = "hlsFpsDropLevelCapping", t.ERROR = "hlsError", t.DESTROYING = "hlsDestroying", t.KEY_LOADING = "hlsKeyLoading", t.KEY_LOADED = "hlsKeyLoaded", t.LIVE_BACK_BUFFER_REACHED = "hlsLiveBackBufferReached", t.BACK_BUFFER_REACHED = "hlsBackBufferReached" }(n || (n = {})) }, "./src/hls.ts":
/*!********************!*\
    !*** ./src/hls.ts ***!
    \********************/
/*! exports provided: default */function (t, e, r) { r.r(e), r.d(e, "default", (function () { return y })); var n = r(/*! url-toolkit */"./node_modules/url-toolkit/src/url-toolkit.js"), i = r(/*! ./loader/playlist-loader */"./src/loader/playlist-loader.ts"), a = r(/*! ./loader/key-loader */"./src/loader/key-loader.ts"), s = r(/*! ./controller/id3-track-controller */"./src/controller/id3-track-controller.ts"), o = r(/*! ./controller/latency-controller */"./src/controller/latency-controller.ts"), l = r(/*! ./controller/level-controller */"./src/controller/level-controller.ts"), u = r(/*! ./controller/fragment-tracker */"./src/controller/fragment-tracker.ts"), c = r(/*! ./controller/stream-controller */"./src/controller/stream-controller.ts"), d = r(/*! ./is-supported */"./src/is-supported.ts"), h = r(/*! ./utils/logger */"./src/utils/logger.ts"), f = r(/*! ./config */"./src/config.ts"), p = r(/*! eventemitter3 */"./node_modules/eventemitter3/index.js"), g = r(/*! ./events */"./src/events.ts"), v = r(/*! ./errors */"./src/errors.ts"); function m(t, e) { for (var r = 0; r < e.length; r++) { var n = e[r]; n.enumerable = n.enumerable || !1, n.configurable = !0, "value" in n && (n.writable = !0), Object.defineProperty(t, n.key, n) } } var y = function () { function t(e) { void 0 === e && (e = {}), this.config = void 0, this.userConfig = void 0, this.coreComponents = void 0, this.networkControllers = void 0, this._emitter = new p.EventEmitter, this._autoLevelCapping = void 0, this.abrController = void 0, this.bufferController = void 0, this.capLevelController = void 0, this.latencyController = void 0, this.levelController = void 0, this.streamController = void 0, this.audioTrackController = void 0, this.subtitleTrackController = void 0, this.emeController = void 0, this.cmcdController = void 0, this._media = null, this.url = null; var r = this.config = Object(f.mergeConfig)(t.DefaultConfig, e); this.userConfig = e, Object(h.enableLogs)(r.debug), this._autoLevelCapping = -1, r.progressive && Object(f.enableStreamingMode)(r); var n = r.abrController, d = r.bufferController, g = r.capLevelController, v = r.fpsController, m = this.abrController = new n(this), y = this.bufferController = new d(this), A = this.capLevelController = new g(this), E = new v(this), T = new i.default(this), b = new a.default(this), k = new s.default(this), S = this.levelController = new l.default(this), _ = new u.FragmentTracker(this), C = this.streamController = new c.default(this, _); A.setStreamController(C), E.setStreamController(C); var L = [S, C]; this.networkControllers = L; var R = [T, b, m, y, A, E, k, _]; this.audioTrackController = this.createController(r.audioTrackController, null, L), this.createController(r.audioStreamController, _, L), this.subtitleTrackController = this.createController(r.subtitleTrackController, null, L), this.createController(r.subtitleStreamController, _, L), this.createController(r.timelineController, null, R), this.emeController = this.createController(r.emeController, null, R), this.cmcdController = this.createController(r.cmcdController, null, R), this.latencyController = this.createController(o.default, null, R), this.coreComponents = R } t.isSupported = function () { return Object(d.isSupported)() }; var e, r, y, A = t.prototype; return A.createController = function (t, e, r) { if (t) { var n = e ? new t(this, e) : new t(this); return r && r.push(n), n } return null }, A.on = function (t, e, r) { void 0 === r && (r = this), this._emitter.on(t, e, r) }, A.once = function (t, e, r) { void 0 === r && (r = this), this._emitter.once(t, e, r) }, A.removeAllListeners = function (t) { this._emitter.removeAllListeners(t) }, A.off = function (t, e, r, n) { void 0 === r && (r = this), this._emitter.off(t, e, r, n) }, A.listeners = function (t) { return this._emitter.listeners(t) }, A.emit = function (t, e, r) { return this._emitter.emit(t, e, r) }, A.trigger = function (t, e) { if (this.config.debug) return this.emit(t, t, e); try { return this.emit(t, t, e) } catch (e) { h.logger.error("An internal error happened while handling event " + t + '. Error message: "' + e.message + '". Here is a stacktrace:', e), this.trigger(g.Events.ERROR, { type: v.ErrorTypes.OTHER_ERROR, details: v.ErrorDetails.INTERNAL_EXCEPTION, fatal: !1, event: t, error: e }) } return !1 }, A.listenerCount = function (t) { return this._emitter.listenerCount(t) }, A.destroy = function () { h.logger.log("destroy"), this.trigger(g.Events.DESTROYING, void 0), this.detachMedia(), this.removeAllListeners(), this._autoLevelCapping = -1, this.url = null, this.networkControllers.forEach((function (t) { return t.destroy() })), this.networkControllers.length = 0, this.coreComponents.forEach((function (t) { return t.destroy() })), this.coreComponents.length = 0 }, A.attachMedia = function (t) { h.logger.log("attachMedia"), this._media = t, this.trigger(g.Events.MEDIA_ATTACHING, { media: t }) }, A.detachMedia = function () { h.logger.log("detachMedia"), this.trigger(g.Events.MEDIA_DETACHING, void 0), this._media = null }, A.loadSource = function (t) { this.stopLoad(); var e = this.media, r = this.url, i = this.url = n.buildAbsoluteURL(self.location.href, t, { alwaysNormalize: !0 }); h.logger.log("loadSource:" + i), e && r && r !== i && this.bufferController.hasSourceTypes() && (this.detachMedia(), this.attachMedia(e)), this.trigger(g.Events.MANIFEST_LOADING, { url: t }) }, A.startLoad = function (t) { void 0 === t && (t = -1), h.logger.log("startLoad(" + t + ")"), this.networkControllers.forEach((function (e) { e.startLoad(t) })) }, A.stopLoad = function () { h.logger.log("stopLoad"), this.networkControllers.forEach((function (t) { t.stopLoad() })) }, A.swapAudioCodec = function () { h.logger.log("swapAudioCodec"), this.streamController.swapAudioCodec() }, A.recoverMediaError = function () { h.logger.log("recoverMediaError"); var t = this._media; this.detachMedia(), t && this.attachMedia(t) }, A.removeLevel = function (t, e) { void 0 === e && (e = 0), this.levelController.removeLevel(t, e) }, e = t, y = [{ key: "version", get: function () { return "1.1.5" } }, { key: "Events", get: function () { return g.Events } }, { key: "ErrorTypes", get: function () { return v.ErrorTypes } }, { key: "ErrorDetails", get: function () { return v.ErrorDetails } }, { key: "DefaultConfig", get: function () { return t.defaultConfig ? t.defaultConfig : f.hlsDefaultConfig }, set: function (e) { t.defaultConfig = e } }], (r = [{ key: "levels", get: function () { var t = this.levelController.levels; return t || [] } }, { key: "currentLevel", get: function () { return this.streamController.currentLevel }, set: function (t) { h.logger.log("set currentLevel:" + t), this.loadLevel = t, this.abrController.clearTimer(), this.streamController.immediateLevelSwitch() } }, { key: "nextLevel", get: function () { return this.streamController.nextLevel }, set: function (t) { h.logger.log("set nextLevel:" + t), this.levelController.manualLevel = t, this.streamController.nextLevelSwitch() } }, { key: "loadLevel", get: function () { return this.levelController.level }, set: function (t) { h.logger.log("set loadLevel:" + t), this.levelController.manualLevel = t } }, { key: "nextLoadLevel", get: function () { return this.levelController.nextLoadLevel }, set: function (t) { this.levelController.nextLoadLevel = t } }, { key: "firstLevel", get: function () { return Math.max(this.levelController.firstLevel, this.minAutoLevel) }, set: function (t) { h.logger.log("set firstLevel:" + t), this.levelController.firstLevel = t } }, { key: "startLevel", get: function () { return this.levelController.startLevel }, set: function (t) { h.logger.log("set startLevel:" + t), -1 !== t && (t = Math.max(t, this.minAutoLevel)), this.levelController.startLevel = t } }, { key: "capLevelToPlayerSize", get: function () { return this.config.capLevelToPlayerSize }, set: function (t) { var e = !!t; e !== this.config.capLevelToPlayerSize && (e ? this.capLevelController.startCapping() : (this.capLevelController.stopCapping(), this.autoLevelCapping = -1, this.streamController.nextLevelSwitch()), this.config.capLevelToPlayerSize = e) } }, { key: "autoLevelCapping", get: function () { return this._autoLevelCapping }, set: function (t) { this._autoLevelCapping !== t && (h.logger.log("set autoLevelCapping:" + t), this._autoLevelCapping = t) } }, { key: "bandwidthEstimate", get: function () { var t = this.abrController.bwEstimator; return t ? t.getEstimate() : NaN } }, { key: "autoLevelEnabled", get: function () { return -1 === this.levelController.manualLevel } }, { key: "manualLevel", get: function () { return this.levelController.manualLevel } }, { key: "minAutoLevel", get: function () { var t = this.levels, e = this.config.minAutoBitrate; if (!t) return 0; for (var r = t.length, n = 0; n < r; n++)if (t[n].maxBitrate > e) return n; return 0 } }, { key: "maxAutoLevel", get: function () { var t = this.levels, e = this.autoLevelCapping; return -1 === e && t && t.length ? t.length - 1 : e } }, { key: "nextAutoLevel", get: function () { return Math.min(Math.max(this.abrController.nextAutoLevel, this.minAutoLevel), this.maxAutoLevel) }, set: function (t) { this.abrController.nextAutoLevel = Math.max(this.minAutoLevel, t) } }, { key: "audioTracks", get: function () { var t = this.audioTrackController; return t ? t.audioTracks : [] } }, { key: "audioTrack", get: function () { var t = this.audioTrackController; return t ? t.audioTrack : -1 }, set: function (t) { var e = this.audioTrackController; e && (e.audioTrack = t) } }, { key: "subtitleTracks", get: function () { var t = this.subtitleTrackController; return t ? t.subtitleTracks : [] } }, { key: "subtitleTrack", get: function () { var t = this.subtitleTrackController; return t ? t.subtitleTrack : -1 }, set: function (t) { var e = this.subtitleTrackController; e && (e.subtitleTrack = t) } }, { key: "media", get: function () { return this._media } }, { key: "subtitleDisplay", get: function () { var t = this.subtitleTrackController; return !!t && t.subtitleDisplay }, set: function (t) { var e = this.subtitleTrackController; e && (e.subtitleDisplay = t) } }, { key: "lowLatencyMode", get: function () { return this.config.lowLatencyMode }, set: function (t) { this.config.lowLatencyMode = t } }, { key: "liveSyncPosition", get: function () { return this.latencyController.liveSyncPosition } }, { key: "latency", get: function () { return this.latencyController.latency } }, { key: "maxLatency", get: function () { return this.latencyController.maxLatency } }, { key: "targetLatency", get: function () { return this.latencyController.targetLatency } }, { key: "drift", get: function () { return this.latencyController.drift } }, { key: "forceStartLoad", get: function () { return this.streamController.forceStartLoad } }]) && m(e.prototype, r), y && m(e, y), t }(); y.defaultConfig = void 0 }, "./src/is-supported.ts":
/*!*****************************!*\
    !*** ./src/is-supported.ts ***!
    \*****************************/
/*! exports provided: isSupported, changeTypeSupported */function (t, e, r) { r.r(e), r.d(e, "isSupported", (function () { return a })), r.d(e, "changeTypeSupported", (function () { return s })); var n = r(/*! ./utils/mediasource-helper */"./src/utils/mediasource-helper.ts"); function i() { return self.SourceBuffer || self.WebKitSourceBuffer } function a() { var t = Object(n.getMediaSource)(); if (!t) return !1; var e = i(), r = t && "function" == typeof t.isTypeSupported && t.isTypeSupported('video/mp4; codecs="avc1.42E01E,mp4a.40.2"'), a = !e || e.prototype && "function" == typeof e.prototype.appendBuffer && "function" == typeof e.prototype.remove; return !!r && !!a } function s() { var t, e = i(); return "function" == typeof (null == e || null === (t = e.prototype) || void 0 === t ? void 0 : t.changeType) } }, "./src/loader/fragment-loader.ts":
/*!***************************************!*\
    !*** ./src/loader/fragment-loader.ts ***!
    \***************************************/
/*! exports provided: default, LoadError */function (t, e, r) { r.r(e), r.d(e, "default", (function () { return d })), r.d(e, "LoadError", (function () { return f })); var n = r(/*! ./src/polyfills/number */"./src/polyfills/number.ts"), i = r(/*! ../errors */"./src/errors.ts"); function a(t) { var e = "function" == typeof Map ? new Map : void 0; return a = function (t) { if (null === t || (r = t, -1 === Function.toString.call(r).indexOf("[native code]"))) return t; var r; if ("function" != typeof t) throw new TypeError("Super expression must either be null or a function"); if (void 0 !== e) { if (e.has(t)) return e.get(t); e.set(t, n) } function n() { return s(t, arguments, u(this).constructor) } return n.prototype = Object.create(t.prototype, { constructor: { value: n, enumerable: !1, writable: !0, configurable: !0 } }), l(n, t) }, a(t) } function s(t, e, r) { return s = o() ? Reflect.construct : function (t, e, r) { var n = [null]; n.push.apply(n, e); var i = new (Function.bind.apply(t, n)); return r && l(i, r.prototype), i }, s.apply(null, arguments) } function o() { if ("undefined" == typeof Reflect || !Reflect.construct) return !1; if (Reflect.construct.sham) return !1; if ("function" == typeof Proxy) return !0; try { return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], (function () { }))), !0 } catch (t) { return !1 } } function l(t, e) { return l = Object.setPrototypeOf || function (t, e) { return t.__proto__ = e, t }, l(t, e) } function u(t) { return u = Object.setPrototypeOf ? Object.getPrototypeOf : function (t) { return t.__proto__ || Object.getPrototypeOf(t) }, u(t) } var c = Math.pow(2, 17), d = function () { function t(t) { this.config = void 0, this.loader = null, this.partLoadTimeout = -1, this.config = t } var e = t.prototype; return e.destroy = function () { this.loader && (this.loader.destroy(), this.loader = null) }, e.abort = function () { this.loader && this.loader.abort() }, e.load = function (t, e) { var r = this, n = t.url; if (!n) return Promise.reject(new f({ type: i.ErrorTypes.NETWORK_ERROR, details: i.ErrorDetails.FRAG_LOAD_ERROR, fatal: !1, frag: t, networkDetails: null }, "Fragment does not have a " + (n ? "part list" : "url"))); this.abort(); var a = this.config, s = a.fLoader, o = a.loader; return new Promise((function (n, l) { r.loader && r.loader.destroy(); var u = r.loader = t.loader = s ? new s(a) : new o(a), d = h(t), p = { timeout: a.fragLoadingTimeOut, maxRetry: 0, retryDelay: 0, maxRetryDelay: a.fragLoadingMaxRetryTimeout, highWaterMark: c }; t.stats = u.stats, u.load(d, p, { onSuccess: function (e, i, a, s) { r.resetLoader(t, u), n({ frag: t, part: null, payload: e.data, networkDetails: s }) }, onError: function (e, n, a) { r.resetLoader(t, u), l(new f({ type: i.ErrorTypes.NETWORK_ERROR, details: i.ErrorDetails.FRAG_LOAD_ERROR, fatal: !1, frag: t, response: e, networkDetails: a })) }, onAbort: function (e, n, a) { r.resetLoader(t, u), l(new f({ type: i.ErrorTypes.NETWORK_ERROR, details: i.ErrorDetails.INTERNAL_ABORTED, fatal: !1, frag: t, networkDetails: a })) }, onTimeout: function (e, n, a) { r.resetLoader(t, u), l(new f({ type: i.ErrorTypes.NETWORK_ERROR, details: i.ErrorDetails.FRAG_LOAD_TIMEOUT, fatal: !1, frag: t, networkDetails: a })) }, onProgress: function (r, n, i, a) { e && e({ frag: t, part: null, payload: i, networkDetails: a }) } }) })) }, e.loadPart = function (t, e, r) { var n = this; this.abort(); var a = this.config, s = a.fLoader, o = a.loader; return new Promise((function (l, u) { n.loader && n.loader.destroy(); var d = n.loader = t.loader = s ? new s(a) : new o(a), p = h(t, e), g = { timeout: a.fragLoadingTimeOut, maxRetry: 0, retryDelay: 0, maxRetryDelay: a.fragLoadingMaxRetryTimeout, highWaterMark: c }; e.stats = d.stats, d.load(p, g, { onSuccess: function (i, a, s, o) { n.resetLoader(t, d), n.updateStatsFromPart(t, e); var u = { frag: t, part: e, payload: i.data, networkDetails: o }; r(u), l(u) }, onError: function (r, a, s) { n.resetLoader(t, d), u(new f({ type: i.ErrorTypes.NETWORK_ERROR, details: i.ErrorDetails.FRAG_LOAD_ERROR, fatal: !1, frag: t, part: e, response: r, networkDetails: s })) }, onAbort: function (r, a, s) { t.stats.aborted = e.stats.aborted, n.resetLoader(t, d), u(new f({ type: i.ErrorTypes.NETWORK_ERROR, details: i.ErrorDetails.INTERNAL_ABORTED, fatal: !1, frag: t, part: e, networkDetails: s })) }, onTimeout: function (r, a, s) { n.resetLoader(t, d), u(new f({ type: i.ErrorTypes.NETWORK_ERROR, details: i.ErrorDetails.FRAG_LOAD_TIMEOUT, fatal: !1, frag: t, part: e, networkDetails: s })) } }) })) }, e.updateStatsFromPart = function (t, e) { var r = t.stats, n = e.stats, i = n.total; if (r.loaded += n.loaded, i) { var a = Math.round(t.duration / e.duration), s = Math.min(Math.round(r.loaded / i), a), o = (a - s) * Math.round(r.loaded / s); r.total = r.loaded + o } else r.total = Math.max(r.loaded, r.total); var l = r.loading, u = n.loading; l.start ? l.first += u.first - u.start : (l.start = u.start, l.first = u.first), l.end = u.end }, e.resetLoader = function (t, e) { t.loader = null, this.loader === e && (self.clearTimeout(this.partLoadTimeout), this.loader = null), e.destroy() }, t }(); function h(t, e) { void 0 === e && (e = null); var r = e || t, i = { frag: t, part: e, responseType: "arraybuffer", url: r.url, headers: {}, rangeStart: 0, rangeEnd: 0 }, a = r.byteRangeStartOffset, s = r.byteRangeEndOffset; return Object(n.isFiniteNumber)(a) && Object(n.isFiniteNumber)(s) && (i.rangeStart = a, i.rangeEnd = s), i } var f = function (t) { var e, r; function n(e) { for (var r, n = arguments.length, i = new Array(n > 1 ? n - 1 : 0), a = 1; a < n; a++)i[a - 1] = arguments[a]; return (r = t.call.apply(t, [this].concat(i)) || this).data = void 0, r.data = e, r } return r = t, (e = n).prototype = Object.create(r.prototype), e.prototype.constructor = e, l(e, r), n }(a(Error)) }, "./src/loader/fragment.ts":
/*!********************************!*\
    !*** ./src/loader/fragment.ts ***!
    \********************************/
/*! exports provided: ElementaryStreamTypes, BaseSegment, Fragment, Part */function (t, e, r) { r.r(e), r.d(e, "ElementaryStreamTypes", (function () { return n })), r.d(e, "BaseSegment", (function () { return f })), r.d(e, "Fragment", (function () { return p })), r.d(e, "Part", (function () { return g })); var n, i = r(/*! ./src/polyfills/number */"./src/polyfills/number.ts"), a = r(/*! url-toolkit */"./node_modules/url-toolkit/src/url-toolkit.js"), s = r(/*! ../utils/logger */"./src/utils/logger.ts"), o = r(/*! ./level-key */"./src/loader/level-key.ts"), l = r(/*! ./load-stats */"./src/loader/load-stats.ts"); function u(t, e) { t.prototype = Object.create(e.prototype), t.prototype.constructor = t, c(t, e) } function c(t, e) { return c = Object.setPrototypeOf || function (t, e) { return t.__proto__ = e, t }, c(t, e) } function d(t, e) { for (var r = 0; r < e.length; r++) { var n = e[r]; n.enumerable = n.enumerable || !1, n.configurable = !0, "value" in n && (n.writable = !0), Object.defineProperty(t, n.key, n) } } function h(t, e, r) { return e && d(t.prototype, e), r && d(t, r), t } !function (t) { t.AUDIO = "audio", t.VIDEO = "video", t.AUDIOVIDEO = "audiovideo" }(n || (n = {})); var f = function () { function t(t) { var e; this._byteRange = null, this._url = null, this.baseurl = void 0, this.relurl = void 0, this.elementaryStreams = ((e = {})[n.AUDIO] = null, e[n.VIDEO] = null, e[n.AUDIOVIDEO] = null, e), this.baseurl = t } return t.prototype.setByteRange = function (t, e) { var r = t.split("@", 2), n = []; 1 === r.length ? n[0] = e ? e.byteRangeEndOffset : 0 : n[0] = parseInt(r[1]), n[1] = parseInt(r[0]) + n[0], this._byteRange = n }, h(t, [{ key: "byteRange", get: function () { return this._byteRange ? this._byteRange : [] } }, { key: "byteRangeStartOffset", get: function () { return this.byteRange[0] } }, { key: "byteRangeEndOffset", get: function () { return this.byteRange[1] } }, { key: "url", get: function () { return !this._url && this.baseurl && this.relurl && (this._url = Object(a.buildAbsoluteURL)(this.baseurl, this.relurl, { alwaysNormalize: !0 })), this._url || "" }, set: function (t) { this._url = t } }]), t }(), p = function (t) { function e(e, r) { var n; return (n = t.call(this, r) || this)._decryptdata = null, n.rawProgramDateTime = null, n.programDateTime = null, n.tagList = [], n.duration = 0, n.sn = 0, n.levelkey = void 0, n.type = void 0, n.loader = null, n.level = -1, n.cc = 0, n.startPTS = void 0, n.endPTS = void 0, n.appendedPTS = void 0, n.startDTS = void 0, n.endDTS = void 0, n.start = 0, n.deltaPTS = void 0, n.maxStartPTS = void 0, n.minEndPTS = void 0, n.stats = new l.LoadStats, n.urlId = 0, n.data = void 0, n.bitrateTest = !1, n.title = null, n.initSegment = null, n.type = e, n } u(e, t); var r = e.prototype; return r.createInitializationVector = function (t) { for (var e = new Uint8Array(16), r = 12; r < 16; r++)e[r] = t >> 8 * (15 - r) & 255; return e }, r.setDecryptDataFromLevelKey = function (t, e) { var r = t; return "AES-128" === (null == t ? void 0 : t.method) && t.uri && !t.iv && ((r = o.LevelKey.fromURI(t.uri)).method = t.method, r.iv = this.createInitializationVector(e), r.keyFormat = "identity"), r }, r.setElementaryStreamInfo = function (t, e, r, n, i, a) { void 0 === a && (a = !1); var s = this.elementaryStreams, o = s[t]; o ? (o.startPTS = Math.min(o.startPTS, e), o.endPTS = Math.max(o.endPTS, r), o.startDTS = Math.min(o.startDTS, n), o.endDTS = Math.max(o.endDTS, i)) : s[t] = { startPTS: e, endPTS: r, startDTS: n, endDTS: i, partial: a } }, r.clearElementaryStreamInfo = function () { var t = this.elementaryStreams; t[n.AUDIO] = null, t[n.VIDEO] = null, t[n.AUDIOVIDEO] = null }, h(e, [{ key: "decryptdata", get: function () { if (!this.levelkey && !this._decryptdata) return null; if (!this._decryptdata && this.levelkey) { var t = this.sn; "number" != typeof t && (this.levelkey && "AES-128" === this.levelkey.method && !this.levelkey.iv && s.logger.warn('missing IV for initialization segment with method="' + this.levelkey.method + '" - compliance issue'), t = 0), this._decryptdata = this.setDecryptDataFromLevelKey(this.levelkey, t) } return this._decryptdata } }, { key: "end", get: function () { return this.start + this.duration } }, { key: "endProgramDateTime", get: function () { if (null === this.programDateTime) return null; if (!Object(i.isFiniteNumber)(this.programDateTime)) return null; var t = Object(i.isFiniteNumber)(this.duration) ? this.duration : 0; return this.programDateTime + 1e3 * t } }, { key: "encrypted", get: function () { var t; return !(null === (t = this.decryptdata) || void 0 === t || !t.keyFormat || !this.decryptdata.uri) } }]), e }(f), g = function (t) { function e(e, r, n, i, a) { var s; (s = t.call(this, n) || this).fragOffset = 0, s.duration = 0, s.gap = !1, s.independent = !1, s.relurl = void 0, s.fragment = void 0, s.index = void 0, s.stats = new l.LoadStats, s.duration = e.decimalFloatingPoint("DURATION"), s.gap = e.bool("GAP"), s.independent = e.bool("INDEPENDENT"), s.relurl = e.enumeratedString("URI"), s.fragment = r, s.index = i; var o = e.enumeratedString("BYTERANGE"); return o && s.setByteRange(o, a), a && (s.fragOffset = a.fragOffset + a.duration), s } return u(e, t), h(e, [{ key: "start", get: function () { return this.fragment.start + this.fragOffset } }, { key: "end", get: function () { return this.start + this.duration } }, { key: "loaded", get: function () { var t = this.elementaryStreams; return !!(t.audio || t.video || t.audiovideo) } }]), e }(f) }, "./src/loader/key-loader.ts":
/*!**********************************!*\
    !*** ./src/loader/key-loader.ts ***!
    \**********************************/
/*! exports provided: default */function (t, e, r) { r.r(e), r.d(e, "default", (function () { return s })); var n = r(/*! ../events */"./src/events.ts"), i = r(/*! ../errors */"./src/errors.ts"), a = r(/*! ../utils/logger */"./src/utils/logger.ts"), s = function () { function t(t) { this.hls = void 0, this.loaders = {}, this.decryptkey = null, this.decrypturl = null, this.hls = t, this._registerListeners() } var e = t.prototype; return e._registerListeners = function () { this.hls.on(n.Events.KEY_LOADING, this.onKeyLoading, this) }, e._unregisterListeners = function () { this.hls.off(n.Events.KEY_LOADING, this.onKeyLoading) }, e.destroy = function () { for (var t in this._unregisterListeners(), this.loaders) { var e = this.loaders[t]; e && e.destroy() } this.loaders = {} }, e.onKeyLoading = function (t, e) { var r = e.frag, i = r.type, s = this.loaders[i]; if (r.decryptdata) { var o = r.decryptdata.uri; if (o !== this.decrypturl || null === this.decryptkey) { var l = this.hls.config; if (s && (a.logger.warn("abort previous key loader for type:" + i), s.abort()), !o) return void a.logger.warn("key uri is falsy"); var u = l.loader, c = r.loader = this.loaders[i] = new u(l); this.decrypturl = o, this.decryptkey = null; var d = { url: o, frag: r, responseType: "arraybuffer" }, h = { timeout: l.fragLoadingTimeOut, maxRetry: 0, retryDelay: l.fragLoadingRetryDelay, maxRetryDelay: l.fragLoadingMaxRetryTimeout, highWaterMark: 0 }, f = { onSuccess: this.loadsuccess.bind(this), onError: this.loaderror.bind(this), onTimeout: this.loadtimeout.bind(this) }; c.load(d, h, f) } else this.decryptkey && (r.decryptdata.key = this.decryptkey, this.hls.trigger(n.Events.KEY_LOADED, { frag: r })) } else a.logger.warn("Missing decryption data on fragment in onKeyLoading") }, e.loadsuccess = function (t, e, r) { var i = r.frag; i.decryptdata ? (this.decryptkey = i.decryptdata.key = new Uint8Array(t.data), i.loader = null, delete this.loaders[i.type], this.hls.trigger(n.Events.KEY_LOADED, { frag: i })) : a.logger.error("after key load, decryptdata unset") }, e.loaderror = function (t, e) { var r = e.frag, a = r.loader; a && a.abort(), delete this.loaders[r.type], this.hls.trigger(n.Events.ERROR, { type: i.ErrorTypes.NETWORK_ERROR, details: i.ErrorDetails.KEY_LOAD_ERROR, fatal: !1, frag: r, response: t }) }, e.loadtimeout = function (t, e) { var r = e.frag, a = r.loader; a && a.abort(), delete this.loaders[r.type], this.hls.trigger(n.Events.ERROR, { type: i.ErrorTypes.NETWORK_ERROR, details: i.ErrorDetails.KEY_LOAD_TIMEOUT, fatal: !1, frag: r }) }, t }() }, "./src/loader/level-details.ts":
/*!*************************************!*\
    !*** ./src/loader/level-details.ts ***!
    \*************************************/
/*! exports provided: LevelDetails */function (t, e, r) { r.r(e), r.d(e, "LevelDetails", (function () { return a })); var n = r(/*! ./src/polyfills/number */"./src/polyfills/number.ts"); function i(t, e) { for (var r = 0; r < e.length; r++) { var n = e[r]; n.enumerable = n.enumerable || !1, n.configurable = !0, "value" in n && (n.writable = !0), Object.defineProperty(t, n.key, n) } } var a = function () { function t(t) { this.PTSKnown = !1, this.alignedSliding = !1, this.averagetargetduration = void 0, this.endCC = 0, this.endSN = 0, this.fragments = void 0, this.fragmentHint = void 0, this.partList = null, this.live = !0, this.ageHeader = 0, this.advancedDateTime = void 0, this.updated = !0, this.advanced = !0, this.availabilityDelay = void 0, this.misses = 0, this.needSidxRanges = !1, this.startCC = 0, this.startSN = 0, this.startTimeOffset = null, this.targetduration = 0, this.totalduration = 0, this.type = null, this.url = void 0, this.m3u8 = "", this.version = null, this.canBlockReload = !1, this.canSkipUntil = 0, this.canSkipDateRanges = !1, this.skippedSegments = 0, this.recentlyRemovedDateranges = void 0, this.partHoldBack = 0, this.holdBack = 0, this.partTarget = 0, this.preloadHint = void 0, this.renditionReports = void 0, this.tuneInGoal = 0, this.deltaUpdateFailed = void 0, this.driftStartTime = 0, this.driftEndTime = 0, this.driftStart = 0, this.driftEnd = 0, this.fragments = [], this.url = t } var e, r, a; return t.prototype.reloaded = function (t) { if (!t) return this.advanced = !0, void (this.updated = !0); var e = this.lastPartSn - t.lastPartSn, r = this.lastPartIndex - t.lastPartIndex; this.updated = this.endSN !== t.endSN || !!r || !!e, this.advanced = this.endSN > t.endSN || e > 0 || 0 === e && r > 0, this.updated || this.advanced ? this.misses = Math.floor(.6 * t.misses) : this.misses = t.misses + 1, this.availabilityDelay = t.availabilityDelay }, e = t, (r = [{ key: "hasProgramDateTime", get: function () { return !!this.fragments.length && Object(n.isFiniteNumber)(this.fragments[this.fragments.length - 1].programDateTime) } }, { key: "levelTargetDuration", get: function () { return this.averagetargetduration || this.targetduration || 10 } }, { key: "drift", get: function () { var t = this.driftEndTime - this.driftStartTime; return t > 0 ? 1e3 * (this.driftEnd - this.driftStart) / t : 1 } }, { key: "edge", get: function () { return this.partEnd || this.fragmentEnd } }, { key: "partEnd", get: function () { var t; return null !== (t = this.partList) && void 0 !== t && t.length ? this.partList[this.partList.length - 1].end : this.fragmentEnd } }, { key: "fragmentEnd", get: function () { var t; return null !== (t = this.fragments) && void 0 !== t && t.length ? this.fragments[this.fragments.length - 1].end : 0 } }, { key: "age", get: function () { return this.advancedDateTime ? Math.max(Date.now() - this.advancedDateTime, 0) / 1e3 : 0 } }, { key: "lastPartIndex", get: function () { var t; return null !== (t = this.partList) && void 0 !== t && t.length ? this.partList[this.partList.length - 1].index : -1 } }, { key: "lastPartSn", get: function () { var t; return null !== (t = this.partList) && void 0 !== t && t.length ? this.partList[this.partList.length - 1].fragment.sn : this.endSN } }]) && i(e.prototype, r), a && i(e, a), t }() }, "./src/loader/level-key.ts":
/*!*********************************!*\
    !*** ./src/loader/level-key.ts ***!
    \*********************************/
/*! exports provided: LevelKey */function (t, e, r) { r.r(e), r.d(e, "LevelKey", (function () { return a })); var n = r(/*! url-toolkit */"./node_modules/url-toolkit/src/url-toolkit.js"); function i(t, e) { for (var r = 0; r < e.length; r++) { var n = e[r]; n.enumerable = n.enumerable || !1, n.configurable = !0, "value" in n && (n.writable = !0), Object.defineProperty(t, n.key, n) } } var a = function () { function t(t, e) { this._uri = null, this.method = null, this.keyFormat = null, this.keyFormatVersions = null, this.keyID = null, this.key = null, this.iv = null, this._uri = e ? Object(n.buildAbsoluteURL)(t, e, { alwaysNormalize: !0 }) : t } var e, r, a; return t.fromURL = function (e, r) { return new t(e, r) }, t.fromURI = function (e) { return new t(e) }, e = t, (r = [{ key: "uri", get: function () { return this._uri } }]) && i(e.prototype, r), a && i(e, a), t }() }, "./src/loader/load-stats.ts":
/*!**********************************!*\
    !*** ./src/loader/load-stats.ts ***!
    \**********************************/
/*! exports provided: LoadStats */function (t, e, r) { r.r(e), r.d(e, "LoadStats", (function () { return n })); var n = function () { this.aborted = !1, this.loaded = 0, this.retry = 0, this.total = 0, this.chunkCount = 0, this.bwEstimate = 0, this.loading = { start: 0, first: 0, end: 0 }, this.parsing = { start: 0, end: 0 }, this.buffering = { start: 0, first: 0, end: 0 } } }, "./src/loader/m3u8-parser.ts":
/*!***********************************!*\
    !*** ./src/loader/m3u8-parser.ts ***!
    \***********************************/
/*! exports provided: default */function (t, e, r) { r.r(e), r.d(e, "default", (function () { return v })); var n = r(/*! ./src/polyfills/number */"./src/polyfills/number.ts"), i = r(/*! url-toolkit */"./node_modules/url-toolkit/src/url-toolkit.js"), a = r(/*! ./fragment */"./src/loader/fragment.ts"), s = r(/*! ./level-details */"./src/loader/level-details.ts"), o = r(/*! ./level-key */"./src/loader/level-key.ts"), l = r(/*! ../utils/attr-list */"./src/utils/attr-list.ts"), u = r(/*! ../utils/logger */"./src/utils/logger.ts"), c = r(/*! ../utils/codecs */"./src/utils/codecs.ts"), d = /#EXT-X-STREAM-INF:([^\r\n]*)(?:[\r\n](?:#[^\r\n]*)?)*([^\r\n]+)|#EXT-X-SESSION-DATA:([^\r\n]*)[\r\n]+/g, h = /#EXT-X-MEDIA:(.*)/g, f = new RegExp([/#EXTINF:\s*(\d*(?:\.\d+)?)(?:,(.*)\s+)?/.source, /(?!#) *(\S[\S ]*)/.source, /#EXT-X-BYTERANGE:*(.+)/.source, /#EXT-X-PROGRAM-DATE-TIME:(.+)/.source, /#.*/.source].join("|"), "g"), p = new RegExp([/#(EXTM3U)/.source, /#EXT-X-(PLAYLIST-TYPE):(.+)/.source, /#EXT-X-(MEDIA-SEQUENCE): *(\d+)/.source, /#EXT-X-(SKIP):(.+)/.source, /#EXT-X-(TARGETDURATION): *(\d+)/.source, /#EXT-X-(KEY):(.+)/.source, /#EXT-X-(START):(.+)/.source, /#EXT-X-(ENDLIST)/.source, /#EXT-X-(DISCONTINUITY-SEQ)UENCE: *(\d+)/.source, /#EXT-X-(DIS)CONTINUITY/.source, /#EXT-X-("0.4.2-cdnvideo"):(\d+)/.source, /#EXT-X-(MAP):(.+)/.source, /#EXT-X-(SERVER-CONTROL):(.+)/.source, /#EXT-X-(PART-INF):(.+)/.source, /#EXT-X-(GAP)/.source, /#EXT-X-(BITRATE):\s*(\d+)/.source, /#EXT-X-(PART):(.+)/.source, /#EXT-X-(PRELOAD-HINT):(.+)/.source, /#EXT-X-(RENDITION-REPORT):(.+)/.source, /(#)([^:]*):(.*)/.source, /(#)(.*)(?:.*)\r?\n?/.source].join("|")), g = /\.(mp4|m4s|m4v|m4a)$/i, v = function () { function t() { } return t.findGroup = function (t, e) { for (var r = 0; r < t.length; r++) { var n = t[r]; if (n.id === e) return n } }, t.convertAVC1ToAVCOTI = function (t) { var e = t.split("."); if (e.length > 2) { var r = e.shift() + "."; return r += parseInt(e.shift()).toString(16), r += ("000" + parseInt(e.shift()).toString(16)).substr(-4) } return t }, t.resolve = function (t, e) { return i.buildAbsoluteURL(e, t, { alwaysNormalize: !0 }) }, t.parseMasterPlaylist = function (e, r) { var n, i = [], a = {}, s = !1; for (d.lastIndex = 0; null != (n = d.exec(e));)if (n[1]) { var o = new l.AttrList(n[1]), u = { attrs: o, bitrate: o.decimalInteger("AVERAGE-BANDWIDTH") || o.decimalInteger("BANDWIDTH"), name: o.NAME, url: t.resolve(n[2], r) }, c = o.decimalResolution("RESOLUTION"); c && (u.width = c.width, u.height = c.height), m((o.CODECS || "").split(/[ ,]+/).filter((function (t) { return t })), u), u.videoCodec && -1 !== u.videoCodec.indexOf("avc1") && (u.videoCodec = t.convertAVC1ToAVCOTI(u.videoCodec)), i.push(u) } else if (n[3]) { var h = new l.AttrList(n[3]); h["DATA-ID"] && (s = !0, a[h["DATA-ID"]] = h) } return { levels: i, sessionData: s ? a : null } }, t.parseMasterPlaylistMedia = function (e, r, n, i) { var a; void 0 === i && (i = []); var s = [], o = 0; for (h.lastIndex = 0; null !== (a = h.exec(e));) { var u = new l.AttrList(a[1]); if (u.TYPE === n) { var c = { attrs: u, bitrate: 0, id: o++, groupId: u["GROUP-ID"], instreamId: u["INSTREAM-ID"], name: u.NAME || u.LANGUAGE || "", type: n, default: u.bool("DEFAULT"), autoselect: u.bool("AUTOSELECT"), forced: u.bool("FORCED"), lang: u.LANGUAGE, url: u.URI ? t.resolve(u.URI, r) : "" }; if (i.length) { var d = t.findGroup(i, c.groupId) || i[0]; y(c, d, "audioCodec"), y(c, d, "textCodec") } s.push(c) } } return s }, t.parseLevelPlaylist = function (t, e, r, c, d) { var h, v, m, y = new s.LevelDetails(e), E = y.fragments, T = null, b = 0, k = 0, S = 0, _ = 0, C = null, L = new a.Fragment(c, e), R = -1, D = !1; for (f.lastIndex = 0, y.m3u8 = t; null !== (h = f.exec(t));) { D && (D = !1, (L = new a.Fragment(c, e)).start = S, L.sn = b, L.cc = _, L.level = r, T && (L.initSegment = T, L.rawProgramDateTime = T.rawProgramDateTime)); var I = h[1]; if (I) { L.duration = parseFloat(I); var O = (" " + h[2]).slice(1); L.title = O || null, L.tagList.push(O ? ["INF", I, O] : ["INF", I]) } else if (h[3]) Object(n.isFiniteNumber)(L.duration) && (L.start = S, m && (L.levelkey = m), L.sn = b, L.level = r, L.cc = _, L.urlId = d, E.push(L), L.relurl = (" " + h[3]).slice(1), A(L, C), C = L, S += L.duration, b++, k = 0, D = !0); else if (h[4]) { var w = (" " + h[4]).slice(1); C ? L.setByteRange(w, C) : L.setByteRange(w) } else if (h[5]) L.rawProgramDateTime = (" " + h[5]).slice(1), L.tagList.push(["PROGRAM-DATE-TIME", L.rawProgramDateTime]), -1 === R && (R = E.length); else { if (!(h = h[0].match(p))) { u.logger.warn("No matches on slow regex match for level playlist!"); continue } for (v = 1; v < h.length && void 0 === h[v]; v++); var P = (" " + h[v]).slice(1), x = (" " + h[v + 1]).slice(1), N = h[v + 2] ? (" " + h[v + 2]).slice(1) : ""; switch (P) { case "PLAYLIST-TYPE": y.type = x.toUpperCase(); break; case "MEDIA-SEQUENCE": b = y.startSN = parseInt(x); break; case "SKIP": var M = new l.AttrList(x), F = M.decimalInteger("SKIPPED-SEGMENTS"); if (Object(n.isFiniteNumber)(F)) { y.skippedSegments = F; for (var B = F; B--;)E.unshift(null); b += F } var U = M.enumeratedString("RECENTLY-REMOVED-DATERANGES"); U && (y.recentlyRemovedDateranges = U.split("\t")); break; case "TARGETDURATION": y.targetduration = parseFloat(x); break; case '"0.4.2-cdnvideo"': y.version = parseInt(x); break; case "EXTM3U": break; case "ENDLIST": y.live = !1; break; case "#": (x || N) && L.tagList.push(N ? [x, N] : [x]); break; case "DIS": _++; case "GAP": L.tagList.push([P]); break; case "BITRATE": L.tagList.push([P, x]); break; case "DISCONTINUITY-SEQ": _ = parseInt(x); break; case "KEY": var j, G = new l.AttrList(x), V = G.enumeratedString("METHOD"), K = G.URI, H = G.hexadecimalInteger("IV"), Y = G.enumeratedString("KEYFORMATVERSIONS"), W = G.enumeratedString("KEYID"), $ = null != (j = G.enumeratedString("KEYFORMAT")) ? j : "identity"; if (["com.apple.streamingkeydelivery", "com.microsoft.playready", "urn:uuid:edef8ba9-79d6-4ace-a3c8-27dcd51d21ed", "com.widevine"].indexOf($) > -1) { u.logger.warn("Keyformat " + $ + " is not supported from the manifest"); continue } if ("identity" !== $) continue; V && (m = o.LevelKey.fromURL(e, K), K && ["AES-128", "SAMPLE-AES", "SAMPLE-AES-CENC"].indexOf(V) >= 0 && (m.method = V, m.keyFormat = $, W && (m.keyID = W), Y && (m.keyFormatVersions = Y), m.iv = H)); break; case "START": var z = new l.AttrList(x).decimalFloatingPoint("TIME-OFFSET"); Object(n.isFiniteNumber)(z) && (y.startTimeOffset = z); break; case "MAP": var q = new l.AttrList(x); L.relurl = q.URI, q.BYTERANGE && L.setByteRange(q.BYTERANGE), L.level = r, L.sn = "initSegment", m && (L.levelkey = m), L.initSegment = null, T = L, D = !0; break; case "SERVER-CONTROL": var X = new l.AttrList(x); y.canBlockReload = X.bool("CAN-BLOCK-RELOAD"), y.canSkipUntil = X.optionalFloat("CAN-SKIP-UNTIL", 0), y.canSkipDateRanges = y.canSkipUntil > 0 && X.bool("CAN-SKIP-DATERANGES"), y.partHoldBack = X.optionalFloat("PART-HOLD-BACK", 0), y.holdBack = X.optionalFloat("HOLD-BACK", 0); break; case "PART-INF": var Z = new l.AttrList(x); y.partTarget = Z.decimalFloatingPoint("PART-TARGET"); break; case "PART": var Q = y.partList; Q || (Q = y.partList = []); var J = k > 0 ? Q[Q.length - 1] : void 0, tt = k++, et = new a.Part(new l.AttrList(x), L, e, tt, J); Q.push(et), L.duration += et.duration; break; case "PRELOAD-HINT": var rt = new l.AttrList(x); y.preloadHint = rt; break; case "RENDITION-REPORT": var nt = new l.AttrList(x); y.renditionReports = y.renditionReports || [], y.renditionReports.push(nt); break; default: u.logger.warn("line parsed but not handled: " + h) } } } C && !C.relurl ? (E.pop(), S -= C.duration, y.partList && (y.fragmentHint = C)) : y.partList && (A(L, C), L.cc = _, y.fragmentHint = L); var it = E.length, at = E[0], st = E[it - 1]; if ((S += y.skippedSegments * y.targetduration) > 0 && it && st) { y.averagetargetduration = S / it; var ot = st.sn; y.endSN = "initSegment" !== ot ? ot : 0, at && (y.startCC = at.cc, at.initSegment || y.fragments.every((function (t) { return t.relurl && (e = t.relurl, g.test(null != (r = null === (n = i.parseURL(e)) || void 0 === n ? void 0 : n.path) ? r : "")); var e, r, n })) && (u.logger.warn("MP4 fragments found but no init segment (probably no MAP, incomplete M3U8), trying to fetch SIDX"), (L = new a.Fragment(c, e)).relurl = st.relurl, L.level = r, L.sn = "initSegment", at.initSegment = L, y.needSidxRanges = !0)) } else y.endSN = 0, y.startCC = 0; return y.fragmentHint && (S += y.fragmentHint.duration), y.totalduration = S, y.endCC = _, R > 0 && function (t, e) { for (var r = t[e], n = e; n--;) { var i = t[n]; if (!i) return; i.programDateTime = r.programDateTime - 1e3 * i.duration, r = i } }(E, R), y }, t }(); function m(t, e) { ["video", "audio", "text"].forEach((function (r) { var n = t.filter((function (t) { return Object(c.isCodecType)(t, r) })); if (n.length) { var i = n.filter((function (t) { return 0 === t.lastIndexOf("avc1", 0) || 0 === t.lastIndexOf("mp4a", 0) })); e[r + "Codec"] = i.length > 0 ? i[0] : n[0], t = t.filter((function (t) { return -1 === n.indexOf(t) })) } })), e.unknownCodecs = t } function y(t, e, r) { var n = e[r]; n && (t[r] = n) } function A(t, e) { t.rawProgramDateTime ? t.programDateTime = Date.parse(t.rawProgramDateTime) : null != e && e.programDateTime && (t.programDateTime = e.endProgramDateTime), Object(n.isFiniteNumber)(t.programDateTime) || (t.programDateTime = null, t.rawProgramDateTime = null) } }, "./src/loader/playlist-loader.ts":
/*!***************************************!*\
    !*** ./src/loader/playlist-loader.ts ***!
    \***************************************/
/*! exports provided: default */function (t, e, r) { r.r(e); var n = r(/*! ./src/polyfills/number */"./src/polyfills/number.ts"), i = r(/*! ../events */"./src/events.ts"), a = r(/*! ../errors */"./src/errors.ts"), s = r(/*! ../utils/logger */"./src/utils/logger.ts"), o = r(/*! ../utils/mp4-tools */"./src/utils/mp4-tools.ts"), l = r(/*! ./m3u8-parser */"./src/loader/m3u8-parser.ts"), u = r(/*! ../types/loader */"./src/types/loader.ts"), c = r(/*! ../utils/attr-list */"./src/utils/attr-list.ts"); function d(t, e) { var r = t.url; return void 0 !== r && 0 !== r.indexOf("data:") || (r = e.url), r } var h = function () { function t(t) { this.hls = void 0, this.loaders = Object.create(null), this.hls = t, this.registerListeners() } var e = t.prototype; return e.registerListeners = function () { var t = this.hls; t.on(i.Events.MANIFEST_LOADING, this.onManifestLoading, this), t.on(i.Events.LEVEL_LOADING, this.onLevelLoading, this), t.on(i.Events.AUDIO_TRACK_LOADING, this.onAudioTrackLoading, this), t.on(i.Events.SUBTITLE_TRACK_LOADING, this.onSubtitleTrackLoading, this) }, e.unregisterListeners = function () { var t = this.hls; t.off(i.Events.MANIFEST_LOADING, this.onManifestLoading, this), t.off(i.Events.LEVEL_LOADING, this.onLevelLoading, this), t.off(i.Events.AUDIO_TRACK_LOADING, this.onAudioTrackLoading, this), t.off(i.Events.SUBTITLE_TRACK_LOADING, this.onSubtitleTrackLoading, this) }, e.createInternalLoader = function (t) { var e = this.hls.config, r = e.pLoader, n = e.loader, i = new (r || n)(e); return t.loader = i, this.loaders[t.type] = i, i }, e.getInternalLoader = function (t) { return this.loaders[t.type] }, e.resetInternalLoader = function (t) { this.loaders[t] && delete this.loaders[t] }, e.destroyInternalLoaders = function () { for (var t in this.loaders) { var e = this.loaders[t]; e && e.destroy(), this.resetInternalLoader(t) } }, e.destroy = function () { this.unregisterListeners(), this.destroyInternalLoaders() }, e.onManifestLoading = function (t, e) { var r = e.url; this.load({ id: null, groupId: null, level: 0, responseType: "text", type: u.PlaylistContextType.MANIFEST, url: r, deliveryDirectives: null }) }, e.onLevelLoading = function (t, e) { var r = e.id, n = e.level, i = e.url, a = e.deliveryDirectives; this.load({ id: r, groupId: null, level: n, responseType: "text", type: u.PlaylistContextType.LEVEL, url: i, deliveryDirectives: a }) }, e.onAudioTrackLoading = function (t, e) { var r = e.id, n = e.groupId, i = e.url, a = e.deliveryDirectives; this.load({ id: r, groupId: n, level: null, responseType: "text", type: u.PlaylistContextType.AUDIO_TRACK, url: i, deliveryDirectives: a }) }, e.onSubtitleTrackLoading = function (t, e) { var r = e.id, n = e.groupId, i = e.url, a = e.deliveryDirectives; this.load({ id: r, groupId: n, level: null, responseType: "text", type: u.PlaylistContextType.SUBTITLE_TRACK, url: i, deliveryDirectives: a }) }, e.load = function (t) { var e, r, n, i, a, o, l = this.hls.config, c = this.getInternalLoader(t); if (c) { var d = c.context; if (d && d.url === t.url) return void s.logger.trace("[playlist-loader]: playlist request ongoing"); s.logger.log("[playlist-loader]: aborting previous loader for type: " + t.type), c.abort() } switch (t.type) { case u.PlaylistContextType.MANIFEST: r = l.manifestLoadingMaxRetry, n = l.manifestLoadingTimeOut, i = l.manifestLoadingRetryDelay, a = l.manifestLoadingMaxRetryTimeout; break; case u.PlaylistContextType.LEVEL: case u.PlaylistContextType.AUDIO_TRACK: case u.PlaylistContextType.SUBTITLE_TRACK: r = 0, n = l.levelLoadingTimeOut; break; default: r = l.levelLoadingMaxRetry, n = l.levelLoadingTimeOut, i = l.levelLoadingRetryDelay, a = l.levelLoadingMaxRetryTimeout }if (c = this.createInternalLoader(t), null !== (e = t.deliveryDirectives) && void 0 !== e && e.part && (t.type === u.PlaylistContextType.LEVEL && null !== t.level ? o = this.hls.levels[t.level].details : t.type === u.PlaylistContextType.AUDIO_TRACK && null !== t.id ? o = this.hls.audioTracks[t.id].details : t.type === u.PlaylistContextType.SUBTITLE_TRACK && null !== t.id && (o = this.hls.subtitleTracks[t.id].details), o)) { var h = o.partTarget, f = o.targetduration; h && f && (n = Math.min(1e3 * Math.max(3 * h, .8 * f), n)) } var p = { timeout: n, maxRetry: r, retryDelay: i, maxRetryDelay: a, highWaterMark: 0 }, g = { onSuccess: this.loadsuccess.bind(this), onError: this.loaderror.bind(this), onTimeout: this.loadtimeout.bind(this) }; c.load(t, p, g) }, e.loadsuccess = function (t, e, r, n) { if (void 0 === n && (n = null), r.isSidxRequest) return this.handleSidxRequest(t, r), void this.handlePlaylistLoaded(t, e, r, n); this.resetInternalLoader(r.type); var i = t.data; 0 === i.indexOf("#EXTM3U") ? (e.parsing.start = performance.now(), i.indexOf("#EXTINF:") > 0 || i.indexOf("#EXT-X-TARGETDURATION:") > 0 ? this.handleTrackOrLevelPlaylist(t, e, r, n) : this.handleMasterPlaylist(t, e, r, n)) : this.handleManifestParsingError(t, r, "no EXTM3U delimiter", n) }, e.loaderror = function (t, e, r) { void 0 === r && (r = null), this.handleNetworkError(e, r, !1, t) }, e.loadtimeout = function (t, e, r) { void 0 === r && (r = null), this.handleNetworkError(e, r, !0) }, e.handleMasterPlaylist = function (t, e, r, n) { var a = this.hls, o = t.data, u = d(t, r), h = l.default.parseMasterPlaylist(o, u), f = h.levels, p = h.sessionData; if (f.length) { var g = f.map((function (t) { return { id: t.attrs.AUDIO, audioCodec: t.audioCodec } })), v = f.map((function (t) { return { id: t.attrs.SUBTITLES, textCodec: t.textCodec } })), m = l.default.parseMasterPlaylistMedia(o, u, "AUDIO", g), y = l.default.parseMasterPlaylistMedia(o, u, "SUBTITLES", v), A = l.default.parseMasterPlaylistMedia(o, u, "CLOSED-CAPTIONS"); m.length && (m.some((function (t) { return !t.url })) || !f[0].audioCodec || f[0].attrs.AUDIO || (s.logger.log("[playlist-loader]: audio codec signaled in quality level, but no embedded audio track signaled, create one"), m.unshift({ type: "main", name: "main", default: !1, autoselect: !1, forced: !1, id: -1, attrs: new c.AttrList({}), bitrate: 0, url: "" }))), a.trigger(i.Events.MANIFEST_LOADED, { levels: f, audioTracks: m, subtitles: y, captions: A, url: u, stats: e, networkDetails: n, sessionData: p }) } else this.handleManifestParsingError(t, r, "no level found in manifest", n) }, e.handleTrackOrLevelPlaylist = function (t, e, r, s) { var o = this.hls, h = r.id, f = r.level, p = r.type, g = d(t, r), v = Object(n.isFiniteNumber)(h) ? h : 0, m = Object(n.isFiniteNumber)(f) ? f : v, y = function (t) { switch (t.type) { case u.PlaylistContextType.AUDIO_TRACK: return u.PlaylistLevelType.AUDIO; case u.PlaylistContextType.SUBTITLE_TRACK: return u.PlaylistLevelType.SUBTITLE; default: return u.PlaylistLevelType.MAIN } }(r), A = l.default.parseLevelPlaylist(t.data, g, m, y, v); if (A.fragments.length) { if (p === u.PlaylistContextType.MANIFEST) { var E = { attrs: new c.AttrList({}), bitrate: 0, details: A, name: "", url: g }; o.trigger(i.Events.MANIFEST_LOADED, { levels: [E], audioTracks: [], url: g, stats: e, networkDetails: s, sessionData: null }) } if (e.parsing.end = performance.now(), A.needSidxRanges) { var T, b = null === (T = A.fragments[0].initSegment) || void 0 === T ? void 0 : T.url; this.load({ url: b, isSidxRequest: !0, type: p, level: f, levelDetails: A, id: h, groupId: null, rangeStart: 0, rangeEnd: 2048, responseType: "arraybuffer", deliveryDirectives: null }) } else r.levelDetails = A, this.handlePlaylistLoaded(t, e, r, s) } else o.trigger(i.Events.ERROR, { type: a.ErrorTypes.NETWORK_ERROR, details: a.ErrorDetails.LEVEL_EMPTY_ERROR, fatal: !1, url: g, reason: "no fragments found in level", level: "number" == typeof r.level ? r.level : void 0 }) }, e.handleSidxRequest = function (t, e) { var r = Object(o.parseSegmentIndex)(new Uint8Array(t.data)); if (r) { var n = r.references, i = e.levelDetails; n.forEach((function (t, e) { var n = t.info, a = i.fragments[e]; 0 === a.byteRange.length && a.setByteRange(String(1 + n.end - n.start) + "@" + String(n.start)), a.initSegment && a.initSegment.setByteRange(String(r.moovEndOffset) + "@0") })) } }, e.handleManifestParsingError = function (t, e, r, n) { this.hls.trigger(i.Events.ERROR, { type: a.ErrorTypes.NETWORK_ERROR, details: a.ErrorDetails.MANIFEST_PARSING_ERROR, fatal: e.type === u.PlaylistContextType.MANIFEST, url: t.url, reason: r, response: t, context: e, networkDetails: n }) }, e.handleNetworkError = function (t, e, r, n) { void 0 === r && (r = !1), s.logger.warn("[playlist-loader]: A network " + (r ? "timeout" : "error") + " occurred while loading " + t.type + " level: " + t.level + " id: " + t.id + ' group-id: "' + t.groupId + '"'); var o = a.ErrorDetails.UNKNOWN, l = !1, c = this.getInternalLoader(t); switch (t.type) { case u.PlaylistContextType.MANIFEST: o = r ? a.ErrorDetails.MANIFEST_LOAD_TIMEOUT : a.ErrorDetails.MANIFEST_LOAD_ERROR, l = !0; break; case u.PlaylistContextType.LEVEL: o = r ? a.ErrorDetails.LEVEL_LOAD_TIMEOUT : a.ErrorDetails.LEVEL_LOAD_ERROR, l = !1; break; case u.PlaylistContextType.AUDIO_TRACK: o = r ? a.ErrorDetails.AUDIO_TRACK_LOAD_TIMEOUT : a.ErrorDetails.AUDIO_TRACK_LOAD_ERROR, l = !1; break; case u.PlaylistContextType.SUBTITLE_TRACK: o = r ? a.ErrorDetails.SUBTITLE_TRACK_LOAD_TIMEOUT : a.ErrorDetails.SUBTITLE_LOAD_ERROR, l = !1 }c && this.resetInternalLoader(t.type); var d = { type: a.ErrorTypes.NETWORK_ERROR, details: o, fatal: l, url: t.url, loader: c, context: t, networkDetails: e }; n && (d.response = n), this.hls.trigger(i.Events.ERROR, d) }, e.handlePlaylistLoaded = function (t, e, r, n) { var a = r.type, s = r.level, o = r.id, l = r.groupId, c = r.loader, d = r.levelDetails, h = r.deliveryDirectives; if (null != d && d.targetduration) { if (c) switch (d.live && (c.getCacheAge && (d.ageHeader = c.getCacheAge() || 0), c.getCacheAge && !isNaN(d.ageHeader) || (d.ageHeader = 0)), a) { case u.PlaylistContextType.MANIFEST: case u.PlaylistContextType.LEVEL: this.hls.trigger(i.Events.LEVEL_LOADED, { details: d, level: s || 0, id: o || 0, stats: e, networkDetails: n, deliveryDirectives: h }); break; case u.PlaylistContextType.AUDIO_TRACK: this.hls.trigger(i.Events.AUDIO_TRACK_LOADED, { details: d, id: o || 0, groupId: l || "", stats: e, networkDetails: n, deliveryDirectives: h }); break; case u.PlaylistContextType.SUBTITLE_TRACK: this.hls.trigger(i.Events.SUBTITLE_TRACK_LOADED, { details: d, id: o || 0, groupId: l || "", stats: e, networkDetails: n, deliveryDirectives: h }) } } else this.handleManifestParsingError(t, r, "invalid target duration", n) }, t }(); e.default = h }, "./src/polyfills/number.ts":
/*!*********************************!*\
    !*** ./src/polyfills/number.ts ***!
    \*********************************/
/*! exports provided: isFiniteNumber, MAX_SAFE_INTEGER */function (t, e, r) { r.r(e), r.d(e, "isFiniteNumber", (function () { return n })), r.d(e, "MAX_SAFE_INTEGER", (function () { return i })); var n = Number.isFinite || function (t) { return "number" == typeof t && isFinite(t) }, i = Number.MAX_SAFE_INTEGER || 9007199254740991 }, "./src/remux/aac-helper.ts":
/*!*********************************!*\
    !*** ./src/remux/aac-helper.ts ***!
    \*********************************/
/*! exports provided: default */function (t, e, r) { r.r(e); var n = function () { function t() { } return t.getSilentFrame = function (t, e) { if ("mp4a.40.2" === t) { if (1 === e) return new Uint8Array([0, 200, 0, 128, 35, 128]); if (2 === e) return new Uint8Array([33, 0, 73, 144, 2, 25, 0, 35, 128]); if (3 === e) return new Uint8Array([0, 200, 0, 128, 32, 132, 1, 38, 64, 8, 100, 0, 142]); if (4 === e) return new Uint8Array([0, 200, 0, 128, 32, 132, 1, 38, 64, 8, 100, 0, 128, 44, 128, 8, 2, 56]); if (5 === e) return new Uint8Array([0, 200, 0, 128, 32, 132, 1, 38, 64, 8, 100, 0, 130, 48, 4, 153, 0, 33, 144, 2, 56]); if (6 === e) return new Uint8Array([0, 200, 0, 128, 32, 132, 1, 38, 64, 8, 100, 0, 130, 48, 4, 153, 0, 33, 144, 2, 0, 178, 0, 32, 8, 224]) } else { if (1 === e) return new Uint8Array([1, 64, 34, 128, 163, 78, 230, 128, 186, 8, 0, 0, 0, 28, 6, 241, 193, 10, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 94]); if (2 === e) return new Uint8Array([1, 64, 34, 128, 163, 94, 230, 128, 186, 8, 0, 0, 0, 0, 149, 0, 6, 241, 161, 10, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 94]); if (3 === e) return new Uint8Array([1, 64, 34, 128, 163, 94, 230, 128, 186, 8, 0, 0, 0, 0, 149, 0, 6, 241, 161, 10, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 94]) } }, t }(); e.default = n }, "./src/remux/mp4-generator.ts":
/*!************************************!*\
    !*** ./src/remux/mp4-generator.ts ***!
    \************************************/
/*! exports provided: default */function (t, e, r) { r.r(e); var n = Math.pow(2, 32) - 1, i = function () { function t() { } return t.init = function () { var e; for (e in t.types = { avc1: [], avcC: [], btrt: [], dinf: [], dref: [], esds: [], ftyp: [], hdlr: [], mdat: [], mdhd: [], mdia: [], mfhd: [], minf: [], moof: [], moov: [], mp4a: [], ".mp3": [], mvex: [], mvhd: [], pasp: [], sdtp: [], stbl: [], stco: [], stsc: [], stsd: [], stsz: [], stts: [], tfdt: [], tfhd: [], traf: [], trak: [], trun: [], trex: [], tkhd: [], vmhd: [], smhd: [] }, t.types) t.types.hasOwnProperty(e) && (t.types[e] = [e.charCodeAt(0), e.charCodeAt(1), e.charCodeAt(2), e.charCodeAt(3)]); var r = new Uint8Array([0, 0, 0, 0, 0, 0, 0, 0, 118, 105, 100, 101, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 86, 105, 100, 101, 111, 72, 97, 110, 100, 108, 101, 114, 0]), n = new Uint8Array([0, 0, 0, 0, 0, 0, 0, 0, 115, 111, 117, 110, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 83, 111, 117, 110, 100, 72, 97, 110, 100, 108, 101, 114, 0]); t.HDLR_TYPES = { video: r, audio: n }; var i = new Uint8Array([0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 12, 117, 114, 108, 32, 0, 0, 0, 1]), a = new Uint8Array([0, 0, 0, 0, 0, 0, 0, 0]); t.STTS = t.STSC = t.STCO = a, t.STSZ = new Uint8Array([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]), t.VMHD = new Uint8Array([0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0]), t.SMHD = new Uint8Array([0, 0, 0, 0, 0, 0, 0, 0]), t.STSD = new Uint8Array([0, 0, 0, 0, 0, 0, 0, 1]); var s = new Uint8Array([105, 115, 111, 109]), o = new Uint8Array([97, 118, 99, 49]), l = new Uint8Array([0, 0, 0, 1]); t.FTYP = t.box(t.types.ftyp, s, l, s, o), t.DINF = t.box(t.types.dinf, t.box(t.types.dref, i)) }, t.box = function (t) { for (var e = 8, r = arguments.length, n = new Array(r > 1 ? r - 1 : 0), i = 1; i < r; i++)n[i - 1] = arguments[i]; for (var a = n.length, s = a; a--;)e += n[a].byteLength; var o = new Uint8Array(e); for (o[0] = e >> 24 & 255, o[1] = e >> 16 & 255, o[2] = e >> 8 & 255, o[3] = 255 & e, o.set(t, 4), a = 0, e = 8; a < s; a++)o.set(n[a], e), e += n[a].byteLength; return o }, t.hdlr = function (e) { return t.box(t.types.hdlr, t.HDLR_TYPES[e]) }, t.mdat = function (e) { return t.box(t.types.mdat, e) }, t.mdhd = function (e, r) { r *= e; var i = Math.floor(r / (n + 1)), a = Math.floor(r % (n + 1)); return t.box(t.types.mdhd, new Uint8Array([1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 3, e >> 24 & 255, e >> 16 & 255, e >> 8 & 255, 255 & e, i >> 24, i >> 16 & 255, i >> 8 & 255, 255 & i, a >> 24, a >> 16 & 255, a >> 8 & 255, 255 & a, 85, 196, 0, 0])) }, t.mdia = function (e) { return t.box(t.types.mdia, t.mdhd(e.timescale, e.duration), t.hdlr(e.type), t.minf(e)) }, t.mfhd = function (e) { return t.box(t.types.mfhd, new Uint8Array([0, 0, 0, 0, e >> 24, e >> 16 & 255, e >> 8 & 255, 255 & e])) }, t.minf = function (e) { return "audio" === e.type ? t.box(t.types.minf, t.box(t.types.smhd, t.SMHD), t.DINF, t.stbl(e)) : t.box(t.types.minf, t.box(t.types.vmhd, t.VMHD), t.DINF, t.stbl(e)) }, t.moof = function (e, r, n) { return t.box(t.types.moof, t.mfhd(e), t.traf(n, r)) }, t.moov = function (e) { for (var r = e.length, n = []; r--;)n[r] = t.trak(e[r]); return t.box.apply(null, [t.types.moov, t.mvhd(e[0].timescale, e[0].duration)].concat(n).concat(t.mvex(e))) }, t.mvex = function (e) { for (var r = e.length, n = []; r--;)n[r] = t.trex(e[r]); return t.box.apply(null, [t.types.mvex].concat(n)) }, t.mvhd = function (e, r) { r *= e; var i = Math.floor(r / (n + 1)), a = Math.floor(r % (n + 1)), s = new Uint8Array([1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 3, e >> 24 & 255, e >> 16 & 255, e >> 8 & 255, 255 & e, i >> 24, i >> 16 & 255, i >> 8 & 255, 255 & i, a >> 24, a >> 16 & 255, a >> 8 & 255, 255 & a, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 64, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 255, 255, 255, 255]); return t.box(t.types.mvhd, s) }, t.sdtp = function (e) { var r, n, i = e.samples || [], a = new Uint8Array(4 + i.length); for (r = 0; r < i.length; r++)n = i[r].flags, a[r + 4] = n.dependsOn << 4 | n.isDependedOn << 2 | n.hasRedundancy; return t.box(t.types.sdtp, a) }, t.stbl = function (e) { return t.box(t.types.stbl, t.stsd(e), t.box(t.types.stts, t.STTS), t.box(t.types.stsc, t.STSC), t.box(t.types.stsz, t.STSZ), t.box(t.types.stco, t.STCO)) }, t.avc1 = function (e) { var r, n, i, a = [], s = []; for (r = 0; r < e.sps.length; r++)i = (n = e.sps[r]).byteLength, a.push(i >>> 8 & 255), a.push(255 & i), a = a.concat(Array.prototype.slice.call(n)); for (r = 0; r < e.pps.length; r++)i = (n = e.pps[r]).byteLength, s.push(i >>> 8 & 255), s.push(255 & i), s = s.concat(Array.prototype.slice.call(n)); var o = t.box(t.types.avcC, new Uint8Array([1, a[3], a[4], a[5], 255, 224 | e.sps.length].concat(a).concat([e.pps.length]).concat(s))), l = e.width, u = e.height, c = e.pixelRatio[0], d = e.pixelRatio[1]; return t.box(t.types.avc1, new Uint8Array([0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, l >> 8 & 255, 255 & l, u >> 8 & 255, 255 & u, 0, 72, 0, 0, 0, 72, 0, 0, 0, 0, 0, 0, 0, 1, 18, 100, 97, 105, 108, 121, 109, 111, 116, 105, 111, 110, 47, 104, 108, 115, 46, 106, 115, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 24, 17, 17]), o, t.box(t.types.btrt, new Uint8Array([0, 28, 156, 128, 0, 45, 198, 192, 0, 45, 198, 192])), t.box(t.types.pasp, new Uint8Array([c >> 24, c >> 16 & 255, c >> 8 & 255, 255 & c, d >> 24, d >> 16 & 255, d >> 8 & 255, 255 & d]))) }, t.esds = function (t) { var e = t.config.length; return new Uint8Array([0, 0, 0, 0, 3, 23 + e, 0, 1, 0, 4, 15 + e, 64, 21, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 5].concat([e]).concat(t.config).concat([6, 1, 2])) }, t.mp4a = function (e) { var r = e.samplerate; return t.box(t.types.mp4a, new Uint8Array([0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, e.channelCount, 0, 16, 0, 0, 0, 0, r >> 8 & 255, 255 & r, 0, 0]), t.box(t.types.esds, t.esds(e))) }, t.mp3 = function (e) { var r = e.samplerate; return t.box(t.types[".mp3"], new Uint8Array([0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, e.channelCount, 0, 16, 0, 0, 0, 0, r >> 8 & 255, 255 & r, 0, 0])) }, t.stsd = function (e) { return "audio" === e.type ? e.isAAC || "mp3" !== e.codec ? t.box(t.types.stsd, t.STSD, t.mp4a(e)) : t.box(t.types.stsd, t.STSD, t.mp3(e)) : t.box(t.types.stsd, t.STSD, t.avc1(e)) }, t.tkhd = function (e) { var r = e.id, i = e.duration * e.timescale, a = e.width, s = e.height, o = Math.floor(i / (n + 1)), l = Math.floor(i % (n + 1)); return t.box(t.types.tkhd, new Uint8Array([1, 0, 0, 7, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 3, r >> 24 & 255, r >> 16 & 255, r >> 8 & 255, 255 & r, 0, 0, 0, 0, o >> 24, o >> 16 & 255, o >> 8 & 255, 255 & o, l >> 24, l >> 16 & 255, l >> 8 & 255, 255 & l, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 64, 0, 0, 0, a >> 8 & 255, 255 & a, 0, 0, s >> 8 & 255, 255 & s, 0, 0])) }, t.traf = function (e, r) { var i = t.sdtp(e), a = e.id, s = Math.floor(r / (n + 1)), o = Math.floor(r % (n + 1)); return t.box(t.types.traf, t.box(t.types.tfhd, new Uint8Array([0, 0, 0, 0, a >> 24, a >> 16 & 255, a >> 8 & 255, 255 & a])), t.box(t.types.tfdt, new Uint8Array([1, 0, 0, 0, s >> 24, s >> 16 & 255, s >> 8 & 255, 255 & s, o >> 24, o >> 16 & 255, o >> 8 & 255, 255 & o])), t.trun(e, i.length + 16 + 20 + 8 + 16 + 8 + 8), i) }, t.trak = function (e) { return e.duration = e.duration || 4294967295, t.box(t.types.trak, t.tkhd(e), t.mdia(e)) }, t.trex = function (e) { var r = e.id; return t.box(t.types.trex, new Uint8Array([0, 0, 0, 0, r >> 24, r >> 16 & 255, r >> 8 & 255, 255 & r, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1])) }, t.trun = function (e, r) { var n, i, a, s, o, l, u = e.samples || [], c = u.length, d = 12 + 16 * c, h = new Uint8Array(d); for (r += 8 + d, h.set([0, 0, 15, 1, c >>> 24 & 255, c >>> 16 & 255, c >>> 8 & 255, 255 & c, r >>> 24 & 255, r >>> 16 & 255, r >>> 8 & 255, 255 & r], 0), n = 0; n < c; n++)a = (i = u[n]).duration, s = i.size, o = i.flags, l = i.cts, h.set([a >>> 24 & 255, a >>> 16 & 255, a >>> 8 & 255, 255 & a, s >>> 24 & 255, s >>> 16 & 255, s >>> 8 & 255, 255 & s, o.isLeading << 2 | o.dependsOn, o.isDependedOn << 6 | o.hasRedundancy << 4 | o.paddingValue << 1 | o.isNonSync, 61440 & o.degradPrio, 15 & o.degradPrio, l >>> 24 & 255, l >>> 16 & 255, l >>> 8 & 255, 255 & l], 12 + 16 * n); return t.box(t.types.trun, h) }, t.initSegment = function (e) { t.types || t.init(); var r = t.moov(e), n = new Uint8Array(t.FTYP.byteLength + r.byteLength); return n.set(t.FTYP), n.set(r, t.FTYP.byteLength), n }, t }(); i.types = void 0, i.HDLR_TYPES = void 0, i.STTS = void 0, i.STSC = void 0, i.STCO = void 0, i.STSZ = void 0, i.VMHD = void 0, i.SMHD = void 0, i.STSD = void 0, i.FTYP = void 0, i.DINF = void 0, e.default = i }, "./src/remux/mp4-remuxer.ts":
/*!**********************************!*\
    !*** ./src/remux/mp4-remuxer.ts ***!
    \**********************************/
/*! exports provided: default, normalizePts */function (t, e, r) { r.r(e), r.d(e, "default", (function () { return g })), r.d(e, "normalizePts", (function () { return v })); var n = r(/*! ./src/polyfills/number */"./src/polyfills/number.ts"), i = r(/*! ./aac-helper */"./src/remux/aac-helper.ts"), a = r(/*! ./mp4-generator */"./src/remux/mp4-generator.ts"), s = r(/*! ../events */"./src/events.ts"), o = r(/*! ../errors */"./src/errors.ts"), l = r(/*! ../utils/logger */"./src/utils/logger.ts"), u = r(/*! ../types/loader */"./src/types/loader.ts"), c = r(/*! ../utils/timescale-conversion */"./src/utils/timescale-conversion.ts"); function d() { return d = Object.assign || function (t) { for (var e = 1; e < arguments.length; e++) { var r = arguments[e]; for (var n in r) Object.prototype.hasOwnProperty.call(r, n) && (t[n] = r[n]) } return t }, d.apply(this, arguments) } var h = null, f = null, p = !1, g = function () { function t(t, e, r, n) { if (this.observer = void 0, this.config = void 0, this.typeSupported = void 0, this.ISGenerated = !1, this._initPTS = void 0, this._initDTS = void 0, this.nextAvcDts = null, this.nextAudioPts = null, this.isAudioContiguous = !1, this.isVideoContiguous = !1, this.observer = t, this.config = e, this.typeSupported = r, this.ISGenerated = !1, null === h) { var i = (navigator.userAgent || "").match(/Chrome\/(\d+)/i); h = i ? parseInt(i[1]) : 0 } if (null === f) { var a = navigator.userAgent.match(/Safari\/(\d+)/i); f = a ? parseInt(a[1]) : 0 } p = !!h && h < 75 || !!f && f < 600 } var e = t.prototype; return e.destroy = function () { }, e.resetTimeStamp = function (t) { l.logger.log("[mp4-remuxer]: initPTS & initDTS reset"), this._initPTS = this._initDTS = t }, e.resetNextTimestamp = function () { l.logger.log("[mp4-remuxer]: reset next timestamp"), this.isVideoContiguous = !1, this.isAudioContiguous = !1 }, e.resetInitSegment = function () { l.logger.log("[mp4-remuxer]: ISGenerated flag reset"), this.ISGenerated = !1 }, e.getVideoStartPts = function (t) { var e = !1, r = t.reduce((function (t, r) { var n = r.pts - t; return n < -4294967296 ? (e = !0, v(t, r.pts)) : n > 0 ? t : r.pts }), t[0].pts); return e && l.logger.debug("PTS rollover detected"), r }, e.remux = function (t, e, r, n, i, a, s, o) { var c, d, h, f, p, g, m = i, y = i, A = t.pid > -1, E = e.pid > -1, T = e.samples.length, b = t.samples.length > 0, k = T > 1; if ((!A || b) && (!E || k) || this.ISGenerated || s) { this.ISGenerated || (h = this.generateIS(t, e, i)); var S = this.isVideoContiguous, _ = -1; if (k && (_ = function (t) { for (var e = 0; e < t.length; e++)if (t[e].key) return e; return -1 }(e.samples), !S && this.config.forceKeyFrameOnDiscontinuity)) if (g = !0, _ > 0) { l.logger.warn("[mp4-remuxer]: Dropped " + _ + " out of " + T + " video samples due to a missing keyframe"); var C = this.getVideoStartPts(e.samples); e.samples = e.samples.slice(_), e.dropped += _, y += (e.samples[0].pts - C) / (e.timescale || 9e4) } else -1 === _ && (l.logger.warn("[mp4-remuxer]: No keyframe found out of " + T + " video samples"), g = !1); if (this.ISGenerated) { if (b && k) { var L = this.getVideoStartPts(e.samples), R = (v(t.samples[0].pts, L) - L) / e.inputTimeScale; m += Math.max(0, R), y += Math.max(0, -R) } if (b) { if (t.samplerate || (l.logger.warn("[mp4-remuxer]: regenerate InitSegment as audio detected"), h = this.generateIS(t, e, i)), d = this.remuxAudio(t, m, this.isAudioContiguous, a, E || k || o === u.PlaylistLevelType.AUDIO ? y : void 0), k) { var D = d ? d.endPTS - d.startPTS : 0; e.inputTimeScale || (l.logger.warn("[mp4-remuxer]: regenerate InitSegment as video detected"), h = this.generateIS(t, e, i)), c = this.remuxVideo(e, y, S, D) } } else k && (c = this.remuxVideo(e, y, S, 0)); c && (c.firstKeyFrame = _, c.independent = -1 !== _) } } return this.ISGenerated && (r.samples.length && (p = this.remuxID3(r, i)), n.samples.length && (f = this.remuxText(n, i))), { audio: d, video: c, initSegment: h, independent: g, text: f, id3: p } }, e.generateIS = function (t, e, r) { var i, s, o, l = t.samples, u = e.samples, c = this.typeSupported, d = {}, h = !Object(n.isFiniteNumber)(this._initPTS), f = "audio/mp4"; if (h && (i = s = 1 / 0), t.config && l.length && (t.timescale = t.samplerate, t.isAAC || (c.mpeg ? (f = "audio/mpeg", t.codec = "") : c.mp3 && (t.codec = "mp3")), d.audio = { id: "audio", container: f, codec: t.codec, initSegment: !t.isAAC && c.mpeg ? new Uint8Array(0) : a.default.initSegment([t]), metadata: { channelCount: t.channelCount } }, h && (o = t.inputTimeScale, i = s = l[0].pts - Math.round(o * r))), e.sps && e.pps && u.length && (e.timescale = e.inputTimeScale, d.video = { id: "main", container: "video/mp4", codec: e.codec, initSegment: a.default.initSegment([e]), metadata: { width: e.width, height: e.height } }, h)) { o = e.inputTimeScale; var p = this.getVideoStartPts(u), g = Math.round(o * r); s = Math.min(s, v(u[0].dts, p) - g), i = Math.min(i, p - g) } if (Object.keys(d).length) return this.ISGenerated = !0, h && (this._initPTS = i, this._initDTS = s), { tracks: d, initPTS: i, timescale: o } }, e.remuxVideo = function (t, e, r, n) { var i, u, f, g = t.inputTimeScale, y = t.samples, A = [], E = y.length, T = this._initPTS, b = this.nextAvcDts, k = 8, S = Number.POSITIVE_INFINITY, _ = Number.NEGATIVE_INFINITY, C = 0, L = !1; r && null !== b || (b = e * g - (y[0].pts - v(y[0].dts, y[0].pts))); for (var R = 0; R < E; R++) { var D = y[R]; D.pts = v(D.pts - T, b), D.dts = v(D.dts - T, b), D.dts > D.pts && (C = Math.max(Math.min(C, D.pts - D.dts), -18e3)), D.dts < y[R > 0 ? R - 1 : R].dts && (L = !0) } L && y.sort((function (t, e) { var r = t.dts - e.dts, n = t.pts - e.pts; return r || n })), u = y[0].dts, f = y[y.length - 1].dts; var I = Math.round((f - u) / (E - 1)); if (C < 0) { if (C < -2 * I) { l.logger.warn("PTS < DTS detected in video samples, offsetting DTS from PTS by " + Object(c.toMsFromMpegTsClock)(-I, !0) + " ms"); for (var O = C, w = 0; w < E; w++)y[w].dts = O = Math.max(O, y[w].pts - I), y[w].pts = Math.max(O, y[w].pts) } else { l.logger.warn("PTS < DTS detected in video samples, shifting DTS by " + Object(c.toMsFromMpegTsClock)(C, !0) + " ms to overcome this issue"); for (var P = 0; P < E; P++)y[P].dts = y[P].dts + C } u = y[0].dts } if (r) { var x = u - b, N = x > I; if (N || x < -1) { N ? l.logger.warn("AVC: " + Object(c.toMsFromMpegTsClock)(x, !0) + " ms (" + x + "dts) hole between fragments detected, filling it") : l.logger.warn("AVC: " + Object(c.toMsFromMpegTsClock)(-x, !0) + " ms (" + x + "dts) overlapping between fragments detected"), u = b; var M = y[0].pts - x; y[0].dts = u, y[0].pts = M, l.logger.log("Video: First PTS/DTS adjusted: " + Object(c.toMsFromMpegTsClock)(M, !0) + "/" + Object(c.toMsFromMpegTsClock)(u, !0) + ", delta: " + Object(c.toMsFromMpegTsClock)(x, !0) + " ms") } } p && (u = Math.max(0, u)); for (var F = 0, B = 0, U = 0; U < E; U++) { for (var j = y[U], G = j.units, V = G.length, K = 0, H = 0; H < V; H++)K += G[H].data.length; B += K, F += V, j.length = K, j.dts = Math.max(j.dts, u), j.pts = Math.max(j.pts, j.dts, 0), S = Math.min(j.pts, S), _ = Math.max(j.pts, _) } f = y[E - 1].dts; var Y, W = B + 4 * F + 8; try { Y = new Uint8Array(W) } catch (t) { return void this.observer.emit(s.Events.ERROR, s.Events.ERROR, { type: o.ErrorTypes.MUX_ERROR, details: o.ErrorDetails.REMUX_ALLOC_ERROR, fatal: !1, bytes: W, reason: "fail allocating video mdat " + W }) } var $ = new DataView(Y.buffer); $.setUint32(0, W), Y.set(a.default.types.mdat, 4); for (var z = 0; z < E; z++) { for (var q = y[z], X = q.units, Z = 0, Q = 0, J = X.length; Q < J; Q++) { var tt = X[Q], et = tt.data, rt = tt.data.byteLength; $.setUint32(k, rt), k += 4, Y.set(et, k), k += rt, Z += 4 + rt } if (z < E - 1) i = y[z + 1].dts - q.dts; else { var nt = this.config, it = q.dts - y[z > 0 ? z - 1 : z].dts; if (nt.stretchShortVideoTrack && null !== this.nextAudioPts) { var at = Math.floor(nt.maxBufferHole * g), st = (n ? S + n * g : this.nextAudioPts) - q.pts; st > at ? ((i = st - it) < 0 && (i = it), l.logger.log("[mp4-remuxer]: It is approximately " + st / 90 + " ms to the next segment; using duration " + i / 90 + " ms for the last video frame.")) : i = it } else i = it } var ot = Math.round(q.pts - q.dts); A.push(new m(q.key, i, Z, ot)) } if (A.length && h && h < 70) { var lt = A[0].flags; lt.dependsOn = 2, lt.isNonSync = 0 } console.assert(void 0 !== i, "mp4SampleDuration must be computed"), this.nextAvcDts = b = f + i, this.isVideoContiguous = !0; var ut = { data1: a.default.moof(t.sequenceNumber++, u, d({}, t, { samples: A })), data2: Y, startPTS: S / g, endPTS: (_ + i) / g, startDTS: u / g, endDTS: b / g, type: "video", hasAudio: !1, hasVideo: !0, nb: A.length, dropped: t.dropped }; return t.samples = [], t.dropped = 0, console.assert(Y.length, "MDAT length must not be zero"), ut }, e.remuxAudio = function (t, e, r, n, u) { var c = t.inputTimeScale, h = c / (t.samplerate ? t.samplerate : c), f = t.isAAC ? 1024 : 1152, p = f * h, g = this._initPTS, y = !t.isAAC && this.typeSupported.mpeg, A = [], E = t.samples, T = y ? 0 : 8, b = this.nextAudioPts || -1, k = e * c; if (this.isAudioContiguous = r = r || E.length && b > 0 && (n && Math.abs(k - b) < 9e3 || Math.abs(v(E[0].pts - g, k) - b) < 20 * p), E.forEach((function (t) { t.pts = v(t.pts - g, k) })), !r || b < 0) { if (E = E.filter((function (t) { return t.pts >= 0 })), !E.length) return; b = 0 === u ? 0 : n ? Math.max(0, k) : E[0].pts } if (t.isAAC) for (var S = void 0 !== u, _ = this.config.maxAudioFramesDrift, C = 0, L = b; C < E.length; C++) { var R = E[C], D = R.pts, I = D - L, O = Math.abs(1e3 * I / c); if (I <= -_ * p && S) 0 === C && (l.logger.warn("Audio frame @ " + (D / c).toFixed(3) + "s overlaps nextAudioPts by " + Math.round(1e3 * I / c) + " ms."), this.nextAudioPts = b = L = D); else if (I >= _ * p && O < 1e4 && S) { var w = Math.round(I / p); (L = D - w * p) < 0 && (w--, L += p), 0 === C && (this.nextAudioPts = b = L), l.logger.warn("[mp4-remuxer]: Injecting " + w + " audio frame @ " + (L / c).toFixed(3) + "s due to " + Math.round(1e3 * I / c) + " ms gap."); for (var P = 0; P < w; P++) { var x = Math.max(L, 0), N = i.default.getSilentFrame(t.manifestCodec || t.codec, t.channelCount); N || (l.logger.log("[mp4-remuxer]: Unable to get silent frame for given audio codec; duplicating last frame instead."), N = R.unit.subarray()), E.splice(C, 0, { unit: N, pts: x }), L += p, C++ } } R.pts = L, L += p } for (var M, F = null, B = null, U = 0, j = E.length; j--;)U += E[j].unit.byteLength; for (var G = 0, V = E.length; G < V; G++) { var K = E[G], H = K.unit, Y = K.pts; if (null !== B) A[G - 1].duration = Math.round((Y - B) / h); else { if (r && t.isAAC && (Y = b), F = Y, !(U > 0)) return; U += T; try { M = new Uint8Array(U) } catch (t) { return void this.observer.emit(s.Events.ERROR, s.Events.ERROR, { type: o.ErrorTypes.MUX_ERROR, details: o.ErrorDetails.REMUX_ALLOC_ERROR, fatal: !1, bytes: U, reason: "fail allocating audio mdat " + U }) } y || (new DataView(M.buffer).setUint32(0, U), M.set(a.default.types.mdat, 4)) } M.set(H, T); var W = H.byteLength; T += W, A.push(new m(!0, f, W, 0)), B = Y } var $ = A.length; if ($) { var z = A[A.length - 1]; this.nextAudioPts = b = B + h * z.duration; var q = y ? new Uint8Array(0) : a.default.moof(t.sequenceNumber++, F / h, d({}, t, { samples: A })); t.samples = []; var X = F / c, Z = b / c, Q = { data1: q, data2: M, startPTS: X, endPTS: Z, startDTS: X, endDTS: Z, type: "audio", hasAudio: !0, hasVideo: !1, nb: $ }; return this.isAudioContiguous = !0, console.assert(M.length, "MDAT length must not be zero"), Q } }, e.remuxEmptyAudio = function (t, e, r, n) { var a = t.inputTimeScale, s = a / (t.samplerate ? t.samplerate : a), o = this.nextAudioPts, u = (null !== o ? o : n.startDTS * a) + this._initDTS, c = n.endDTS * a + this._initDTS, d = 1024 * s, h = Math.ceil((c - u) / d), f = i.default.getSilentFrame(t.manifestCodec || t.codec, t.channelCount); if (l.logger.warn("[mp4-remuxer]: remux empty Audio"), f) { for (var p = [], g = 0; g < h; g++) { var v = u + g * d; p.push({ unit: f, pts: v, dts: v }) } return t.samples = p, this.remuxAudio(t, e, r, !1) } l.logger.trace("[mp4-remuxer]: Unable to remuxEmptyAudio since we were unable to get a silent frame for given audio codec") }, e.remuxID3 = function (t, e) { var r = t.samples.length; if (r) { for (var n = t.inputTimeScale, i = this._initPTS, a = this._initDTS, s = 0; s < r; s++) { var o = t.samples[s]; o.pts = v(o.pts - i, e * n) / n, o.dts = v(o.dts - a, e * n) / n } var l = t.samples; return t.samples = [], { samples: l } } }, e.remuxText = function (t, e) { var r = t.samples.length; if (r) { for (var n = t.inputTimeScale, i = this._initPTS, a = 0; a < r; a++) { var s = t.samples[a]; s.pts = v(s.pts - i, e * n) / n } t.samples.sort((function (t, e) { return t.pts - e.pts })); var o = t.samples; return t.samples = [], { samples: o } } }, t }(); function v(t, e) { var r; if (null === e) return t; for (r = e < t ? -8589934592 : 8589934592; Math.abs(t - e) > 4294967296;)t += r; return t } var m = function (t, e, r, n) { this.size = void 0, this.duration = void 0, this.cts = void 0, this.flags = void 0, this.duration = e, this.size = r, this.cts = n, this.flags = new y(t) }, y = function (t) { this.isLeading = 0, this.isDependedOn = 0, this.hasRedundancy = 0, this.degradPrio = 0, this.dependsOn = 1, this.isNonSync = 1, this.dependsOn = t ? 2 : 1, this.isNonSync = t ? 0 : 1 } }, "./src/remux/passthrough-remuxer.ts":
/*!******************************************!*\
    !*** ./src/remux/passthrough-remuxer.ts ***!
    \******************************************/
/*! exports provided: default */function (t, e, r) { r.r(e); var n = r(/*! ./src/polyfills/number */"./src/polyfills/number.ts"), i = r(/*! ../utils/mp4-tools */"./src/utils/mp4-tools.ts"), a = r(/*! ../loader/fragment */"./src/loader/fragment.ts"), s = r(/*! ../utils/logger */"./src/utils/logger.ts"), o = function () { function t() { this.emitInitSegment = !1, this.audioCodec = void 0, this.videoCodec = void 0, this.initData = void 0, this.initPTS = void 0, this.initTracks = void 0, this.lastEndDTS = null } var e = t.prototype; return e.destroy = function () { }, e.resetTimeStamp = function (t) { this.initPTS = t, this.lastEndDTS = null }, e.resetNextTimestamp = function () { this.lastEndDTS = null }, e.resetInitSegment = function (t, e, r) { this.audioCodec = e, this.videoCodec = r, this.generateInitSegment(t), this.emitInitSegment = !0 }, e.generateInitSegment = function (t) { var e = this.audioCodec, r = this.videoCodec; if (!t || !t.byteLength) return this.initTracks = void 0, void (this.initData = void 0); var n = this.initData = Object(i.parseInitSegment)(t); e || (e = u(n.audio, a.ElementaryStreamTypes.AUDIO)), r || (r = u(n.video, a.ElementaryStreamTypes.VIDEO)); var o = {}; n.audio && n.video ? o.audiovideo = { container: "video/mp4", codec: e + "," + r, initSegment: t, id: "main" } : n.audio ? o.audio = { container: "audio/mp4", codec: e, initSegment: t, id: "audio" } : n.video ? o.video = { container: "video/mp4", codec: r, initSegment: t, id: "main" } : s.logger.warn("[passthrough-remuxer.ts]: initSegment does not contain moov or trak boxes."), this.initTracks = o }, e.remux = function (t, e, r, a, o) { var u = this.initPTS, c = this.lastEndDTS, d = { audio: void 0, video: void 0, text: a, id3: r, initSegment: void 0 }; Object(n.isFiniteNumber)(c) || (c = this.lastEndDTS = o || 0); var h = e.samples; if (!h || !h.length) return d; var f = { initPTS: void 0, timescale: 1 }, p = this.initData; if (p && p.length || (this.generateInitSegment(h), p = this.initData), !p || !p.length) return s.logger.warn("[passthrough-remuxer.ts]: Failed to generate initSegment."), d; this.emitInitSegment && (f.tracks = this.initTracks, this.emitInitSegment = !1), Object(n.isFiniteNumber)(u) || (this.initPTS = f.initPTS = u = l(p, h, c)); var g = Object(i.getDuration)(h, p), v = c, m = g + v; Object(i.offsetStartDTS)(p, h, u), g > 0 ? this.lastEndDTS = m : (s.logger.warn("Duration parsed from mp4 should be greater than zero"), this.resetNextTimestamp()); var y = !!p.audio, A = !!p.video, E = ""; y && (E += "audio"), A && (E += "video"); var T = { data1: h, startPTS: v, startDTS: v, endPTS: m, endDTS: m, type: E, hasAudio: y, hasVideo: A, nb: 1, dropped: 0 }; return d.audio = "audio" === T.type ? T : void 0, d.video = "audio" !== T.type ? T : void 0, d.text = a, d.id3 = r, d.initSegment = f, d }, t }(), l = function (t, e, r) { return Object(i.getStartDTS)(t, e) - r }; function u(t, e) { var r = null == t ? void 0 : t.codec; return r && r.length > 4 ? r : "hvc1" === r ? "hvc1.1.c.L120.90" : "av01" === r ? "av01.0.04M.08" : "avc1" === r || e === a.ElementaryStreamTypes.VIDEO ? "avc1.42e01e" : "mp4a.40.5" } e.default = o }, "./src/task-loop.ts":
/*!**************************!*\
    !*** ./src/task-loop.ts ***!
    \**************************/
/*! exports provided: default */function (t, e, r) { r.r(e), r.d(e, "default", (function () { return n })); var n = function () { function t() { this._boundTick = void 0, this._tickTimer = null, this._tickInterval = null, this._tickCallCount = 0, this._boundTick = this.tick.bind(this) } var e = t.prototype; return e.destroy = function () { this.onHandlerDestroying(), this.onHandlerDestroyed() }, e.onHandlerDestroying = function () { this.clearNextTick(), this.clearInterval() }, e.onHandlerDestroyed = function () { }, e.hasInterval = function () { return !!this._tickInterval }, e.hasNextTick = function () { return !!this._tickTimer }, e.setInterval = function (t) { return !this._tickInterval && (this._tickInterval = self.setInterval(this._boundTick, t), !0) }, e.clearInterval = function () { return !!this._tickInterval && (self.clearInterval(this._tickInterval), this._tickInterval = null, !0) }, e.clearNextTick = function () { return !!this._tickTimer && (self.clearTimeout(this._tickTimer), this._tickTimer = null, !0) }, e.tick = function () { this._tickCallCount++, 1 === this._tickCallCount && (this.doTick(), this._tickCallCount > 1 && this.tickImmediate(), this._tickCallCount = 0) }, e.tickImmediate = function () { this.clearNextTick(), this._tickTimer = self.setTimeout(this._boundTick, 0) }, e.doTick = function () { }, t }() }, "./src/types/cmcd.ts":
/*!***************************!*\
    !*** ./src/types/cmcd.ts ***!
    \***************************/
/*! exports provided: CMCDVersion, CMCDObjectType, CMCDStreamingFormat, CMCDStreamType */function (t, e, r) { r.r(e), r.d(e, "CMCDVersion", (function () { return s })), r.d(e, "CMCDObjectType", (function () { return n })), r.d(e, "CMCDStreamingFormat", (function () { return i })), r.d(e, "CMCDStreamType", (function () { return a })); var n, i, a, s = 1; !function (t) { t.MANIFEST = "m", t.AUDIO = "a", t.VIDEO = "v", t.MUXED = "av", t.INIT = "i", t.CAPTION = "c", t.TIMED_TEXT = "tt", t.KEY = "k", t.OTHER = "o" }(n || (n = {})), function (t) { t.DASH = "d", t.HLS = "h", t.SMOOTH = "s", t.OTHER = "o" }(i || (i = {})), function (t) { t.VOD = "v", t.LIVE = "l" }(a || (a = {})) }, "./src/types/level.ts":
/*!****************************!*\
    !*** ./src/types/level.ts ***!
    \****************************/
/*! exports provided: HlsSkip, getSkipValue, HlsUrlParameters, Level */function (t, e, r) { function n(t, e) { for (var r = 0; r < e.length; r++) { var n = e[r]; n.enumerable = n.enumerable || !1, n.configurable = !0, "value" in n && (n.writable = !0), Object.defineProperty(t, n.key, n) } } var i; function a(t, e) { var r = t.canSkipUntil, n = t.canSkipDateRanges, a = t.endSN; return r && (void 0 !== e ? e - a : 0) < r ? n ? i.v2 : i.Yes : i.No } r.r(e), r.d(e, "HlsSkip", (function () { return i })), r.d(e, "getSkipValue", (function () { return a })), r.d(e, "HlsUrlParameters", (function () { return s })), r.d(e, "Level", (function () { return o })), function (t) { t.No = "", t.Yes = "YES", t.v2 = "v2" }(i || (i = {})); var s = function () { function t(t, e, r) { this.msn = void 0, this.part = void 0, this.skip = void 0, this.msn = t, this.part = e, this.skip = r } return t.prototype.addDirectives = function (t) { var e = new self.URL(t); return void 0 !== this.msn && e.searchParams.set("_HLS_msn", this.msn.toString()), void 0 !== this.part && e.searchParams.set("_HLS_part", this.part.toString()), this.skip && e.searchParams.set("_HLS_skip", this.skip), e.toString() }, t }(), o = function () { function t(t) { this.attrs = void 0, this.audioCodec = void 0, this.bitrate = void 0, this.codecSet = void 0, this.height = void 0, this.id = void 0, this.name = void 0, this.videoCodec = void 0, this.width = void 0, this.unknownCodecs = void 0, this.audioGroupIds = void 0, this.details = void 0, this.fragmentError = 0, this.loadError = 0, this.loaded = void 0, this.realBitrate = 0, this.textGroupIds = void 0, this.url = void 0, this._urlId = 0, this.url = [t.url], this.attrs = t.attrs, this.bitrate = t.bitrate, t.details && (this.details = t.details), this.id = t.id || 0, this.name = t.name, this.width = t.width || 0, this.height = t.height || 0, this.audioCodec = t.audioCodec, this.videoCodec = t.videoCodec, this.unknownCodecs = t.unknownCodecs, this.codecSet = [t.videoCodec, t.audioCodec].filter((function (t) { return t })).join(",").replace(/\.[^.,]+/g, "") } var e, r, i; return e = t, (r = [{ key: "maxBitrate", get: function () { return Math.max(this.realBitrate, this.bitrate) } }, { key: "uri", get: function () { return this.url[this._urlId] || "" } }, { key: "urlId", get: function () { return this._urlId }, set: function (t) { var e = t % this.url.length; this._urlId !== e && (this.details = void 0, this._urlId = e) } }]) && n(e.prototype, r), i && n(e, i), t }() }, "./src/types/loader.ts":
/*!*****************************!*\
    !*** ./src/types/loader.ts ***!
    \*****************************/
/*! exports provided: PlaylistContextType, PlaylistLevelType */function (t, e, r) { var n, i; r.r(e), r.d(e, "PlaylistContextType", (function () { return n })), r.d(e, "PlaylistLevelType", (function () { return i })), function (t) { t.MANIFEST = "manifest", t.LEVEL = "level", t.AUDIO_TRACK = "audioTrack", t.SUBTITLE_TRACK = "subtitleTrack" }(n || (n = {})), function (t) { t.MAIN = "main", t.AUDIO = "audio", t.SUBTITLE = "subtitle" }(i || (i = {})) }, "./src/types/transmuxer.ts":
/*!*********************************!*\
    !*** ./src/types/transmuxer.ts ***!
    \*********************************/
/*! exports provided: ChunkMetadata */function (t, e, r) { r.r(e), r.d(e, "ChunkMetadata", (function () { return n })); var n = function (t, e, r, n, i, a) { void 0 === n && (n = 0), void 0 === i && (i = -1), void 0 === a && (a = !1), this.level = void 0, this.sn = void 0, this.part = void 0, this.id = void 0, this.size = void 0, this.partial = void 0, this.transmuxing = { start: 0, executeStart: 0, executeEnd: 0, end: 0 }, this.buffering = { audio: { start: 0, executeStart: 0, executeEnd: 0, end: 0 }, video: { start: 0, executeStart: 0, executeEnd: 0, end: 0 }, audiovideo: { start: 0, executeStart: 0, executeEnd: 0, end: 0 } }, this.level = t, this.sn = e, this.id = r, this.size = n, this.part = i, this.partial = a } }, "./src/utils/attr-list.ts":
/*!********************************!*\
    !*** ./src/utils/attr-list.ts ***!
    \********************************/
/*! exports provided: AttrList */function (t, e, r) { r.r(e), r.d(e, "AttrList", (function () { return a })); var n = /^(\d+)x(\d+)$/, i = /\s*(.+?)\s*=((?:\".*?\")|.*?)(?:,|$)/g, a = function () { function t(e) { for (var r in "string" == typeof e && (e = t.parseAttrList(e)), e) e.hasOwnProperty(r) && (this[r] = e[r]) } var e = t.prototype; return e.decimalInteger = function (t) { var e = parseInt(this[t], 10); return e > Number.MAX_SAFE_INTEGER ? 1 / 0 : e }, e.hexadecimalInteger = function (t) { if (this[t]) { var e = (this[t] || "0x").slice(2); e = (1 & e.length ? "0" : "") + e; for (var r = new Uint8Array(e.length / 2), n = 0; n < e.length / 2; n++)r[n] = parseInt(e.slice(2 * n, 2 * n + 2), 16); return r } return null }, e.hexadecimalIntegerAsNumber = function (t) { var e = parseInt(this[t], 16); return e > Number.MAX_SAFE_INTEGER ? 1 / 0 : e }, e.decimalFloatingPoint = function (t) { return parseFloat(this[t]) }, e.optionalFloat = function (t, e) { var r = this[t]; return r ? parseFloat(r) : e }, e.enumeratedString = function (t) { return this[t] }, e.bool = function (t) { return "YES" === this[t] }, e.decimalResolution = function (t) { var e = n.exec(this[t]); if (null !== e) return { width: parseInt(e[1], 10), height: parseInt(e[2], 10) } }, t.parseAttrList = function (t) { var e, r = {}; for (i.lastIndex = 0; null !== (e = i.exec(t));) { var n = e[2]; 0 === n.indexOf('"') && n.lastIndexOf('"') === n.length - 1 && (n = n.slice(1, -1)), r[e[1]] = n } return r }, t }() }, "./src/utils/binary-search.ts":
/*!************************************!*\
    !*** ./src/utils/binary-search.ts ***!
    \************************************/
/*! exports provided: default */function (t, e, r) { r.r(e), e.default = { search: function (t, e) { for (var r = 0, n = t.length - 1, i = null, a = null; r <= n;) { var s = e(a = t[i = (r + n) / 2 | 0]); if (s > 0) r = i + 1; else { if (!(s < 0)) return a; n = i - 1 } } return null } } }, "./src/utils/buffer-helper.ts":
/*!************************************!*\
    !*** ./src/utils/buffer-helper.ts ***!
    \************************************/
/*! exports provided: BufferHelper */function (t, e, r) { r.r(e), r.d(e, "BufferHelper", (function () { return a })); var n = r(/*! ./logger */"./src/utils/logger.ts"), i = { length: 0, start: function () { return 0 }, end: function () { return 0 } }, a = function () { function t() { } return t.isBuffered = function (e, r) { try { if (e) for (var n = t.getBuffered(e), i = 0; i < n.length; i++)if (r >= n.start(i) && r <= n.end(i)) return !0 } catch (t) { } return !1 }, t.bufferInfo = function (e, r, n) { try { if (e) { var i, a = t.getBuffered(e), s = []; for (i = 0; i < a.length; i++)s.push({ start: a.start(i), end: a.end(i) }); return this.bufferedInfo(s, r, n) } } catch (t) { } return { len: 0, start: r, end: r, nextStart: void 0 } }, t.bufferedInfo = function (t, e, r) { e = Math.max(0, e), t.sort((function (t, e) { var r = t.start - e.start; return r || e.end - t.end })); var n = []; if (r) for (var i = 0; i < t.length; i++) { var a = n.length; if (a) { var s = n[a - 1].end; t[i].start - s < r ? t[i].end > s && (n[a - 1].end = t[i].end) : n.push(t[i]) } else n.push(t[i]) } else n = t; for (var o, l = 0, u = e, c = e, d = 0; d < n.length; d++) { var h = n[d].start, f = n[d].end; if (e + r >= h && e < f) u = h, l = (c = f) - e; else if (e + r < h) { o = h; break } } return { len: l, start: u || 0, end: c || 0, nextStart: o } }, t.getBuffered = function (t) { try { return t.buffered } catch (t) { return n.logger.log("failed to get media.buffered", t), i } }, t }() }, "./src/utils/cea-608-parser.ts":
/*!*************************************!*\
    !*** ./src/utils/cea-608-parser.ts ***!
    \*************************************/
/*! exports provided: Row, CaptionScreen, default */function (t, e, r) { r.r(e), r.d(e, "Row", (function () { return y })), r.d(e, "CaptionScreen", (function () { return A })); var n, i = r(/*! ../utils/logger */"./src/utils/logger.ts"), a = { 42: 225, 92: 233, 94: 237, 95: 243, 96: 250, 123: 231, 124: 247, 125: 209, 126: 241, 127: 9608, 128: 174, 129: 176, 130: 189, 131: 191, 132: 8482, 133: 162, 134: 163, 135: 9834, 136: 224, 137: 32, 138: 232, 139: 226, 140: 234, 141: 238, 142: 244, 143: 251, 144: 193, 145: 201, 146: 211, 147: 218, 148: 220, 149: 252, 150: 8216, 151: 161, 152: 42, 153: 8217, 154: 9473, 155: 169, 156: 8480, 157: 8226, 158: 8220, 159: 8221, 160: 192, 161: 194, 162: 199, 163: 200, 164: 202, 165: 203, 166: 235, 167: 206, 168: 207, 169: 239, 170: 212, 171: 217, 172: 249, 173: 219, 174: 171, 175: 187, 176: 195, 177: 227, 178: 205, 179: 204, 180: 236, 181: 210, 182: 242, 183: 213, 184: 245, 185: 123, 186: 125, 187: 92, 188: 94, 189: 95, 190: 124, 191: 8764, 192: 196, 193: 228, 194: 214, 195: 246, 196: 223, 197: 165, 198: 164, 199: 9475, 200: 197, 201: 229, 202: 216, 203: 248, 204: 9487, 205: 9491, 206: 9495, 207: 9499 }, s = function (t) { var e = t; return a.hasOwnProperty(t) && (e = a[t]), String.fromCharCode(e) }, o = 15, l = 100, u = { 17: 1, 18: 3, 21: 5, 22: 7, 23: 9, 16: 11, 19: 12, 20: 14 }, c = { 17: 2, 18: 4, 21: 6, 22: 8, 23: 10, 19: 13, 20: 15 }, d = { 25: 1, 26: 3, 29: 5, 30: 7, 31: 9, 24: 11, 27: 12, 28: 14 }, h = { 25: 2, 26: 4, 29: 6, 30: 8, 31: 10, 27: 13, 28: 15 }, f = ["white", "green", "blue", "cyan", "red", "yellow", "magenta", "black", "transparent"]; !function (t) { t[t.ERROR = 0] = "ERROR", t[t.TEXT = 1] = "TEXT", t[t.WARNING = 2] = "WARNING", t[t.INFO = 2] = "INFO", t[t.DEBUG = 3] = "DEBUG", t[t.DATA = 3] = "DATA" }(n || (n = {})); var p = function () { function t() { this.time = null, this.verboseLevel = n.ERROR } return t.prototype.log = function (t, e) { this.verboseLevel >= t && i.logger.log(this.time + " [" + t + "] " + e) }, t }(), g = function (t) { for (var e = [], r = 0; r < t.length; r++)e.push(t[r].toString(16)); return e }, v = function () { function t(t, e, r, n, i) { this.foreground = void 0, this.underline = void 0, this.italics = void 0, this.background = void 0, this.flash = void 0, this.foreground = t || "white", this.underline = e || !1, this.italics = r || !1, this.background = n || "black", this.flash = i || !1 } var e = t.prototype; return e.reset = function () { this.foreground = "white", this.underline = !1, this.italics = !1, this.background = "black", this.flash = !1 }, e.setStyles = function (t) { for (var e = ["foreground", "underline", "italics", "background", "flash"], r = 0; r < e.length; r++) { var n = e[r]; t.hasOwnProperty(n) && (this[n] = t[n]) } }, e.isDefault = function () { return "white" === this.foreground && !this.underline && !this.italics && "black" === this.background && !this.flash }, e.equals = function (t) { return this.foreground === t.foreground && this.underline === t.underline && this.italics === t.italics && this.background === t.background && this.flash === t.flash }, e.copy = function (t) { this.foreground = t.foreground, this.underline = t.underline, this.italics = t.italics, this.background = t.background, this.flash = t.flash }, e.toString = function () { return "color=" + this.foreground + ", underline=" + this.underline + ", italics=" + this.italics + ", background=" + this.background + ", flash=" + this.flash }, t }(), m = function () { function t(t, e, r, n, i, a) { this.uchar = void 0, this.penState = void 0, this.uchar = t || " ", this.penState = new v(e, r, n, i, a) } var e = t.prototype; return e.reset = function () { this.uchar = " ", this.penState.reset() }, e.setChar = function (t, e) { this.uchar = t, this.penState.copy(e) }, e.setPenState = function (t) { this.penState.copy(t) }, e.equals = function (t) { return this.uchar === t.uchar && this.penState.equals(t.penState) }, e.copy = function (t) { this.uchar = t.uchar, this.penState.copy(t.penState) }, e.isEmpty = function () { return " " === this.uchar && this.penState.isDefault() }, t }(), y = function () { function t(t) { this.chars = void 0, this.pos = void 0, this.currPenState = void 0, this.cueStartTime = void 0, this.logger = void 0, this.chars = []; for (var e = 0; e < l; e++)this.chars.push(new m); this.logger = t, this.pos = 0, this.currPenState = new v } var e = t.prototype; return e.equals = function (t) { for (var e = !0, r = 0; r < l; r++)if (!this.chars[r].equals(t.chars[r])) { e = !1; break } return e }, e.copy = function (t) { for (var e = 0; e < l; e++)this.chars[e].copy(t.chars[e]) }, e.isEmpty = function () { for (var t = !0, e = 0; e < l; e++)if (!this.chars[e].isEmpty()) { t = !1; break } return t }, e.setCursor = function (t) { this.pos !== t && (this.pos = t), this.pos < 0 ? (this.logger.log(n.DEBUG, "Negative cursor position " + this.pos), this.pos = 0) : this.pos > l && (this.logger.log(n.DEBUG, "Too large cursor position " + this.pos), this.pos = l) }, e.moveCursor = function (t) { var e = this.pos + t; if (t > 1) for (var r = this.pos + 1; r < e + 1; r++)this.chars[r].setPenState(this.currPenState); this.setCursor(e) }, e.backSpace = function () { this.moveCursor(-1), this.chars[this.pos].setChar(" ", this.currPenState) }, e.insertChar = function (t) { t >= 144 && this.backSpace(); var e = s(t); this.pos >= l ? this.logger.log(n.ERROR, "Cannot insert " + t.toString(16) + " (" + e + ") at position " + this.pos + ". Skipping it!") : (this.chars[this.pos].setChar(e, this.currPenState), this.moveCursor(1)) }, e.clearFromPos = function (t) { var e; for (e = t; e < l; e++)this.chars[e].reset() }, e.clear = function () { this.clearFromPos(0), this.pos = 0, this.currPenState.reset() }, e.clearToEndOfRow = function () { this.clearFromPos(this.pos) }, e.getTextString = function () { for (var t = [], e = !0, r = 0; r < l; r++) { var n = this.chars[r].uchar; " " !== n && (e = !1), t.push(n) } return e ? "" : t.join("") }, e.setPenStyles = function (t) { this.currPenState.setStyles(t), this.chars[this.pos].setPenState(this.currPenState) }, t }(), A = function () { function t(t) { this.rows = void 0, this.currRow = void 0, this.nrRollUpRows = void 0, this.lastOutputScreen = void 0, this.logger = void 0, this.rows = []; for (var e = 0; e < o; e++)this.rows.push(new y(t)); this.logger = t, this.currRow = 14, this.nrRollUpRows = null, this.lastOutputScreen = null, this.reset() } var e = t.prototype; return e.reset = function () { for (var t = 0; t < o; t++)this.rows[t].clear(); this.currRow = 14 }, e.equals = function (t) { for (var e = !0, r = 0; r < o; r++)if (!this.rows[r].equals(t.rows[r])) { e = !1; break } return e }, e.copy = function (t) { for (var e = 0; e < o; e++)this.rows[e].copy(t.rows[e]) }, e.isEmpty = function () { for (var t = !0, e = 0; e < o; e++)if (!this.rows[e].isEmpty()) { t = !1; break } return t }, e.backSpace = function () { this.rows[this.currRow].backSpace() }, e.clearToEndOfRow = function () { this.rows[this.currRow].clearToEndOfRow() }, e.insertChar = function (t) { this.rows[this.currRow].insertChar(t) }, e.setPen = function (t) { this.rows[this.currRow].setPenStyles(t) }, e.moveCursor = function (t) { this.rows[this.currRow].moveCursor(t) }, e.setCursor = function (t) { this.logger.log(n.INFO, "setCursor: " + t), this.rows[this.currRow].setCursor(t) }, e.setPAC = function (t) { this.logger.log(n.INFO, "pacData = " + JSON.stringify(t)); var e = t.row - 1; if (this.nrRollUpRows && e < this.nrRollUpRows - 1 && (e = this.nrRollUpRows - 1), this.nrRollUpRows && this.currRow !== e) { for (var r = 0; r < o; r++)this.rows[r].clear(); var i = this.currRow + 1 - this.nrRollUpRows, a = this.lastOutputScreen; if (a) { var s = a.rows[i].cueStartTime, l = this.logger.time; if (s && null !== l && s < l) for (var u = 0; u < this.nrRollUpRows; u++)this.rows[e - this.nrRollUpRows + u + 1].copy(a.rows[i + u]) } } this.currRow = e; var c = this.rows[this.currRow]; if (null !== t.indent) { var d = t.indent, h = Math.max(d - 1, 0); c.setCursor(t.indent), t.color = c.chars[h].penState.foreground } var f = { foreground: t.color, underline: t.underline, italics: t.italics, background: "black", flash: !1 }; this.setPen(f) }, e.setBkgData = function (t) { this.logger.log(n.INFO, "bkgData = " + JSON.stringify(t)), this.backSpace(), this.setPen(t), this.insertChar(32) }, e.setRollUpRows = function (t) { this.nrRollUpRows = t }, e.rollUp = function () { if (null !== this.nrRollUpRows) { this.logger.log(n.TEXT, this.getDisplayText()); var t = this.currRow + 1 - this.nrRollUpRows, e = this.rows.splice(t, 1)[0]; e.clear(), this.rows.splice(this.currRow, 0, e), this.logger.log(n.INFO, "Rolling up") } else this.logger.log(n.DEBUG, "roll_up but nrRollUpRows not set yet") }, e.getDisplayText = function (t) { t = t || !1; for (var e = [], r = "", n = -1, i = 0; i < o; i++) { var a = this.rows[i].getTextString(); a && (n = i + 1, t ? e.push("Row " + n + ": '" + a + "'") : e.push(a.trim())) } return e.length > 0 && (r = t ? "[" + e.join(" | ") + "]" : e.join("\n")), r }, e.getTextAndFormat = function () { return this.rows }, t }(), E = function () { function t(t, e, r) { this.chNr = void 0, this.outputFilter = void 0, this.mode = void 0, this.verbose = void 0, this.displayedMemory = void 0, this.nonDisplayedMemory = void 0, this.lastOutputScreen = void 0, this.currRollUpRow = void 0, this.writeScreen = void 0, this.cueStartTime = void 0, this.logger = void 0, this.chNr = t, this.outputFilter = e, this.mode = null, this.verbose = 0, this.displayedMemory = new A(r), this.nonDisplayedMemory = new A(r), this.lastOutputScreen = new A(r), this.currRollUpRow = this.displayedMemory.rows[14], this.writeScreen = this.displayedMemory, this.mode = null, this.cueStartTime = null, this.logger = r } var e = t.prototype; return e.reset = function () { this.mode = null, this.displayedMemory.reset(), this.nonDisplayedMemory.reset(), this.lastOutputScreen.reset(), this.outputFilter.reset(), this.currRollUpRow = this.displayedMemory.rows[14], this.writeScreen = this.displayedMemory, this.mode = null, this.cueStartTime = null }, e.getHandler = function () { return this.outputFilter }, e.setHandler = function (t) { this.outputFilter = t }, e.setPAC = function (t) { this.writeScreen.setPAC(t) }, e.setBkgData = function (t) { this.writeScreen.setBkgData(t) }, e.setMode = function (t) { t !== this.mode && (this.mode = t, this.logger.log(n.INFO, "MODE=" + t), "MODE_POP-ON" === this.mode ? this.writeScreen = this.nonDisplayedMemory : (this.writeScreen = this.displayedMemory, this.writeScreen.reset()), "MODE_ROLL-UP" !== this.mode && (this.displayedMemory.nrRollUpRows = null, this.nonDisplayedMemory.nrRollUpRows = null), this.mode = t) }, e.insertChars = function (t) { for (var e = 0; e < t.length; e++)this.writeScreen.insertChar(t[e]); var r = this.writeScreen === this.displayedMemory ? "DISP" : "NON_DISP"; this.logger.log(n.INFO, r + ": " + this.writeScreen.getDisplayText(!0)), "MODE_PAINT-ON" !== this.mode && "MODE_ROLL-UP" !== this.mode || (this.logger.log(n.TEXT, "DISPLAYED: " + this.displayedMemory.getDisplayText(!0)), this.outputDataUpdate()) }, e.ccRCL = function () { this.logger.log(n.INFO, "RCL - Resume Caption Loading"), this.setMode("MODE_POP-ON") }, e.ccBS = function () { this.logger.log(n.INFO, "BS - BackSpace"), "MODE_TEXT" !== this.mode && (this.writeScreen.backSpace(), this.writeScreen === this.displayedMemory && this.outputDataUpdate()) }, e.ccAOF = function () { }, e.ccAON = function () { }, e.ccDER = function () { this.logger.log(n.INFO, "DER- Delete to End of Row"), this.writeScreen.clearToEndOfRow(), this.outputDataUpdate() }, e.ccRU = function (t) { this.logger.log(n.INFO, "RU(" + t + ") - Roll Up"), this.writeScreen = this.displayedMemory, this.setMode("MODE_ROLL-UP"), this.writeScreen.setRollUpRows(t) }, e.ccFON = function () { this.logger.log(n.INFO, "FON - Flash On"), this.writeScreen.setPen({ flash: !0 }) }, e.ccRDC = function () { this.logger.log(n.INFO, "RDC - Resume Direct Captioning"), this.setMode("MODE_PAINT-ON") }, e.ccTR = function () { this.logger.log(n.INFO, "TR"), this.setMode("MODE_TEXT") }, e.ccRTD = function () { this.logger.log(n.INFO, "RTD"), this.setMode("MODE_TEXT") }, e.ccEDM = function () { this.logger.log(n.INFO, "EDM - Erase Displayed Memory"), this.displayedMemory.reset(), this.outputDataUpdate(!0) }, e.ccCR = function () { this.logger.log(n.INFO, "CR - Carriage Return"), this.writeScreen.rollUp(), this.outputDataUpdate(!0) }, e.ccENM = function () { this.logger.log(n.INFO, "ENM - Erase Non-displayed Memory"), this.nonDisplayedMemory.reset() }, e.ccEOC = function () { if (this.logger.log(n.INFO, "EOC - End Of Caption"), "MODE_POP-ON" === this.mode) { var t = this.displayedMemory; this.displayedMemory = this.nonDisplayedMemory, this.nonDisplayedMemory = t, this.writeScreen = this.nonDisplayedMemory, this.logger.log(n.TEXT, "DISP: " + this.displayedMemory.getDisplayText()) } this.outputDataUpdate(!0) }, e.ccTO = function (t) { this.logger.log(n.INFO, "TO(" + t + ") - Tab Offset"), this.writeScreen.moveCursor(t) }, e.ccMIDROW = function (t) { var e = { flash: !1 }; if (e.underline = t % 2 == 1, e.italics = t >= 46, e.italics) e.foreground = "white"; else { var r = Math.floor(t / 2) - 16; e.foreground = ["white", "green", "blue", "cyan", "red", "yellow", "magenta"][r] } this.logger.log(n.INFO, "MIDROW: " + JSON.stringify(e)), this.writeScreen.setPen(e) }, e.outputDataUpdate = function (t) { void 0 === t && (t = !1); var e = this.logger.time; null !== e && this.outputFilter && (null !== this.cueStartTime || this.displayedMemory.isEmpty() ? this.displayedMemory.equals(this.lastOutputScreen) || (this.outputFilter.newCue(this.cueStartTime, e, this.lastOutputScreen), t && this.outputFilter.dispatchCue && this.outputFilter.dispatchCue(), this.cueStartTime = this.displayedMemory.isEmpty() ? null : e) : this.cueStartTime = e, this.lastOutputScreen.copy(this.displayedMemory)) }, e.cueSplitAtTime = function (t) { this.outputFilter && (this.displayedMemory.isEmpty() || (this.outputFilter.newCue && this.outputFilter.newCue(this.cueStartTime, t, this.displayedMemory), this.cueStartTime = t)) }, t }(), T = function () { function t(t, e, r) { this.channels = void 0, this.currentChannel = 0, this.cmdHistory = void 0, this.logger = void 0; var n = new p; this.channels = [null, new E(t, e, n), new E(t + 1, r, n)], this.cmdHistory = { a: null, b: null }, this.logger = n } var e = t.prototype; return e.getHandler = function (t) { return this.channels[t].getHandler() }, e.setHandler = function (t, e) { this.channels[t].setHandler(e) }, e.addData = function (t, e) { var r, i, a, s = !1; this.logger.time = t; for (var o = 0; o < e.length; o += 2)if (i = 127 & e[o], a = 127 & e[o + 1], 0 !== i || 0 !== a) { if (this.logger.log(n.DATA, "[" + g([e[o], e[o + 1]]) + "] -> (" + g([i, a]) + ")"), (r = this.parseCmd(i, a)) || (r = this.parseMidrow(i, a)), r || (r = this.parsePAC(i, a)), r || (r = this.parseBackgroundAttributes(i, a)), !r && (s = this.parseChars(i, a))) { var l = this.currentChannel; l && l > 0 ? this.channels[l].insertChars(s) : this.logger.log(n.WARNING, "No channel found yet. TEXT-MODE?") } r || s || this.logger.log(n.WARNING, "Couldn't parse cleaned data " + g([i, a]) + " orig: " + g([e[o], e[o + 1]])) } }, e.parseCmd = function (t, e) { var r = this.cmdHistory; if (!((20 === t || 28 === t || 21 === t || 29 === t) && e >= 32 && e <= 47 || (23 === t || 31 === t) && e >= 33 && e <= 35)) return !1; if (k(t, e, r)) return b(null, null, r), this.logger.log(n.DEBUG, "Repeated command (" + g([t, e]) + ") is dropped"), !0; var i = 20 === t || 21 === t || 23 === t ? 1 : 2, a = this.channels[i]; return 20 === t || 21 === t || 28 === t || 29 === t ? 32 === e ? a.ccRCL() : 33 === e ? a.ccBS() : 34 === e ? a.ccAOF() : 35 === e ? a.ccAON() : 36 === e ? a.ccDER() : 37 === e ? a.ccRU(2) : 38 === e ? a.ccRU(3) : 39 === e ? a.ccRU(4) : 40 === e ? a.ccFON() : 41 === e ? a.ccRDC() : 42 === e ? a.ccTR() : 43 === e ? a.ccRTD() : 44 === e ? a.ccEDM() : 45 === e ? a.ccCR() : 46 === e ? a.ccENM() : 47 === e && a.ccEOC() : a.ccTO(e - 32), b(t, e, r), this.currentChannel = i, !0 }, e.parseMidrow = function (t, e) { var r = 0; if ((17 === t || 25 === t) && e >= 32 && e <= 47) { if ((r = 17 === t ? 1 : 2) !== this.currentChannel) return this.logger.log(n.ERROR, "Mismatch channel in midrow parsing"), !1; var i = this.channels[r]; return !!i && (i.ccMIDROW(e), this.logger.log(n.DEBUG, "MIDROW (" + g([t, e]) + ")"), !0) } return !1 }, e.parsePAC = function (t, e) { var r, n = this.cmdHistory; if (!((t >= 17 && t <= 23 || t >= 25 && t <= 31) && e >= 64 && e <= 127 || (16 === t || 24 === t) && e >= 64 && e <= 95)) return !1; if (k(t, e, n)) return b(null, null, n), !0; var i = t <= 23 ? 1 : 2; r = e >= 64 && e <= 95 ? 1 === i ? u[t] : d[t] : 1 === i ? c[t] : h[t]; var a = this.channels[i]; return !!a && (a.setPAC(this.interpretPAC(r, e)), b(t, e, n), this.currentChannel = i, !0) }, e.interpretPAC = function (t, e) { var r, n = { color: null, italics: !1, indent: null, underline: !1, row: t }; return r = e > 95 ? e - 96 : e - 64, n.underline = 1 == (1 & r), r <= 13 ? n.color = ["white", "green", "blue", "cyan", "red", "yellow", "magenta", "white"][Math.floor(r / 2)] : r <= 15 ? (n.italics = !0, n.color = "white") : n.indent = 4 * Math.floor((r - 16) / 2), n }, e.parseChars = function (t, e) { var r, i, a = null, o = null; if (t >= 25 ? (r = 2, o = t - 8) : (r = 1, o = t), o >= 17 && o <= 19 ? (i = 17 === o ? e + 80 : 18 === o ? e + 112 : e + 144, this.logger.log(n.INFO, "Special char '" + s(i) + "' in channel " + r), a = [i]) : t >= 32 && t <= 127 && (a = 0 === e ? [t] : [t, e]), a) { var l = g(a); this.logger.log(n.DEBUG, "Char codes =  " + l.join(",")), b(t, e, this.cmdHistory) } return a }, e.parseBackgroundAttributes = function (t, e) { var r; if (!((16 === t || 24 === t) && e >= 32 && e <= 47 || (23 === t || 31 === t) && e >= 45 && e <= 47)) return !1; var n = {}; 16 === t || 24 === t ? (r = Math.floor((e - 32) / 2), n.background = f[r], e % 2 == 1 && (n.background = n.background + "_semi")) : 45 === e ? n.background = "transparent" : (n.foreground = "black", 47 === e && (n.underline = !0)); var i = t <= 23 ? 1 : 2; return this.channels[i].setBkgData(n), b(t, e, this.cmdHistory), !0 }, e.reset = function () { for (var t = 0; t < Object.keys(this.channels).length; t++) { var e = this.channels[t]; e && e.reset() } this.cmdHistory = { a: null, b: null } }, e.cueSplitAtTime = function (t) { for (var e = 0; e < this.channels.length; e++) { var r = this.channels[e]; r && r.cueSplitAtTime(t) } }, t }(); function b(t, e, r) { r.a = t, r.b = e } function k(t, e, r) { return r.a === t && r.b === e } e.default = T }, "./src/utils/codecs.ts":
/*!*****************************!*\
    !*** ./src/utils/codecs.ts ***!
    \*****************************/
/*! exports provided: isCodecType, isCodecSupportedInMp4 */function (t, e, r) { r.r(e), r.d(e, "isCodecType", (function () { return i })), r.d(e, "isCodecSupportedInMp4", (function () { return a })); var n = { audio: { a3ds: !0, "ac-3": !0, "ac-4": !0, alac: !0, alaw: !0, dra1: !0, "dts+": !0, "dts-": !0, dtsc: !0, dtse: !0, dtsh: !0, "ec-3": !0, enca: !0, g719: !0, g726: !0, m4ae: !0, mha1: !0, mha2: !0, mhm1: !0, mhm2: !0, mlpa: !0, mp4a: !0, "raw ": !0, Opus: !0, samr: !0, sawb: !0, sawp: !0, sevc: !0, sqcp: !0, ssmv: !0, twos: !0, ulaw: !0 }, video: { avc1: !0, avc2: !0, avc3: !0, avc4: !0, avcp: !0, av01: !0, drac: !0, dvav: !0, dvhe: !0, encv: !0, hev1: !0, hvc1: !0, mjp2: !0, mp4v: !0, mvc1: !0, mvc2: !0, mvc3: !0, mvc4: !0, resv: !0, rv60: !0, s263: !0, svc1: !0, svc2: !0, "vc-1": !0, vp08: !0, vp09: !0 }, text: { stpp: !0, wvtt: !0 } }; function i(t, e) { var r = n[e]; return !!r && !0 === r[t.slice(0, 4)] } function a(t, e) { return MediaSource.isTypeSupported((e || "video") + '/mp4;codecs="' + t + '"') } }, "./src/utils/cues.ts":
/*!***************************!*\
    !*** ./src/utils/cues.ts ***!
    \***************************/
/*! exports provided: default */function (t, e, r) { r.r(e); var n = r(/*! ./vttparser */"./src/utils/vttparser.ts"), i = r(/*! ./webvtt-parser */"./src/utils/webvtt-parser.ts"), a = r(/*! ./texttrack-utils */"./src/utils/texttrack-utils.ts"), s = /\s/, o = { newCue: function (t, e, r, o) { for (var l, u, c, d, h, f = [], p = self.VTTCue || self.TextTrackCue, g = 0; g < o.rows.length; g++)if (c = !0, d = 0, h = "", !(l = o.rows[g]).isEmpty()) { for (var v = 0; v < l.chars.length; v++)s.test(l.chars[v].uchar) && c ? d++ : (h += l.chars[v].uchar, c = !1); l.cueStartTime = e, e === r && (r += 1e-4), d >= 16 ? d-- : d++; var m = Object(n.fixLineBreaks)(h.trim()), y = Object(i.generateCueId)(e, r, m); t && t.cues && t.cues.getCueById(y) || ((u = new p(e, r, m)).id = y, u.line = g + 1, u.align = "left", u.position = 10 + Math.min(80, 10 * Math.floor(8 * d / 32)), f.push(u)) } return t && f.length && (f.sort((function (t, e) { return "auto" === t.line || "auto" === e.line ? 0 : t.line > 8 && e.line > 8 ? e.line - t.line : t.line - e.line })), f.forEach((function (e) { return Object(a.addCueToTrack)(t, e) }))), f } }; e.default = o }, "./src/utils/discontinuities.ts":
/*!**************************************!*\
    !*** ./src/utils/discontinuities.ts ***!
    \**************************************/
/*! exports provided: findFirstFragWithCC, shouldAlignOnDiscontinuities, findDiscontinuousReferenceFrag, adjustSlidingStart, alignStream, alignPDT, alignFragmentByPDTDelta, alignMediaPlaylistByPDT */function (t, e, r) { r.r(e), r.d(e, "findFirstFragWithCC", (function () { return s })), r.d(e, "shouldAlignOnDiscontinuities", (function () { return o })), r.d(e, "findDiscontinuousReferenceFrag", (function () { return l })), r.d(e, "adjustSlidingStart", (function () { return c })), r.d(e, "alignStream", (function () { return d })), r.d(e, "alignPDT", (function () { return h })), r.d(e, "alignFragmentByPDTDelta", (function () { return f })), r.d(e, "alignMediaPlaylistByPDT", (function () { return p })); var n = r(/*! ./src/polyfills/number */"./src/polyfills/number.ts"), i = r(/*! ./logger */"./src/utils/logger.ts"), a = r(/*! ../controller/level-helper */"./src/controller/level-helper.ts"); function s(t, e) { for (var r = null, n = 0, i = t.length; n < i; n++) { var a = t[n]; if (a && a.cc === e) { r = a; break } } return r } function o(t, e, r) { return !(!e.details || !(r.endCC > r.startCC || t && t.cc < r.startCC)) } function l(t, e) { var r = t.fragments, n = e.fragments; if (n.length && r.length) { var a = s(r, n[0].cc); if (a && (!a || a.startPTS)) return a; i.logger.log("No frag in previous level to align on") } else i.logger.log("No fragments to align") } function u(t, e) { if (t) { var r = t.start + e; t.start = t.startPTS = r, t.endPTS = r + t.duration } } function c(t, e) { for (var r = e.fragments, n = 0, i = r.length; n < i; n++)u(r[n], t); e.fragmentHint && u(e.fragmentHint, t), e.alignedSliding = !0 } function d(t, e, r) { e && (function (t, e, r) { if (o(t, r, e)) { var a = l(r.details, e); a && Object(n.isFiniteNumber)(a.start) && (i.logger.log("Adjusting PTS using last level due to CC increase within current level " + e.url), c(a.start, e)) } }(t, r, e), !r.alignedSliding && e.details && h(r, e.details), r.alignedSliding || !e.details || r.skippedSegments || Object(a.adjustSliding)(e.details, r)) } function h(t, e) { if (e.fragments.length && t.hasProgramDateTime && e.hasProgramDateTime) { var r = e.fragments[0].programDateTime, a = t.fragments[0].programDateTime, s = (a - r) / 1e3 + e.fragments[0].start; s && Object(n.isFiniteNumber)(s) && (i.logger.log("Adjusting PTS using programDateTime delta " + (a - r) + "ms, sliding:" + s.toFixed(3) + " " + t.url + " "), c(s, t)) } } function f(t, e) { var r = t.programDateTime; if (r) { var n = (r - e) / 1e3; t.start = t.startPTS = n, t.endPTS = n + t.duration } } function p(t, e) { if (e.fragments.length && t.hasProgramDateTime && e.hasProgramDateTime) { var r = e.fragments[0].programDateTime - 1e3 * e.fragments[0].start; t.fragments.forEach((function (t) { f(t, r) })), t.fragmentHint && f(t.fragmentHint, r), t.alignedSliding = !0 } } }, "./src/utils/ewma-bandwidth-estimator.ts":
/*!***********************************************!*\
    !*** ./src/utils/ewma-bandwidth-estimator.ts ***!
    \***********************************************/
/*! exports provided: default */function (t, e, r) { r.r(e); var n = r(/*! ../utils/ewma */"./src/utils/ewma.ts"), i = function () { function t(t, e, r) { this.defaultEstimate_ = void 0, this.minWeight_ = void 0, this.minDelayMs_ = void 0, this.slow_ = void 0, this.fast_ = void 0, this.defaultEstimate_ = r, this.minWeight_ = .001, this.minDelayMs_ = 50, this.slow_ = new n.default(t), this.fast_ = new n.default(e) } var e = t.prototype; return e.update = function (t, e) { var r = this.slow_, i = this.fast_; this.slow_.halfLife !== t && (this.slow_ = new n.default(t, r.getEstimate(), r.getTotalWeight())), this.fast_.halfLife !== e && (this.fast_ = new n.default(e, i.getEstimate(), i.getTotalWeight())) }, e.sample = function (t, e) { var r = (t = Math.max(t, this.minDelayMs_)) / 1e3, n = 8 * e / r; this.fast_.sample(r, n), this.slow_.sample(r, n) }, e.canEstimate = function () { var t = this.fast_; return t && t.getTotalWeight() >= this.minWeight_ }, e.getEstimate = function () { return this.canEstimate() ? Math.min(this.fast_.getEstimate(), this.slow_.getEstimate()) : this.defaultEstimate_ }, e.destroy = function () { }, t }(); e.default = i }, "./src/utils/ewma.ts":
/*!***************************!*\
    !*** ./src/utils/ewma.ts ***!
    \***************************/
/*! exports provided: default */function (t, e, r) { r.r(e); var n = function () { function t(t, e, r) { void 0 === e && (e = 0), void 0 === r && (r = 0), this.halfLife = void 0, this.alpha_ = void 0, this.estimate_ = void 0, this.totalWeight_ = void 0, this.halfLife = t, this.alpha_ = t ? Math.exp(Math.log(.5) / t) : 0, this.estimate_ = e, this.totalWeight_ = r } var e = t.prototype; return e.sample = function (t, e) { var r = Math.pow(this.alpha_, t); this.estimate_ = e * (1 - r) + r * this.estimate_, this.totalWeight_ += t }, e.getTotalWeight = function () { return this.totalWeight_ }, e.getEstimate = function () { if (this.alpha_) { var t = 1 - Math.pow(this.alpha_, this.totalWeight_); if (t) return this.estimate_ / t } return this.estimate_ }, t }(); e.default = n }, "./src/utils/fetch-loader.ts":
/*!***********************************!*\
    !*** ./src/utils/fetch-loader.ts ***!
    \***********************************/
/*! exports provided: fetchSupported, default */function (t, e, r) { r.r(e), r.d(e, "fetchSupported", (function () { return h })); var n = r(/*! ./src/polyfills/number */"./src/polyfills/number.ts"), i = r(/*! ../loader/load-stats */"./src/loader/load-stats.ts"), a = r(/*! ../demux/chunk-cache */"./src/demux/chunk-cache.ts"); function s(t) { var e = "function" == typeof Map ? new Map : void 0; return s = function (t) { if (null === t || (r = t, -1 === Function.toString.call(r).indexOf("[native code]"))) return t; var r; if ("function" != typeof t) throw new TypeError("Super expression must either be null or a function"); if (void 0 !== e) { if (e.has(t)) return e.get(t); e.set(t, n) } function n() { return o(t, arguments, c(this).constructor) } return n.prototype = Object.create(t.prototype, { constructor: { value: n, enumerable: !1, writable: !0, configurable: !0 } }), u(n, t) }, s(t) } function o(t, e, r) { return o = l() ? Reflect.construct : function (t, e, r) { var n = [null]; n.push.apply(n, e); var i = new (Function.bind.apply(t, n)); return r && u(i, r.prototype), i }, o.apply(null, arguments) } function l() { if ("undefined" == typeof Reflect || !Reflect.construct) return !1; if (Reflect.construct.sham) return !1; if ("function" == typeof Proxy) return !0; try { return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], (function () { }))), !0 } catch (t) { return !1 } } function u(t, e) { return u = Object.setPrototypeOf || function (t, e) { return t.__proto__ = e, t }, u(t, e) } function c(t) { return c = Object.setPrototypeOf ? Object.getPrototypeOf : function (t) { return t.__proto__ || Object.getPrototypeOf(t) }, c(t) } function d() { return d = Object.assign || function (t) { for (var e = 1; e < arguments.length; e++) { var r = arguments[e]; for (var n in r) Object.prototype.hasOwnProperty.call(r, n) && (t[n] = r[n]) } return t }, d.apply(this, arguments) } function h() { if (self.fetch && self.AbortController && self.ReadableStream && self.Request) try { return new self.ReadableStream({}), !0 } catch (t) { } return !1 } var f = function () { function t(t) { this.fetchSetup = void 0, this.requestTimeout = void 0, this.request = void 0, this.response = void 0, this.controller = void 0, this.context = void 0, this.config = null, this.callbacks = null, this.stats = void 0, this.loader = null, this.fetchSetup = t.fetchSetup || p, this.controller = new self.AbortController, this.stats = new i.LoadStats } var e = t.prototype; return e.destroy = function () { this.loader = this.callbacks = null, this.abortInternal() }, e.abortInternal = function () { var t = this.response; t && t.ok || (this.stats.aborted = !0, this.controller.abort()) }, e.abort = function () { var t; this.abortInternal(), null !== (t = this.callbacks) && void 0 !== t && t.onAbort && this.callbacks.onAbort(this.stats, this.context, this.response) }, e.load = function (t, e, r) { var i = this, a = this.stats; if (a.loading.start) throw new Error("Loader can only be used once."); a.loading.start = self.performance.now(); var s = function (t, e) { var r = { method: "GET", mode: "cors", credentials: "same-origin", signal: e, headers: new self.Headers(d({}, t.headers)) }; return t.rangeEnd && r.headers.set("Range", "bytes=" + t.rangeStart + "-" + String(t.rangeEnd - 1)), r }(t, this.controller.signal), o = r.onProgress, l = "arraybuffer" === t.responseType, u = l ? "byteLength" : "length"; this.context = t, this.config = e, this.callbacks = r, this.request = this.fetchSetup(t, s), self.clearTimeout(this.requestTimeout), this.requestTimeout = self.setTimeout((function () { i.abortInternal(), r.onTimeout(a, t, i.response) }), e.timeout), self.fetch(this.request).then((function (r) { if (i.response = i.loader = r, !r.ok) { var s = r.status, u = r.statusText; throw new g(u || "fetch, bad network response", s, r) } return a.loading.first = Math.max(self.performance.now(), a.loading.start), a.total = parseInt(r.headers.get("Content-Length") || "0"), o && Object(n.isFiniteNumber)(e.highWaterMark) ? i.loadProgressively(r, a, t, e.highWaterMark, o) : l ? r.arrayBuffer() : r.text() })).then((function (s) { var l = i.response; self.clearTimeout(i.requestTimeout), a.loading.end = Math.max(self.performance.now(), a.loading.first), a.loaded = a.total = s[u]; var c = { url: l.url, data: s }; o && !Object(n.isFiniteNumber)(e.highWaterMark) && o(a, t, s, l), r.onSuccess(c, a, t, l) })).catch((function (e) { if (self.clearTimeout(i.requestTimeout), !a.aborted) { var n = e.code || 0; r.onError({ code: n, text: e.message }, t, e.details) } })) }, e.getCacheAge = function () { var t = null; if (this.response) { var e = this.response.headers.get("age"); t = e ? parseFloat(e) : null } return t }, e.loadProgressively = function (t, e, r, n, i) { void 0 === n && (n = 0); var s = new a.default, o = t.body.getReader(); return function a() { return o.read().then((function (o) { if (o.done) return s.dataLength && i(e, r, s.flush(), t), Promise.resolve(new ArrayBuffer(0)); var l = o.value, u = l.length; return e.loaded += u, u < n || s.dataLength ? (s.push(l), s.dataLength >= n && i(e, r, s.flush(), t)) : i(e, r, l, t), a() })).catch((function () { return Promise.reject() })) }() }, t }(); function p(t, e) { return new self.Request(t.url, e) } var g = function (t) { var e, r; function n(e, r, n) { var i; return (i = t.call(this, e) || this).code = void 0, i.details = void 0, i.code = r, i.details = n, i } return r = t, (e = n).prototype = Object.create(r.prototype), e.prototype.constructor = e, u(e, r), n }(s(Error)); e.default = f }, "./src/utils/imsc1-ttml-parser.ts":
/*!****************************************!*\
    !*** ./src/utils/imsc1-ttml-parser.ts ***!
    \****************************************/
/*! exports provided: IMSC1_CODEC, parseIMSC1 */function (t, e, r) { r.r(e), r.d(e, "IMSC1_CODEC", (function () { return c })), r.d(e, "parseIMSC1", (function () { return p })); var n = r(/*! ./mp4-tools */"./src/utils/mp4-tools.ts"), i = r(/*! ./vttparser */"./src/utils/vttparser.ts"), a = r(/*! ./vttcue */"./src/utils/vttcue.ts"), s = r(/*! ../demux/id3 */"./src/demux/id3.ts"), o = r(/*! ./timescale-conversion */"./src/utils/timescale-conversion.ts"), l = r(/*! ./webvtt-parser */"./src/utils/webvtt-parser.ts"); function u() { return u = Object.assign || function (t) { for (var e = 1; e < arguments.length; e++) { var r = arguments[e]; for (var n in r) Object.prototype.hasOwnProperty.call(r, n) && (t[n] = r[n]) } return t }, u.apply(this, arguments) } var c = "stpp.ttml.im1t", d = /^(\d{2,}):(\d{2}):(\d{2}):(\d{2})\.?(\d+)?$/, h = /^(\d*(?:\.\d*)?)(h|m|s|ms|f|t)$/, f = { left: "start", center: "center", right: "end", start: "start", end: "end" }; function p(t, e, r, i, c) { var d = Object(n.findBox)(new Uint8Array(t), ["mdat"]); if (0 !== d.length) { var h = d[0], p = Object(s.utf8ArrayToStr)(new Uint8Array(t, h.start, h.end - h.start)), T = Object(o.toTimescaleFromScale)(e, 1, r); try { i(function (t, e) { var r = (new DOMParser).parseFromString(t, "text/xml").getElementsByTagName("tt")[0]; if (!r) throw new Error("Invalid ttml"); var n = { frameRate: 30, subFrameRate: 1, frameRateMultiplier: 0, tickRate: 0 }, i = Object.keys(n).reduce((function (t, e) { return t[e] = r.getAttribute("ttp:" + e) || n[e], t }), {}), s = "preserve" !== r.getAttribute("xml:space"), o = v(g(r, "styling", "style")), c = v(g(r, "layout", "region")), d = g(r, "body", "[begin]"); return [].map.call(d, (function (t) { var r = m(t, s); if (!r || !t.hasAttribute("begin")) return null; var n = E(t.getAttribute("begin"), i), d = E(t.getAttribute("dur"), i), h = E(t.getAttribute("end"), i); if (null === n) throw A(t); if (null === h) { if (null === d) throw A(t); h = n + d } var p = new a.default(n - e, h - e, r); p.id = Object(l.generateCueId)(p.startTime, p.endTime, p.text); var g = c[t.getAttribute("region")], v = o[t.getAttribute("style")]; p.position = 10, p.size = 80; var T = function (t, e) { var r = "http://www.w3.org/ns/ttml#styling"; return ["displayAlign", "textAlign", "color", "backgroundColor", "fontSize", "fontFamily"].reduce((function (n, i) { var a = y(e, r, i) || y(t, r, i); return a && (n[i] = a), n }), {}) }(g, v), b = T.textAlign; if (b) { var k = f[b]; k && (p.lineAlign = k), p.align = b } return u(p, T), p })).filter((function (t) { return null !== t })) }(p, T)) } catch (t) { c(t) } } else c(new Error("Could not parse IMSC1 mdat")) } function g(t, e, r) { var n = t.getElementsByTagName(e)[0]; return n ? [].slice.call(n.querySelectorAll(r)) : [] } function v(t) { return t.reduce((function (t, e) { var r = e.getAttribute("xml:id"); return r && (t[r] = e), t }), {}) } function m(t, e) { return [].slice.call(t.childNodes).reduce((function (t, r, n) { var i; return "br" === r.nodeName && n ? t + "\n" : null !== (i = r.childNodes) && void 0 !== i && i.length ? m(r, e) : e ? t + r.textContent.trim().replace(/\s+/g, " ") : t + r.textContent }), "") } function y(t, e, r) { return t.hasAttributeNS(e, r) ? t.getAttributeNS(e, r) : null } function A(t) { return new Error("Could not parse ttml timestamp " + t) } function E(t, e) { if (!t) return null; var r = Object(i.parseTimeStamp)(t); return null === r && (d.test(t) ? r = function (t, e) { var r = d.exec(t), n = (0 | r[4]) + (0 | r[5]) / e.subFrameRate; return 3600 * (0 | r[1]) + 60 * (0 | r[2]) + (0 | r[3]) + n / e.frameRate }(t, e) : h.test(t) && (r = function (t, e) { var r = h.exec(t), n = Number(r[1]); switch (r[2]) { case "h": return 3600 * n; case "m": return 60 * n; case "ms": return 1e3 * n; case "f": return n / e.frameRate; case "t": return n / e.tickRate }return n }(t, e))), r } }, "./src/utils/logger.ts":
/*!*****************************!*\
    !*** ./src/utils/logger.ts ***!
    \*****************************/
/*! exports provided: enableLogs, logger */function (t, e, r) { r.r(e), r.d(e, "enableLogs", (function () { return o })), r.d(e, "logger", (function () { return l })); var n = function () { }, i = { trace: n, debug: n, log: n, warn: n, info: n, error: n }, a = i; function s(t) { var e = self.console[t]; return e ? e.bind(self.console, "[" + t + "] >") : n } function o(t) { if (self.console && !0 === t || "object" == typeof t) { !function (t) { for (var e = arguments.length, r = new Array(e > 1 ? e - 1 : 0), n = 1; n < e; n++)r[n - 1] = arguments[n]; r.forEach((function (e) { a[e] = t[e] ? t[e].bind(t) : s(e) })) }(t, "debug", "log", "info", "warn", "error"); try { a.log() } catch (t) { a = i } } else a = i } var l = i }, "./src/utils/mediakeys-helper.ts":
/*!***************************************!*\
    !*** ./src/utils/mediakeys-helper.ts ***!
    \***************************************/
/*! exports provided: KeySystems, requestMediaKeySystemAccess */function (t, e, r) { var n; r.r(e), r.d(e, "KeySystems", (function () { return n })), r.d(e, "requestMediaKeySystemAccess", (function () { return i })), function (t) { t.WIDEVINE = "com.widevine.alpha", t.PLAYREADY = "com.microsoft.playready" }(n || (n = {})); var i = "undefined" != typeof self && self.navigator && self.navigator.requestMediaKeySystemAccess ? self.navigator.requestMediaKeySystemAccess.bind(self.navigator) : null }, "./src/utils/mediasource-helper.ts":
/*!*****************************************!*\
    !*** ./src/utils/mediasource-helper.ts ***!
    \*****************************************/
/*! exports provided: getMediaSource */function (t, e, r) { function n() { return self.MediaSource || self.WebKitMediaSource } r.r(e), r.d(e, "getMediaSource", (function () { return n })) }, "./src/utils/mp4-tools.ts":
/*!********************************!*\
    !*** ./src/utils/mp4-tools.ts ***!
    \********************************/
/*! exports provided: bin2str, readUint16, readUint32, writeUint32, findBox, parseSegmentIndex, parseInitSegment, getStartDTS, getDuration, computeRawDurationFromSamples, offsetStartDTS, segmentValidRange, appendUint8Array */function (t, e, r) { r.r(e), r.d(e, "bin2str", (function () { return o })), r.d(e, "readUint16", (function () { return l })), r.d(e, "readUint32", (function () { return u })), r.d(e, "writeUint32", (function () { return c })), r.d(e, "findBox", (function () { return d })), r.d(e, "parseSegmentIndex", (function () { return h })), r.d(e, "parseInitSegment", (function () { return f })), r.d(e, "getStartDTS", (function () { return p })), r.d(e, "getDuration", (function () { return g })), r.d(e, "computeRawDurationFromSamples", (function () { return v })), r.d(e, "offsetStartDTS", (function () { return m })), r.d(e, "segmentValidRange", (function () { return y })), r.d(e, "appendUint8Array", (function () { return A })); var n = r(/*! ./typed-array */"./src/utils/typed-array.ts"), i = r(/*! ../loader/fragment */"./src/loader/fragment.ts"), a = Math.pow(2, 32) - 1, s = [].push; function o(t) { return String.fromCharCode.apply(null, t) } function l(t, e) { "data" in t && (e += t.start, t = t.data); var r = t[e] << 8 | t[e + 1]; return r < 0 ? 65536 + r : r } function u(t, e) { "data" in t && (e += t.start, t = t.data); var r = t[e] << 24 | t[e + 1] << 16 | t[e + 2] << 8 | t[e + 3]; return r < 0 ? 4294967296 + r : r } function c(t, e, r) { "data" in t && (e += t.start, t = t.data), t[e] = r >> 24, t[e + 1] = r >> 16 & 255, t[e + 2] = r >> 8 & 255, t[e + 3] = 255 & r } function d(t, e) { var r, n, i, a = []; if (!e.length) return a; "data" in t ? (r = t.data, n = t.start, i = t.end) : (n = 0, i = (r = t).byteLength); for (var l = n; l < i;) { var c = u(r, l), h = c > 1 ? l + c : i; if (o(r.subarray(l + 4, l + 8)) === e[0]) if (1 === e.length) a.push({ data: r, start: l + 8, end: h }); else { var f = d({ data: r, start: l + 8, end: h }, e.slice(1)); f.length && s.apply(a, f) } l = h } return a } function h(t) { var e = d(t, ["moov"])[0], r = e ? e.end : null, n = d(t, ["sidx"]); if (!n || !n[0]) return null; var i = [], a = n[0], s = a.data[0], o = 0 === s ? 8 : 16, c = u(a, o); o += 4, o += 0 === s ? 8 : 16, o += 2; var h = a.end + 0, f = l(a, o); o += 2; for (var p = 0; p < f; p++) { var g = o, v = u(a, g); g += 4; var m = 2147483647 & v; if (1 == (2147483648 & v) >>> 31) return console.warn("SIDX has hierarchical references (not supported)"), null; var y = u(a, g); g += 4, i.push({ referenceSize: m, subsegmentDuration: y, info: { duration: y / c, start: h, end: h + m - 1 } }), h += m, o = g += 4 } return { earliestPresentationTime: 0, timescale: c, version: s, referencesCount: f, references: i, moovEndOffset: r } } function f(t) { for (var e = [], r = d(t, ["moov", "trak"]), n = 0; n < r.length; n++) { var a = r[n], s = d(a, ["tkhd"])[0]; if (s) { var l = s.data[s.start], c = 0 === l ? 12 : 20, h = u(s, c), f = d(a, ["mdia", "mdhd"])[0]; if (f) { var p = u(f, c = 0 === (l = f.data[f.start]) ? 12 : 20), g = d(a, ["mdia", "hdlr"])[0]; if (g) { var v = o(g.data.subarray(g.start + 8, g.start + 12)), m = { soun: i.ElementaryStreamTypes.AUDIO, vide: i.ElementaryStreamTypes.VIDEO }[v]; if (m) { var y = d(a, ["mdia", "minf", "stbl", "stsd"])[0], A = void 0; y && (A = o(y.data.subarray(y.start + 12, y.start + 16))), e[h] = { timescale: p, type: m }, e[m] = { timescale: p, id: h, codec: A } } } } } } return d(t, ["moov", "mvex", "trex"]).forEach((function (t) { var r = u(t, 4), n = e[r]; n && (n.default = { duration: u(t, 12), flags: u(t, 20) }) })), e } function p(t, e) { return d(e, ["moof", "traf"]).reduce((function (e, r) { var n = d(r, ["tfdt"])[0], i = n.data[n.start], a = d(r, ["tfhd"]).reduce((function (e, r) { var a = u(r, 4), s = t[a]; if (s) { var o = u(n, 4); 1 === i && (o *= Math.pow(2, 32), o += u(n, 8)); var l = o / (s.timescale || 9e4); if (isFinite(l) && (null === e || l < e)) return l } return e }), null); return null !== a && isFinite(a) && (null === e || a < e) ? a : e }), null) || 0 } function g(t, e) { for (var r = 0, n = 0, a = 0, s = d(t, ["moof", "traf"]), o = 0; o < s.length; o++) { var l = s[o], c = d(l, ["tfhd"])[0], f = e[u(c, 4)]; if (f) { var p = f.default, g = u(c, 0) | (null == p ? void 0 : p.flags), m = null == p ? void 0 : p.duration; 8 & g && (m = u(c, 2 & g ? 12 : 8)); for (var y = f.timescale || 9e4, A = d(l, ["trun"]), E = 0; E < A.length; E++)!(r = v(A[E])) && m && (r = m * u(A[E], 4)), f.type === i.ElementaryStreamTypes.VIDEO ? n += r / y : f.type === i.ElementaryStreamTypes.AUDIO && (a += r / y) } } if (0 === n && 0 === a) { var T = h(t); if (null != T && T.references) return T.references.reduce((function (t, e) { return t + e.info.duration || 0 }), 0) } return n || a } function v(t) { var e = u(t, 0), r = 8; 1 & e && (r += 4), 4 & e && (r += 4); for (var n = 0, i = u(t, 4), a = 0; a < i; a++)256 & e && (n += u(t, r), r += 4), 512 & e && (r += 4), 1024 & e && (r += 4), 2048 & e && (r += 4); return n } function m(t, e, r) { d(e, ["moof", "traf"]).forEach((function (e) { d(e, ["tfhd"]).forEach((function (n) { var i = u(n, 4), s = t[i]; if (s) { var o = s.timescale || 9e4; d(e, ["tfdt"]).forEach((function (t) { var e = t.data[t.start], n = u(t, 4); if (0 === e) c(t, 4, n - r * o); else { n *= Math.pow(2, 32), n += u(t, 8), n -= r * o, n = Math.max(n, 0); var i = Math.floor(n / (a + 1)), s = Math.floor(n % (a + 1)); c(t, 4, i), c(t, 8, s) } })) } })) })) } function y(t) { var e = { valid: null, remainder: null }, r = d(t, ["moof"]); if (!r) return e; if (r.length < 2) return e.remainder = t, e; var i = r[r.length - 1]; return e.valid = Object(n.sliceUint8)(t, 0, i.start - 8), e.remainder = Object(n.sliceUint8)(t, i.start - 8), e } function A(t, e) { var r = new Uint8Array(t.length + e.length); return r.set(t), r.set(e, t.length), r } }, "./src/utils/output-filter.ts":
/*!************************************!*\
    !*** ./src/utils/output-filter.ts ***!
    \************************************/
/*! exports provided: default */function (t, e, r) { r.r(e), r.d(e, "default", (function () { return n })); var n = function () { function t(t, e) { this.timelineController = void 0, this.cueRanges = [], this.trackName = void 0, this.startTime = null, this.endTime = null, this.screen = null, this.timelineController = t, this.trackName = e } var e = t.prototype; return e.dispatchCue = function () { null !== this.startTime && (this.timelineController.addCues(this.trackName, this.startTime, this.endTime, this.screen, this.cueRanges), this.startTime = null) }, e.newCue = function (t, e, r) { (null === this.startTime || this.startTime > t) && (this.startTime = t), this.endTime = e, this.screen = r, this.timelineController.createCaptionsTrack(this.trackName) }, e.reset = function () { this.cueRanges = [], this.startTime = null }, t }() }, "./src/utils/texttrack-utils.ts":
/*!**************************************!*\
    !*** ./src/utils/texttrack-utils.ts ***!
    \**************************************/
/*! exports provided: sendAddTrackEvent, addCueToTrack, clearCurrentCues, removeCuesInRange, getCuesInRange */function (t, e, r) { r.r(e), r.d(e, "sendAddTrackEvent", (function () { return i })), r.d(e, "addCueToTrack", (function () { return a })), r.d(e, "clearCurrentCues", (function () { return s })), r.d(e, "removeCuesInRange", (function () { return o })), r.d(e, "getCuesInRange", (function () { return l })); var n = r(/*! ./logger */"./src/utils/logger.ts"); function i(t, e) { var r; try { r = new Event("addtrack") } catch (t) { (r = document.createEvent("Event")).initEvent("addtrack", !1, !1) } r.track = t, e.dispatchEvent(r) } function a(t, e) { var r = t.mode; if ("disabled" === r && (t.mode = "hidden"), t.cues && !t.cues.getCueById(e.id)) try { if (t.addCue(e), !t.cues.getCueById(e.id)) throw new Error("addCue is failed for: " + e) } catch (r) { n.logger.debug("[texttrack-utils]: " + r); var i = new self.TextTrackCue(e.startTime, e.endTime, e.text); i.id = e.id, t.addCue(i) } "disabled" === r && (t.mode = r) } function s(t) { var e = t.mode; if ("disabled" === e && (t.mode = "hidden"), t.cues) for (var r = t.cues.length; r--;)t.removeCue(t.cues[r]); "disabled" === e && (t.mode = e) } function o(t, e, r) { var n = t.mode; if ("disabled" === n && (t.mode = "hidden"), t.cues && t.cues.length > 0) for (var i = l(t.cues, e, r), a = 0; a < i.length; a++)t.removeCue(i[a]); "disabled" === n && (t.mode = n) } function l(t, e, r) { var n = [], i = function (t, e) { if (e < t[0].startTime) return 0; var r = t.length - 1; if (e > t[r].endTime) return -1; for (var n = 0, i = r; n <= i;) { var a = Math.floor((i + n) / 2); if (e < t[a].startTime) i = a - 1; else { if (!(e > t[a].startTime && n < r)) return a; n = a + 1 } } return t[n].startTime - e < e - t[i].startTime ? n : i }(t, e); if (i > -1) for (var a = i, s = t.length; a < s; a++) { var o = t[a]; if (o.startTime >= e && o.endTime <= r) n.push(o); else if (o.startTime > r) return n } return n } }, "./src/utils/time-ranges.ts":
/*!**********************************!*\
    !*** ./src/utils/time-ranges.ts ***!
    \**********************************/
/*! exports provided: default */function (t, e, r) { r.r(e), e.default = { toString: function (t) { for (var e = "", r = t.length, n = 0; n < r; n++)e += "[" + t.start(n).toFixed(3) + "," + t.end(n).toFixed(3) + "]"; return e } } }, "./src/utils/timescale-conversion.ts":
/*!*******************************************!*\
    !*** ./src/utils/timescale-conversion.ts ***!
    \*******************************************/
/*! exports provided: toTimescaleFromBase, toTimescaleFromScale, toMsFromMpegTsClock, toMpegTsClockFromTimescale */function (t, e, r) { function n(t, e, r, n) { void 0 === r && (r = 1), void 0 === n && (n = !1); var i = t * e * r; return n ? Math.round(i) : i } function i(t, e, r, i) { return void 0 === r && (r = 1), void 0 === i && (i = !1), n(t, e, 1 / r, i) } function a(t, e) { return void 0 === e && (e = !1), n(t, 1e3, 1 / 9e4, e) } function s(t, e) { return void 0 === e && (e = 1), n(t, 9e4, 1 / e) } r.r(e), r.d(e, "toTimescaleFromBase", (function () { return n })), r.d(e, "toTimescaleFromScale", (function () { return i })), r.d(e, "toMsFromMpegTsClock", (function () { return a })), r.d(e, "toMpegTsClockFromTimescale", (function () { return s })) }, "./src/utils/typed-array.ts":
/*!**********************************!*\
    !*** ./src/utils/typed-array.ts ***!
    \**********************************/
/*! exports provided: sliceUint8 */function (t, e, r) { function n(t, e, r) { return Uint8Array.prototype.slice ? t.slice(e, r) : new Uint8Array(Array.prototype.slice.call(t, e, r)) } r.r(e), r.d(e, "sliceUint8", (function () { return n })) }, "./src/utils/vttcue.ts":
/*!*****************************!*\
    !*** ./src/utils/vttcue.ts ***!
    \*****************************/
/*! exports provided: default */function (t, e, r) { r.r(e), e.default = function () { if ("undefined" != typeof self && self.VTTCue) return self.VTTCue; var t = ["", "lr", "rl"], e = ["start", "middle", "end", "left", "right"]; function r(t, e) { if ("string" != typeof e) return !1; if (!Array.isArray(t)) return !1; var r = e.toLowerCase(); return !!~t.indexOf(r) && r } function n(t) { return r(e, t) } function i(t) { for (var e = arguments.length, r = new Array(e > 1 ? e - 1 : 0), n = 1; n < e; n++)r[n - 1] = arguments[n]; for (var i = 1; i < arguments.length; i++) { var a = arguments[i]; for (var s in a) t[s] = a[s] } return t } function a(e, a, s) { var o = this, l = { enumerable: !0 }; o.hasBeenReset = !1; var u = "", c = !1, d = e, h = a, f = s, p = null, g = "", v = !0, m = "auto", y = "start", A = 50, E = "middle", T = 50, b = "middle"; Object.defineProperty(o, "id", i({}, l, { get: function () { return u }, set: function (t) { u = "" + t } })), Object.defineProperty(o, "pauseOnExit", i({}, l, { get: function () { return c }, set: function (t) { c = !!t } })), Object.defineProperty(o, "startTime", i({}, l, { get: function () { return d }, set: function (t) { if ("number" != typeof t) throw new TypeError("Start time must be set to a number."); d = t, this.hasBeenReset = !0 } })), Object.defineProperty(o, "endTime", i({}, l, { get: function () { return h }, set: function (t) { if ("number" != typeof t) throw new TypeError("End time must be set to a number."); h = t, this.hasBeenReset = !0 } })), Object.defineProperty(o, "text", i({}, l, { get: function () { return f }, set: function (t) { f = "" + t, this.hasBeenReset = !0 } })), Object.defineProperty(o, "region", i({}, l, { get: function () { return p }, set: function (t) { p = t, this.hasBeenReset = !0 } })), Object.defineProperty(o, "vertical", i({}, l, { get: function () { return g }, set: function (e) { var n = function (e) { return r(t, e) }(e); if (!1 === n) throw new SyntaxError("An invalid or illegal string was specified."); g = n, this.hasBeenReset = !0 } })), Object.defineProperty(o, "snapToLines", i({}, l, { get: function () { return v }, set: function (t) { v = !!t, this.hasBeenReset = !0 } })), Object.defineProperty(o, "line", i({}, l, { get: function () { return m }, set: function (t) { if ("number" != typeof t && "auto" !== t) throw new SyntaxError("An invalid number or illegal string was specified."); m = t, this.hasBeenReset = !0 } })), Object.defineProperty(o, "lineAlign", i({}, l, { get: function () { return y }, set: function (t) { var e = n(t); if (!e) throw new SyntaxError("An invalid or illegal string was specified."); y = e, this.hasBeenReset = !0 } })), Object.defineProperty(o, "position", i({}, l, { get: function () { return A }, set: function (t) { if (t < 0 || t > 100) throw new Error("Position must be between 0 and 100."); A = t, this.hasBeenReset = !0 } })), Object.defineProperty(o, "positionAlign", i({}, l, { get: function () { return E }, set: function (t) { var e = n(t); if (!e) throw new SyntaxError("An invalid or illegal string was specified."); E = e, this.hasBeenReset = !0 } })), Object.defineProperty(o, "size", i({}, l, { get: function () { return T }, set: function (t) { if (t < 0 || t > 100) throw new Error("Size must be between 0 and 100."); T = t, this.hasBeenReset = !0 } })), Object.defineProperty(o, "align", i({}, l, { get: function () { return b }, set: function (t) { var e = n(t); if (!e) throw new SyntaxError("An invalid or illegal string was specified."); b = e, this.hasBeenReset = !0 } })), o.displayState = void 0 } return a.prototype.getCueAsHTML = function () { return self.WebVTT.convertCueToDOMTree(self, this.text) }, a }() }, "./src/utils/vttparser.ts":
/*!********************************!*\
    !*** ./src/utils/vttparser.ts ***!
    \********************************/
/*! exports provided: parseTimeStamp, fixLineBreaks, VTTParser */function (t, e, r) { r.r(e), r.d(e, "parseTimeStamp", (function () { return a })), r.d(e, "fixLineBreaks", (function () { return d })), r.d(e, "VTTParser", (function () { return h })); var n = r(/*! ./vttcue */"./src/utils/vttcue.ts"), i = function () { function t() { } return t.prototype.decode = function (t, e) { if (!t) return ""; if ("string" != typeof t) throw new Error("Error - expected string data."); return decodeURIComponent(encodeURIComponent(t)) }, t }(); function a(t) { function e(t, e, r, n) { return 3600 * (0 | t) + 60 * (0 | e) + (0 | r) + parseFloat(n || 0) } var r = t.match(/^(?:(\d+):)?(\d{2}):(\d{2})(\.\d+)?/); return r ? parseFloat(r[2]) > 59 ? e(r[2], r[3], 0, r[4]) : e(r[1], r[2], r[3], r[4]) : null } var s = function () { function t() { this.values = Object.create(null) } var e = t.prototype; return e.set = function (t, e) { this.get(t) || "" === e || (this.values[t] = e) }, e.get = function (t, e, r) { return r ? this.has(t) ? this.values[t] : e[r] : this.has(t) ? this.values[t] : e }, e.has = function (t) { return t in this.values }, e.alt = function (t, e, r) { for (var n = 0; n < r.length; ++n)if (e === r[n]) { this.set(t, e); break } }, e.integer = function (t, e) { /^-?\d+$/.test(e) && this.set(t, parseInt(e, 10)) }, e.percent = function (t, e) { if (/^([\d]{1,3})(\.[\d]*)?%$/.test(e)) { var r = parseFloat(e); if (r >= 0 && r <= 100) return this.set(t, r), !0 } return !1 }, t }(); function o(t, e, r, n) { var i = n ? t.split(n) : [t]; for (var a in i) if ("string" == typeof i[a]) { var s = i[a].split(r); 2 === s.length && e(s[0], s[1]) } } var l = new n.default(0, 0, ""), u = "middle" === l.align ? "middle" : "center"; function c(t, e, r) { var n = t; function i() { var e = a(t); if (null === e) throw new Error("Malformed timestamp: " + n); return t = t.replace(/^[^\sa-zA-Z-]+/, ""), e } function c() { t = t.replace(/^\s+/, "") } if (c(), e.startTime = i(), c(), "--\x3e" !== t.substr(0, 3)) throw new Error("Malformed time stamp (time stamps must be separated by '--\x3e'): " + n); t = t.substr(3), c(), e.endTime = i(), c(), function (t, e) { var n = new s; o(t, (function (t, e) { var i; switch (t) { case "region": for (var a = r.length - 1; a >= 0; a--)if (r[a].id === e) { n.set(t, r[a].region); break } break; case "vertical": n.alt(t, e, ["rl", "lr"]); break; case "line": i = e.split(","), n.integer(t, i[0]), n.percent(t, i[0]) && n.set("snapToLines", !1), n.alt(t, i[0], ["auto"]), 2 === i.length && n.alt("lineAlign", i[1], ["start", u, "end"]); break; case "position": i = e.split(","), n.percent(t, i[0]), 2 === i.length && n.alt("positionAlign", i[1], ["start", u, "end", "line-left", "line-right", "auto"]); break; case "size": n.percent(t, e); break; case "align": n.alt(t, e, ["start", u, "end", "left", "right"]) } }), /:/, /\s/), e.region = n.get("region", null), e.vertical = n.get("vertical", ""); var i = n.get("line", "auto"); "auto" === i && -1 === l.line && (i = -1), e.line = i, e.lineAlign = n.get("lineAlign", "start"), e.snapToLines = n.get("snapToLines", !0), e.size = n.get("size", 100), e.align = n.get("align", u); var a = n.get("position", "auto"); "auto" === a && 50 === l.position && (a = "start" === e.align || "left" === e.align ? 0 : "end" === e.align || "right" === e.align ? 100 : 50), e.position = a }(t, e) } function d(t) { return t.replace(/<br(?: \/)?>/gi, "\n") } var h = function () { function t() { this.state = "INITIAL", this.buffer = "", this.decoder = new i, this.regionList = [], this.cue = null, this.oncue = void 0, this.onparsingerror = void 0, this.onflush = void 0 } var e = t.prototype; return e.parse = function (t) { var e = this; function r() { var t = e.buffer, r = 0; for (t = d(t); r < t.length && "\r" !== t[r] && "\n" !== t[r];)++r; var n = t.substr(0, r); return "\r" === t[r] && ++r, "\n" === t[r] && ++r, e.buffer = t.substr(r), n } t && (e.buffer += e.decoder.decode(t, { stream: !0 })); try { var i = ""; if ("INITIAL" === e.state) { if (!/\r\n|\n/.test(e.buffer)) return this; var a = (i = r()).match(/^(ï»¿)?WEBVTT([ \t].*)?$/); if (!a || !a[0]) throw new Error("Malformed WebVTT signature."); e.state = "HEADER" } for (var s = !1; e.buffer;) { if (!/\r\n|\n/.test(e.buffer)) return this; switch (s ? s = !1 : i = r(), e.state) { case "HEADER": /:/.test(i) ? o(i, (function (t, e) { }), /:/) : i || (e.state = "ID"); continue; case "NOTE": i || (e.state = "ID"); continue; case "ID": if (/^NOTE($|[ \t])/.test(i)) { e.state = "NOTE"; break } if (!i) continue; if (e.cue = new n.default(0, 0, ""), e.state = "CUE", -1 === i.indexOf("--\x3e")) { e.cue.id = i; continue } case "CUE": if (!e.cue) { e.state = "BADCUE"; continue } try { c(i, e.cue, e.regionList) } catch (t) { e.cue = null, e.state = "BADCUE"; continue } e.state = "CUETEXT"; continue; case "CUETEXT": var l = -1 !== i.indexOf("--\x3e"); if (!i || l && (s = !0)) { e.oncue && e.cue && e.oncue(e.cue), e.cue = null, e.state = "ID"; continue } if (null === e.cue) continue; e.cue.text && (e.cue.text += "\n"), e.cue.text += i; continue; case "BADCUE": i || (e.state = "ID") } } } catch (t) { "CUETEXT" === e.state && e.cue && e.oncue && e.oncue(e.cue), e.cue = null, e.state = "INITIAL" === e.state ? "BADWEBVTT" : "BADCUE" } return this }, e.flush = function () { var t = this; try { if ((t.cue || "HEADER" === t.state) && (t.buffer += "\n\n", t.parse()), "INITIAL" === t.state || "BADWEBVTT" === t.state) throw new Error("Malformed WebVTT signature.") } catch (e) { t.onparsingerror && t.onparsingerror(e) } return t.onflush && t.onflush(), this }, t }() }, "./src/utils/webvtt-parser.ts":
/*!************************************!*\
    !*** ./src/utils/webvtt-parser.ts ***!
    \************************************/
/*! exports provided: generateCueId, parseWebVTT */function (t, e, r) { r.r(e), r.d(e, "generateCueId", (function () { return d })), r.d(e, "parseWebVTT", (function () { return h })); var n = r(/*! ./src/polyfills/number */"./src/polyfills/number.ts"), i = r(/*! ./vttparser */"./src/utils/vttparser.ts"), a = r(/*! ../demux/id3 */"./src/demux/id3.ts"), s = r(/*! ./timescale-conversion */"./src/utils/timescale-conversion.ts"), o = r(/*! ../remux/mp4-remuxer */"./src/remux/mp4-remuxer.ts"), l = /\r\n|\n\r|\n|\r/g, u = function (t, e, r) { return void 0 === r && (r = 0), t.substr(r, e.length) === e }, c = function (t) { for (var e = 5381, r = t.length; r;)e = 33 * e ^ t.charCodeAt(--r); return (e >>> 0).toString() }; function d(t, e, r) { return c(t.toString()) + c(e.toString()) + c(r) } function h(t, e, r, c, h, f, p, g) { var v, m = new i.VTTParser, y = Object(a.utf8ArrayToStr)(new Uint8Array(t)).trim().replace(l, "\n").split("\n"), A = [], E = Object(s.toMpegTsClockFromTimescale)(e, r), T = "00:00.000", b = 0, k = 0, S = !0, _ = !1; m.oncue = function (t) { var e = c[h], r = c.ccOffset, n = (b - E) / 9e4; if (null != e && e.new && (void 0 !== k ? r = c.ccOffset = e.start : function (t, e, r) { var n = t[e], i = t[n.prevCC]; if (!i || !i.new && n.new) return t.ccOffset = t.presentationOffset = n.start, void (n.new = !1); for (; null !== (a = i) && void 0 !== a && a.new;) { var a; t.ccOffset += n.start - i.start, n.new = !1, i = t[(n = i).prevCC] } t.presentationOffset = r }(c, h, n)), n && (r = n - c.presentationOffset), _) { var i = t.endTime - t.startTime, a = Object(o.normalizePts)(9e4 * (t.startTime + r - k), 9e4 * f) / 9e4; t.startTime = a, t.endTime = a + i } var s = t.text.trim(); t.text = decodeURIComponent(encodeURIComponent(s)), t.id || (t.id = d(t.startTime, t.endTime, s)), t.endTime > 0 && A.push(t) }, m.onparsingerror = function (t) { v = t }, m.onflush = function () { v ? g(v) : p(A) }, y.forEach((function (t) { if (S) { if (u(t, "X-TIMESTAMP-MAP=")) { S = !1, _ = !0, t.substr(16).split(",").forEach((function (t) { u(t, "LOCAL:") ? T = t.substr(6) : u(t, "MPEGTS:") && (b = parseInt(t.substr(7))) })); try { k = function (t) { var e = parseInt(t.substr(-3)), r = parseInt(t.substr(-6, 2)), i = parseInt(t.substr(-9, 2)), a = t.length > 9 ? parseInt(t.substr(0, t.indexOf(":"))) : 0; if (!(Object(n.isFiniteNumber)(e) && Object(n.isFiniteNumber)(r) && Object(n.isFiniteNumber)(i) && Object(n.isFiniteNumber)(a))) throw Error("Malformed X-TIMESTAMP-MAP: Local:" + t); return e += 1e3 * r, (e += 6e4 * i) + 36e5 * a }(T) / 1e3 } catch (t) { _ = !1, v = t } return } "" === t && (S = !1) } m.parse(t + "\n") })), m.flush() } }, "./src/utils/xhr-loader.ts":
/*!*********************************!*\
    !*** ./src/utils/xhr-loader.ts ***!
    \*********************************/
/*! exports provided: default */function (t, e, r) { r.r(e); var n = r(/*! ../utils/logger */"./src/utils/logger.ts"), i = r(/*! ../loader/load-stats */"./src/loader/load-stats.ts"), a = /^age:\s*[\d.]+\s*$/m, s = function () { function t(t) { this.xhrSetup = void 0, this.requestTimeout = void 0, this.retryTimeout = void 0, this.retryDelay = void 0, this.config = null, this.callbacks = null, this.context = void 0, this.loader = null, this.stats = void 0, this.xhrSetup = t ? t.xhrSetup : null, this.stats = new i.LoadStats, this.retryDelay = 0 } var e = t.prototype; return e.destroy = function () { this.callbacks = null, this.abortInternal(), this.loader = null, this.config = null }, e.abortInternal = function () { var t = this.loader; self.clearTimeout(this.requestTimeout), self.clearTimeout(this.retryTimeout), t && (t.onreadystatechange = null, t.onprogress = null, 4 !== t.readyState && (this.stats.aborted = !0, t.abort())) }, e.abort = function () { var t; this.abortInternal(), null !== (t = this.callbacks) && void 0 !== t && t.onAbort && this.callbacks.onAbort(this.stats, this.context, this.loader) }, e.load = function (t, e, r) { if (this.stats.loading.start) throw new Error("Loader can only be used once."); this.stats.loading.start = self.performance.now(), this.context = t, this.config = e, this.callbacks = r, this.retryDelay = e.retryDelay, this.loadInternal() }, e.loadInternal = function () { var t = this.config, e = this.context; if (t) { var r = this.loader = new self.XMLHttpRequest, n = this.stats; n.loading.first = 0, n.loaded = 0; var i = this.xhrSetup; try { if (i) try { i(r, e.url) } catch (t) { r.open("GET", e.url, !0), i(r, e.url) } r.readyState || r.open("GET", e.url, !0); var a = this.context.headers; if (a) for (var s in a) r.setRequestHeader(s, a[s]) } catch (t) { return void this.callbacks.onError({ code: r.status, text: t.message }, e, r) } e.rangeEnd && r.setRequestHeader("Range", "bytes=" + e.rangeStart + "-" + (e.rangeEnd - 1)), r.onreadystatechange = this.readystatechange.bind(this), r.onprogress = this.loadprogress.bind(this), r.responseType = e.responseType, self.clearTimeout(this.requestTimeout), this.requestTimeout = self.setTimeout(this.loadtimeout.bind(this), t.timeout), r.send() } }, e.readystatechange = function () { var t = this.context, e = this.loader, r = this.stats; if (t && e) { var i = e.readyState, a = this.config; if (!r.aborted && i >= 2) if (self.clearTimeout(this.requestTimeout), 0 === r.loading.first && (r.loading.first = Math.max(self.performance.now(), r.loading.start)), 4 === i) { e.onreadystatechange = null, e.onprogress = null; var s = e.status; if (s >= 200 && s < 300) { var o, l; if (r.loading.end = Math.max(self.performance.now(), r.loading.first), l = "arraybuffer" === t.responseType ? (o = e.response).byteLength : (o = e.responseText).length, r.loaded = r.total = l, !this.callbacks) return; var u = this.callbacks.onProgress; if (u && u(r, t, o, e), !this.callbacks) return; var c = { url: e.responseURL, data: o }; this.callbacks.onSuccess(c, r, t, e) } else r.retry >= a.maxRetry || s >= 400 && s < 499 ? (n.logger.error(s + " while loading " + t.url), this.callbacks.onError({ code: s, text: e.statusText }, t, e)) : (n.logger.warn(s + " while loading " + t.url + ", retrying in " + this.retryDelay + "..."), this.abortInternal(), this.loader = null, self.clearTimeout(this.retryTimeout), this.retryTimeout = self.setTimeout(this.loadInternal.bind(this), this.retryDelay), this.retryDelay = Math.min(2 * this.retryDelay, a.maxRetryDelay), r.retry++) } else self.clearTimeout(this.requestTimeout), this.requestTimeout = self.setTimeout(this.loadtimeout.bind(this), a.timeout) } }, e.loadtimeout = function () { n.logger.warn("timeout while loading " + this.context.url); var t = this.callbacks; t && (this.abortInternal(), t.onTimeout(this.stats, this.context, this.loader)) }, e.loadprogress = function (t) { var e = this.stats; e.loaded = t.loaded, t.lengthComputable && (e.total = t.total) }, e.getCacheAge = function () { var t = null; if (this.loader && a.test(this.loader.getAllResponseHeaders())) { var e = this.loader.getResponseHeader("age"); t = e ? parseFloat(e) : null } return t }, t }(); e.default = s }
            }).default
        }, t.exports = r())
    }, dr(fr = { path: hr, exports: {}, require: function (t, e) { return function () { throw new Error("Dynamic requires are not currently supported by @rollup/plugin-commonjs") }(null == e && fr.path) } }, fr.exports), fr.exports), gr = cr(pr), vr = J.now, mr = J.assign, yr = J.listContainsIgnoreCase, Ar = function (t) { !function (t, e) { if ("function" != typeof e && null !== e) throw new TypeError("Super expression must either be null or a function"); t.prototype = Object.create(e && e.prototype, { constructor: { value: t, writable: !0, configurable: !0 } }), e && ir(t, e) }(a, t); var e, r, n, i = sr(a); function a() { var t; Qe(this, a); for (var e = arguments.length, r = new Array(e), n = 0; n < e; n++)r[n] = arguments[n]; return (t = i.call.apply(i, [this].concat(r))).options.playback = rr(rr({}, t.options), t.options.playback), t._minDvrSize = void 0 === t.options.hlsMinimumDvrSize ? 60 : t.options.hlsMinimumDvrSize, t._extrapolatedWindowNumSegments = t.options.playback && void 0 !== t.options.playback.extrapolatedWindowNumSegments ? t.options.playback.extrapolatedWindowNumSegments : 2, t._playbackType = Dt.VOD, t._lastTimeUpdate = { current: 0, total: 0 }, t._lastDuration = null, t._playableRegionStartTime = 0, t._localStartTimeCorrelation = null, t._localEndTimeCorrelation = null, t._playableRegionDuration = 0, t._programDateTime = 0, t._durationExcludesAfterLiveSyncPoint = !1, t._segmentTargetDuration = null, t._playlistType = null, t._recoverAttemptsRemaining = t.options.hlsRecoverAttempts || 16, t } return e = a, r = [{ key: "name", get: function () { return "hls" } }, { key: "supportedVersion", get: function () { return { min: "0.4.17" } } }, { key: "levels", get: function () { return this._levels || [] } }, { key: "currentLevel", get: function () { return null === this._currentLevel || void 0 === this._currentLevel ? -1 : this._currentLevel }, set: function (t) { this._currentLevel = t, this.trigger(ct.PLAYBACK_LEVEL_SWITCH_START), this.options.playback.hlsUseNextLevel ? this._hls.nextLevel = this._currentLevel : this._hls.currentLevel = this._currentLevel } }, { key: "isReady", get: function () { return this._isReadyState } }, { key: "_startTime", get: function () { return this._playbackType === Dt.LIVE && "EVENT" !== this._playlistType ? this._extrapolatedStartTime : this._playableRegionStartTime } }, { key: "_now", get: function () { return vr() } }, { key: "_extrapolatedStartTime", get: function () { if (!this._localStartTimeCorrelation) return this._playableRegionStartTime; var t = this._localStartTimeCorrelation, e = this._now - t.local, r = (t.remote + e) / 1e3; return Math.min(r, this._playableRegionStartTime + this._extrapolatedWindowDuration) } }, { key: "_extrapolatedEndTime", get: function () { var t = this._playableRegionStartTime + this._playableRegionDuration; if (!this._localEndTimeCorrelation) return t; var e = this._localEndTimeCorrelation, r = this._now - e.local, n = (e.remote + r) / 1e3; return Math.max(t - this._extrapolatedWindowDuration, Math.min(n, t)) } }, { key: "_duration", get: function () { return this._extrapolatedEndTime - this._startTime } }, { key: "_extrapolatedWindowDuration", get: function () { return null === this._segmentTargetDuration ? 0 : this._extrapolatedWindowNumSegments * this._segmentTargetDuration } }, { key: "bandwidthEstimate", get: function () { return this._hls && this._hls.bandwidthEstimate } }, { key: "_setup", value: function () { var t = this; this._ccIsSetup = !1, this._ccTracksUpdated = !1, this._hls = new gr(mr({}, this.options.playback.hlsjsConfig)), this._hls.once(gr.Events.MEDIA_ATTACHED, (function () { return t._hls.loadSource(t.options.src) })), this._hls.on(gr.Events.LEVEL_LOADED, (function (e, r) { return t._updatePlaybackType(e, r) })), this._hls.on(gr.Events.LEVEL_UPDATED, (function (e, r) { return t._onLevelUpdated(e, r) })), this._hls.on(gr.Events.LEVEL_SWITCHING, (function (e, r) { return t._onLevelSwitch(e, r) })), this._hls.on(gr.Events.FRAG_LOADED, (function (e, r) { return t._onFragmentLoaded(e, r) })), this._hls.on(gr.Events.ERROR, (function (e, r) { return t._onHLSJSError(e, r) })), this._hls.on(gr.Events.SUBTITLE_TRACK_LOADED, (function (e, r) { return t._onSubtitleLoaded(e, r) })), this._hls.on(gr.Events.SUBTITLE_TRACKS_UPDATED, (function () { return t._ccTracksUpdated = !0 })), this._hls.attachMedia(this.el) } }, { key: "render", value: function () { return this._ready(), or(nr(a.prototype), "render", this).call(this) } }, { key: "_ready", value: function () { this._isReadyState = !0, this.trigger(ct.PLAYBACK_READY, this.name) } }, { key: "_recover", value: function (t, e, r) { if (this._recoveredDecodingError) if (this._recoveredAudioCodecError) { at.error("hlsjs: failed to recover", { evt: t, data: e }), r.level = _t.Levels.FATAL; var n = this.createError(r); this.trigger(ct.PLAYBACK_ERROR, n), this.stop() } else this._recoveredAudioCodecError = !0, this._hls.swapAudioCodec(), this._hls.recoverMediaError(); else this._recoveredDecodingError = !0, this._hls.recoverMediaError() } }, { key: "_setupSrc", value: function (t) { } }, { key: "_startTimeUpdateTimer", value: function () { var t = this; this._timeUpdateTimer || (this._timeUpdateTimer = setInterval((function () { t._onDurationChange(), t._onTimeUpdate() }), 100)) } }, { key: "_stopTimeUpdateTimer", value: function () { this._timeUpdateTimer && (clearInterval(this._timeUpdateTimer), this._timeUpdateTimer = null) } }, { key: "getProgramDateTime", value: function () { return this._programDateTime } }, { key: "getDuration", value: function () { return this._duration } }, { key: "getCurrentTime", value: function () { return Math.max(0, this.el.currentTime - this._startTime) } }, { key: "getStartTimeOffset", value: function () { return this._startTime } }, { key: "seekPercentage", value: function (t) { var e = this._duration; t > 0 && (e = this._duration * (t / 100)), this.seek(e) } }, { key: "seek", value: function (t) { t < 0 && (at.warn("Attempt to seek to a negative time. Resetting to live point. Use seekToLivePoint() to seek to the live point."), t = this.getDuration()), this.dvrEnabled && this._updateDvr(t < this.getDuration() - 3), t += this._startTime, this.el.currentTime = t } }, { key: "seekToLivePoint", value: function () { this.seek(this.getDuration()) } }, { key: "_updateDvr", value: function (t) { this.trigger(ct.PLAYBACK_DVR, t), this.trigger(ct.PLAYBACK_STATS_ADD, { dvr: t }) } }, { key: "_updateSettings", value: function () { this._playbackType === Dt.VOD ? this.settings.left = ["playpause", "position", "duration"] : this.dvrEnabled ? this.settings.left = ["playpause"] : this.settings.left = ["playstop"], this.settings.seekEnabled = this.isSeekEnabled(), this.trigger(ct.PLAYBACK_SETTINGSUPDATE) } }, { key: "_onHLSJSError", value: function (t, e) { var r, n = { code: "".concat(e.type, "_").concat(e.details), description: "".concat(this.name, " error: type: ").concat(e.type, ", details: ").concat(e.details), raw: e }; if (e.response && (n.description += ", response: ".concat(JSON.stringify(e.response))), e.fatal) if (this._recoverAttemptsRemaining > 0) switch (this._recoverAttemptsRemaining -= 1, e.type) { case gr.ErrorTypes.NETWORK_ERROR: switch (e.details) { case gr.ErrorDetails.MANIFEST_LOAD_ERROR: case gr.ErrorDetails.MANIFEST_LOAD_TIMEOUT: case gr.ErrorDetails.MANIFEST_PARSING_ERROR: case gr.ErrorDetails.LEVEL_LOAD_ERROR: case gr.ErrorDetails.LEVEL_LOAD_TIMEOUT: at.error("hlsjs: unrecoverable network fatal error.", { evt: t, data: e }), r = this.createError(n), this.trigger(ct.PLAYBACK_ERROR, r), this.stop(); break; default: at.warn("hlsjs: trying to recover from network error.", { evt: t, data: e }), n.level = _t.Levels.WARN, this._hls.startLoad() }break; case gr.ErrorTypes.MEDIA_ERROR: at.warn("hlsjs: trying to recover from media error.", { evt: t, data: e }), n.level = _t.Levels.WARN, this._recover(t, e, n); break; default: at.error("hlsjs: could not recover from error.", { evt: t, data: e }), r = this.createError(n), this.trigger(ct.PLAYBACK_ERROR, r), this.stop() } else at.error("hlsjs: could not recover from error after maximum number of attempts.", { evt: t, data: e }), r = this.createError(n), this.trigger(ct.PLAYBACK_ERROR, r), this.stop(); else { if (this.options.playback.triggerFatalErrorOnResourceDenied && this._keyIsDenied(e)) return at.error("hlsjs: could not load decrypt key.", { evt: t, data: e }), r = this.createError(n), this.trigger(ct.PLAYBACK_ERROR, r), void this.stop(); n.level = _t.Levels.WARN, at.warn("hlsjs: non-fatal error occurred", { evt: t, data: e }) } } }, { key: "_keyIsDenied", value: function (t) { return t.type === gr.ErrorTypes.NETWORK_ERROR && t.details === gr.ErrorDetails.KEY_LOAD_ERROR && t.response && t.response.code >= 400 } }, { key: "_onTimeUpdate", value: function () { var t = { current: this.getCurrentTime(), total: this.getDuration(), firstFragDateTime: this.getProgramDateTime() }; this._lastTimeUpdate && t.current === this._lastTimeUpdate.current && t.total === this._lastTimeUpdate.total || (this._lastTimeUpdate = t, this.trigger(ct.PLAYBACK_TIMEUPDATE, t, this.name)) } }, { key: "_onDurationChange", value: function () { var t = this.getDuration(); this._lastDuration !== t && (this._lastDuration = t, or(nr(a.prototype), "_onDurationChange", this).call(this)) } }, { key: "_onProgress", value: function () { if (this.el.buffered.length) { for (var t = [], e = 0, r = 0; r < this.el.buffered.length; r++)t = [].concat(lr(t), [{ start: Math.max(0, this.el.buffered.start(r) - this._playableRegionStartTime), end: Math.max(0, this.el.buffered.end(r) - this._playableRegionStartTime) }]), this.el.currentTime >= t[r].start && this.el.currentTime <= t[r].end && (e = r); var n = { start: t[e].start, current: t[e].end, total: this.getDuration() }; this.trigger(ct.PLAYBACK_PROGRESS, n, t) } } }, { key: "play", value: function () { this._hls || this._setup(), or(nr(a.prototype), "play", this).call(this), this._startTimeUpdateTimer() } }, { key: "pause", value: function () { this._hls && (this.el.pause(), this.dvrEnabled && this._updateDvr(!0)) } }, { key: "stop", value: function () { this._stopTimeUpdateTimer(), this._hls && (or(nr(a.prototype), "stop", this).call(this), this._hls.destroy(), delete this._hls) } }, { key: "destroy", value: function () { this._stopTimeUpdateTimer(), this._hls && (this._hls.destroy(), delete this._hls), or(nr(a.prototype), "destroy", this).call(this) } }, { key: "_updatePlaybackType", value: function (t, e) { this._playbackType = e.details.live ? Dt.LIVE : Dt.VOD, this._onLevelUpdated(t, e), this._ccTracksUpdated && this._playbackType === Dt.LIVE && this.hasClosedCaptionsTracks && this._onSubtitleLoaded() } }, { key: "_fillLevels", value: function () { this._levels = this._hls.levels.map((function (t, e) { return { id: e, level: t, label: "".concat(t.bitrate / 1e3, "Kbps") } })), this.trigger(ct.PLAYBACK_LEVELS_AVAILABLE, this._levels) } }, { key: "_onLevelUpdated", value: function (t, e) { this._segmentTargetDuration = e.details.targetduration, this._playlistType = e.details.type || null; var r = !1, n = !1, i = e.details.fragments, a = this._playableRegionStartTime, s = this._playableRegionDuration; if (0 !== i.length) { if (i[0].rawProgramDateTime && (this._programDateTime = i[0].rawProgramDateTime), this._playableRegionStartTime !== i[0].start && (r = !0, this._playableRegionStartTime = i[0].start), r) if (this._localStartTimeCorrelation) { var o = this._localStartTimeCorrelation, l = this._now - o.local, u = (o.remote + l) / 1e3; u < i[0].start ? this._localStartTimeCorrelation = { local: this._now, remote: 1e3 * i[0].start } : u > a + this._extrapolatedWindowDuration && (this._localStartTimeCorrelation = { local: this._now, remote: 1e3 * Math.max(i[0].start, a + this._extrapolatedWindowDuration) }) } else this._localStartTimeCorrelation = { local: this._now, remote: 1e3 * (i[0].start + this._extrapolatedWindowDuration / 2) }; var c = e.details.totalduration; if (this._playbackType === Dt.LIVE) { var d = e.details.targetduration * ((this.options.playback.hlsjsConfig || {}).liveSyncDurationCount || gr.DefaultConfig.liveSyncDurationCount); d <= c ? (c -= d, this._durationExcludesAfterLiveSyncPoint = !0) : this._durationExcludesAfterLiveSyncPoint = !1 } c !== this._playableRegionDuration && (n = !0, this._playableRegionDuration = c); var h = i[0].start + c, f = a + s; if (h !== f) if (this._localEndTimeCorrelation) { var p = this._localEndTimeCorrelation, g = this._now - p.local, v = (p.remote + g) / 1e3; v > h ? this._localEndTimeCorrelation = { local: this._now, remote: 1e3 * h } : v < h - this._extrapolatedWindowDuration ? this._localEndTimeCorrelation = { local: this._now, remote: 1e3 * (h - this._extrapolatedWindowDuration) } : v > f && (this._localEndTimeCorrelation = { local: this._now, remote: 1e3 * f }) } else this._localEndTimeCorrelation = { local: this._now, remote: 1e3 * h }; n && this._onDurationChange(), r && this._onProgress() } } }, { key: "_onFragmentLoaded", value: function (t, e) { this.trigger(ct.PLAYBACK_FRAGMENT_LOADED, e) } }, { key: "_onSubtitleLoaded", value: function () { if (!this._ccIsSetup) { this.trigger(ct.PLAYBACK_SUBTITLE_AVAILABLE); var t = this._playbackType === Dt.LIVE ? -1 : this.closedCaptionsTrackId; this.closedCaptionsTrackId = t, this._ccIsSetup = !0 } } }, { key: "_onLevelSwitch", value: function (t, e) { this.levels.length || this._fillLevels(), this.trigger(ct.PLAYBACK_LEVEL_SWITCH_END), this.trigger(ct.PLAYBACK_LEVEL_SWITCH, e); var r = this._hls.levels[e.level]; r && (this.highDefinition = r.height >= 720 || r.bitrate / 1e3 >= 2e3, this.trigger(ct.PLAYBACK_HIGHDEFINITIONUPDATE, this.highDefinition), this.trigger(ct.PLAYBACK_BITRATE, { height: r.height, width: r.width, bandwidth: r.bitrate, bitrate: r.bitrate, level: e.level })) } }, { key: "dvrEnabled", get: function () { return this._durationExcludesAfterLiveSyncPoint && this._duration >= this._minDvrSize && this.getPlaybackType() === Dt.LIVE } }, { key: "getPlaybackType", value: function () { return this._playbackType } }, { key: "isSeekEnabled", value: function () { return this._playbackType === Dt.VOD || this.dvrEnabled } }], n = [{ key: "HLSJS", get: function () { return gr } }], r && Je(e.prototype, r), n && Je(e, n), a }(zt); return Ar.canPlay = function (t, e) { var r = t.split("?")[0].match(/.*\.(.*)$/) || [], n = r.length > 1 && "m3u8" === r[1].toLowerCase() || yr(e, ["application/vnd.apple.mpegurl", "application/x-mpegURL"]); return !(!gr.isSupported() || !n) }, Ze.Loader.registerPlayback(Ar), e(e({}, Ze), {}, { HLS: Ar })
}();
//# sourceMappingURL=clappr.min.js.map
